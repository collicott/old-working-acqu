//
// File generated by rootcint at Fri May 17 07:31:09 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIcristinadIAcquRootdI4v6dI2012dO05dO19dIacqudIrootdIsrcdIUserDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "UserDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TA2TrackLine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TA2TrackLine(void *p = 0);
   static void *newArray_TA2TrackLine(Long_t size, void *p);
   static void delete_TA2TrackLine(void *p);
   static void deleteArray_TA2TrackLine(void *p);
   static void destruct_TA2TrackLine(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TrackLine*)
   {
      ::TA2TrackLine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TrackLine >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TrackLine", ::TA2TrackLine::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TrackLine.h", 11,
                  typeid(::TA2TrackLine), DefineBehavior(ptr, ptr),
                  &::TA2TrackLine::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TrackLine) );
      instance.SetNew(&new_TA2TrackLine);
      instance.SetNewArray(&newArray_TA2TrackLine);
      instance.SetDelete(&delete_TA2TrackLine);
      instance.SetDeleteArray(&deleteArray_TA2TrackLine);
      instance.SetDestructor(&destruct_TA2TrackLine);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TrackLine*)
   {
      return GenerateInitInstanceLocal((::TA2TrackLine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TrackLine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MwpcTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TA2MwpcTrack(void *p = 0);
   static void *newArray_TA2MwpcTrack(Long_t size, void *p);
   static void delete_TA2MwpcTrack(void *p);
   static void deleteArray_TA2MwpcTrack(void *p);
   static void destruct_TA2MwpcTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MwpcTrack*)
   {
      ::TA2MwpcTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MwpcTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MwpcTrack", ::TA2MwpcTrack::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2MwpcTrack.h", 9,
                  typeid(::TA2MwpcTrack), DefineBehavior(ptr, ptr),
                  &::TA2MwpcTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MwpcTrack) );
      instance.SetNew(&new_TA2MwpcTrack);
      instance.SetNewArray(&newArray_TA2MwpcTrack);
      instance.SetDelete(&delete_TA2MwpcTrack);
      instance.SetDeleteArray(&deleteArray_TA2MwpcTrack);
      instance.SetDestructor(&destruct_TA2MwpcTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MwpcTrack*)
   {
      return GenerateInitInstanceLocal((::TA2MwpcTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MwpcTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2TAPS_BaF2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2TAPS_BaF2(void *p);
   static void deleteArray_TA2TAPS_BaF2(void *p);
   static void destruct_TA2TAPS_BaF2(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TAPS_BaF2*)
   {
      ::TA2TAPS_BaF2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TAPS_BaF2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TAPS_BaF2", ::TA2TAPS_BaF2::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS_BaF2.h", 25,
                  typeid(::TA2TAPS_BaF2), DefineBehavior(ptr, ptr),
                  &::TA2TAPS_BaF2::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TAPS_BaF2) );
      instance.SetDelete(&delete_TA2TAPS_BaF2);
      instance.SetDeleteArray(&deleteArray_TA2TAPS_BaF2);
      instance.SetDestructor(&destruct_TA2TAPS_BaF2);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TAPS_BaF2*)
   {
      return GenerateInitInstanceLocal((::TA2TAPS_BaF2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TAPS_BaF2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2PlasticPID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2PlasticPID(void *p);
   static void deleteArray_TA2PlasticPID(void *p);
   static void destruct_TA2PlasticPID(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2PlasticPID*)
   {
      ::TA2PlasticPID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2PlasticPID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2PlasticPID", ::TA2PlasticPID::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2PlasticPID.h", 24,
                  typeid(::TA2PlasticPID), DefineBehavior(ptr, ptr),
                  &::TA2PlasticPID::Dictionary, isa_proxy, 4,
                  sizeof(::TA2PlasticPID) );
      instance.SetDelete(&delete_TA2PlasticPID);
      instance.SetDeleteArray(&deleteArray_TA2PlasticPID);
      instance.SetDestructor(&destruct_TA2PlasticPID);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2PlasticPID*)
   {
      return GenerateInitInstanceLocal((::TA2PlasticPID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Calorimeter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Calorimeter(void *p);
   static void deleteArray_TA2Calorimeter(void *p);
   static void destruct_TA2Calorimeter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Calorimeter*)
   {
      ::TA2Calorimeter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Calorimeter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Calorimeter", ::TA2Calorimeter::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Calorimeter.h", 25,
                  typeid(::TA2Calorimeter), DefineBehavior(ptr, ptr),
                  &::TA2Calorimeter::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Calorimeter) );
      instance.SetDelete(&delete_TA2Calorimeter);
      instance.SetDeleteArray(&deleteArray_TA2Calorimeter);
      instance.SetDestructor(&destruct_TA2Calorimeter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Calorimeter*)
   {
      return GenerateInitInstanceLocal((::TA2Calorimeter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Calorimeter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Physics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Physics(void *p);
   static void deleteArray_TA2Physics(void *p);
   static void destruct_TA2Physics(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Physics*)
   {
      ::TA2Physics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Physics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Physics", ::TA2Physics::Class_Version(), "/home/a2acqu/4v6/acqu/AcquRoot/src/TA2Physics.h", 30,
                  typeid(::TA2Physics), DefineBehavior(ptr, ptr),
                  &::TA2Physics::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Physics) );
      instance.SetDelete(&delete_TA2Physics);
      instance.SetDeleteArray(&deleteArray_TA2Physics);
      instance.SetDestructor(&destruct_TA2Physics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Physics*)
   {
      return GenerateInitInstanceLocal((::TA2Physics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Physics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2TAPS2009_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2TAPS2009(void *p);
   static void deleteArray_TA2TAPS2009(void *p);
   static void destruct_TA2TAPS2009(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TAPS2009*)
   {
      ::TA2TAPS2009 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TAPS2009 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TAPS2009", ::TA2TAPS2009::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS2009.h", 42,
                  typeid(::TA2TAPS2009), DefineBehavior(ptr, ptr),
                  &::TA2TAPS2009::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TAPS2009) );
      instance.SetDelete(&delete_TA2TAPS2009);
      instance.SetDeleteArray(&deleteArray_TA2TAPS2009);
      instance.SetDestructor(&destruct_TA2TAPS2009);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TAPS2009*)
   {
      return GenerateInitInstanceLocal((::TA2TAPS2009*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TAPS2009*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2UserAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2UserAnalysis(void *p);
   static void deleteArray_TA2UserAnalysis(void *p);
   static void destruct_TA2UserAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2UserAnalysis*)
   {
      ::TA2UserAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2UserAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2UserAnalysis", ::TA2UserAnalysis::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2UserAnalysis.h", 23,
                  typeid(::TA2UserAnalysis), DefineBehavior(ptr, ptr),
                  &::TA2UserAnalysis::Dictionary, isa_proxy, 4,
                  sizeof(::TA2UserAnalysis) );
      instance.SetDelete(&delete_TA2UserAnalysis);
      instance.SetDeleteArray(&deleteArray_TA2UserAnalysis);
      instance.SetDestructor(&destruct_TA2UserAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2UserAnalysis*)
   {
      return GenerateInitInstanceLocal((::TA2UserAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2WCLayerSven_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2WCLayerSven(void *p);
   static void deleteArray_TA2WCLayerSven(void *p);
   static void destruct_TA2WCLayerSven(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2WCLayerSven*)
   {
      ::TA2WCLayerSven *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2WCLayerSven >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2WCLayerSven", ::TA2WCLayerSven::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2WCLayerSven.h", 24,
                  typeid(::TA2WCLayerSven), DefineBehavior(ptr, ptr),
                  &::TA2WCLayerSven::Dictionary, isa_proxy, 4,
                  sizeof(::TA2WCLayerSven) );
      instance.SetDelete(&delete_TA2WCLayerSven);
      instance.SetDeleteArray(&deleteArray_TA2WCLayerSven);
      instance.SetDestructor(&destruct_TA2WCLayerSven);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2WCLayerSven*)
   {
      return GenerateInitInstanceLocal((::TA2WCLayerSven*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2WCLayerSven*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CylStripSven_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CylStripSven(void *p);
   static void deleteArray_TA2CylStripSven(void *p);
   static void destruct_TA2CylStripSven(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CylStripSven*)
   {
      ::TA2CylStripSven *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CylStripSven >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CylStripSven", ::TA2CylStripSven::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylStripSven.h", 18,
                  typeid(::TA2CylStripSven), DefineBehavior(ptr, ptr),
                  &::TA2CylStripSven::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CylStripSven) );
      instance.SetDelete(&delete_TA2CylStripSven);
      instance.SetDeleteArray(&deleteArray_TA2CylStripSven);
      instance.SetDestructor(&destruct_TA2CylStripSven);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CylStripSven*)
   {
      return GenerateInitInstanceLocal((::TA2CylStripSven*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CylStripSven*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Taps2009LE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Taps2009LE(void *p);
   static void deleteArray_TA2Taps2009LE(void *p);
   static void destruct_TA2Taps2009LE(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Taps2009LE*)
   {
      ::TA2Taps2009LE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Taps2009LE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Taps2009LE", ::TA2Taps2009LE::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Taps2009LE.h", 38,
                  typeid(::TA2Taps2009LE), DefineBehavior(ptr, ptr),
                  &::TA2Taps2009LE::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Taps2009LE) );
      instance.SetDelete(&delete_TA2Taps2009LE);
      instance.SetDeleteArray(&deleteArray_TA2Taps2009LE);
      instance.SetDestructor(&destruct_TA2Taps2009LE);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Taps2009LE*)
   {
      return GenerateInitInstanceLocal((::TA2Taps2009LE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Taps2009LE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CylMWPC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CylMWPC(void *p);
   static void deleteArray_TA2CylMWPC(void *p);
   static void destruct_TA2CylMWPC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CylMWPC*)
   {
      ::TA2CylMWPC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CylMWPC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CylMWPC", ::TA2CylMWPC::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylMWPC.h", 39,
                  typeid(::TA2CylMWPC), DefineBehavior(ptr, ptr),
                  &::TA2CylMWPC::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CylMWPC) );
      instance.SetDelete(&delete_TA2CylMWPC);
      instance.SetDeleteArray(&deleteArray_TA2CylMWPC);
      instance.SetDestructor(&destruct_TA2CylMWPC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CylMWPC*)
   {
      return GenerateInitInstanceLocal((::TA2CylMWPC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CylMWPC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CrystalBall_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CrystalBall(void *p);
   static void deleteArray_TA2CrystalBall(void *p);
   static void destruct_TA2CrystalBall(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CrystalBall*)
   {
      ::TA2CrystalBall *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CrystalBall >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CrystalBall", ::TA2CrystalBall::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CrystalBall.h", 34,
                  typeid(::TA2CrystalBall), DefineBehavior(ptr, ptr),
                  &::TA2CrystalBall::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CrystalBall) );
      instance.SetDelete(&delete_TA2CrystalBall);
      instance.SetDeleteArray(&deleteArray_TA2CrystalBall);
      instance.SetDestructor(&destruct_TA2CrystalBall);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CrystalBall*)
   {
      return GenerateInitInstanceLocal((::TA2CrystalBall*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CrystalBall*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2PhotoPhysics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2PhotoPhysics(void *p);
   static void deleteArray_TA2PhotoPhysics(void *p);
   static void destruct_TA2PhotoPhysics(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2PhotoPhysics*)
   {
      ::TA2PhotoPhysics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2PhotoPhysics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2PhotoPhysics", ::TA2PhotoPhysics::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2PhotoPhysics.h", 45,
                  typeid(::TA2PhotoPhysics), DefineBehavior(ptr, ptr),
                  &::TA2PhotoPhysics::Dictionary, isa_proxy, 4,
                  sizeof(::TA2PhotoPhysics) );
      instance.SetDelete(&delete_TA2PhotoPhysics);
      instance.SetDeleteArray(&deleteArray_TA2PhotoPhysics);
      instance.SetDestructor(&destruct_TA2PhotoPhysics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2PhotoPhysics*)
   {
      return GenerateInitInstanceLocal((::TA2PhotoPhysics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2PhotoPhysics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2ThreshPi0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2ThreshPi0(void *p);
   static void deleteArray_TA2ThreshPi0(void *p);
   static void destruct_TA2ThreshPi0(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2ThreshPi0*)
   {
      ::TA2ThreshPi0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2ThreshPi0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2ThreshPi0", ::TA2ThreshPi0::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2ThreshPi0.h", 52,
                  typeid(::TA2ThreshPi0), DefineBehavior(ptr, ptr),
                  &::TA2ThreshPi0::Dictionary, isa_proxy, 4,
                  sizeof(::TA2ThreshPi0) );
      instance.SetDelete(&delete_TA2ThreshPi0);
      instance.SetDeleteArray(&deleteArray_TA2ThreshPi0);
      instance.SetDestructor(&destruct_TA2ThreshPi0);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2ThreshPi0*)
   {
      return GenerateInitInstanceLocal((::TA2ThreshPi0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2ThreshPi0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2UserPhysics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2UserPhysics(void *p);
   static void deleteArray_TA2UserPhysics(void *p);
   static void destruct_TA2UserPhysics(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2UserPhysics*)
   {
      ::TA2UserPhysics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2UserPhysics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2UserPhysics", ::TA2UserPhysics::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2UserPhysics.h", 20,
                  typeid(::TA2UserPhysics), DefineBehavior(ptr, ptr),
                  &::TA2UserPhysics::Dictionary, isa_proxy, 4,
                  sizeof(::TA2UserPhysics) );
      instance.SetDelete(&delete_TA2UserPhysics);
      instance.SetDeleteArray(&deleteArray_TA2UserPhysics);
      instance.SetDestructor(&destruct_TA2UserPhysics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2UserPhysics*)
   {
      return GenerateInitInstanceLocal((::TA2UserPhysics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2UserPhysics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CylMwpcStrip_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CylMwpcStrip(void *p);
   static void deleteArray_TA2CylMwpcStrip(void *p);
   static void destruct_TA2CylMwpcStrip(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CylMwpcStrip*)
   {
      ::TA2CylMwpcStrip *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CylMwpcStrip >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CylMwpcStrip", ::TA2CylMwpcStrip::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylMwpcStrip.h", 9,
                  typeid(::TA2CylMwpcStrip), DefineBehavior(ptr, ptr),
                  &::TA2CylMwpcStrip::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CylMwpcStrip) );
      instance.SetDelete(&delete_TA2CylMwpcStrip);
      instance.SetDeleteArray(&deleteArray_TA2CylMwpcStrip);
      instance.SetDestructor(&destruct_TA2CylMwpcStrip);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CylMwpcStrip*)
   {
      return GenerateInitInstanceLocal((::TA2CylMwpcStrip*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CylMwpcStrip*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CylMwpcWire_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CylMwpcWire(void *p);
   static void deleteArray_TA2CylMwpcWire(void *p);
   static void destruct_TA2CylMwpcWire(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CylMwpcWire*)
   {
      ::TA2CylMwpcWire *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CylMwpcWire >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CylMwpcWire", ::TA2CylMwpcWire::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylMwpcWire.h", 8,
                  typeid(::TA2CylMwpcWire), DefineBehavior(ptr, ptr),
                  &::TA2CylMwpcWire::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CylMwpcWire) );
      instance.SetDelete(&delete_TA2CylMwpcWire);
      instance.SetDeleteArray(&deleteArray_TA2CylMwpcWire);
      instance.SetDestructor(&destruct_TA2CylMwpcWire);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CylMwpcWire*)
   {
      return GenerateInitInstanceLocal((::TA2CylMwpcWire*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CylMwpcWire*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MwpcIntersection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TA2MwpcIntersection(void *p = 0);
   static void *newArray_TA2MwpcIntersection(Long_t size, void *p);
   static void delete_TA2MwpcIntersection(void *p);
   static void deleteArray_TA2MwpcIntersection(void *p);
   static void destruct_TA2MwpcIntersection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MwpcIntersection*)
   {
      ::TA2MwpcIntersection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MwpcIntersection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MwpcIntersection", ::TA2MwpcIntersection::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2MwpcIntersection.h", 11,
                  typeid(::TA2MwpcIntersection), DefineBehavior(ptr, ptr),
                  &::TA2MwpcIntersection::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MwpcIntersection) );
      instance.SetNew(&new_TA2MwpcIntersection);
      instance.SetNewArray(&newArray_TA2MwpcIntersection);
      instance.SetDelete(&delete_TA2MwpcIntersection);
      instance.SetDeleteArray(&deleteArray_TA2MwpcIntersection);
      instance.SetDestructor(&destruct_TA2MwpcIntersection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MwpcIntersection*)
   {
      return GenerateInitInstanceLocal((::TA2MwpcIntersection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MwpcIntersection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CylMwpc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CylMwpc(void *p);
   static void deleteArray_TA2CylMwpc(void *p);
   static void destruct_TA2CylMwpc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CylMwpc*)
   {
      ::TA2CylMwpc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CylMwpc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CylMwpc", ::TA2CylMwpc::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylMwpc.h", 29,
                  typeid(::TA2CylMwpc), DefineBehavior(ptr, ptr),
                  &::TA2CylMwpc::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CylMwpc) );
      instance.SetDelete(&delete_TA2CylMwpc);
      instance.SetDeleteArray(&deleteArray_TA2CylMwpc);
      instance.SetDestructor(&destruct_TA2CylMwpc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CylMwpc*)
   {
      return GenerateInitInstanceLocal((::TA2CylMwpc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CylMwpc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CalArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CalArray(void *p);
   static void deleteArray_TA2CalArray(void *p);
   static void destruct_TA2CalArray(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CalArray*)
   {
      ::TA2CalArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CalArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CalArray", ::TA2CalArray::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CalArray.h", 31,
                  typeid(::TA2CalArray), DefineBehavior(ptr, ptr),
                  &::TA2CalArray::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CalArray) );
      instance.SetDelete(&delete_TA2CalArray);
      instance.SetDeleteArray(&deleteArray_TA2CalArray);
      instance.SetDestructor(&destruct_TA2CalArray);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CalArray*)
   {
      return GenerateInitInstanceLocal((::TA2CalArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CalArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CentralTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TA2CentralTrack(void *p = 0);
   static void *newArray_TA2CentralTrack(Long_t size, void *p);
   static void delete_TA2CentralTrack(void *p);
   static void deleteArray_TA2CentralTrack(void *p);
   static void destruct_TA2CentralTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CentralTrack*)
   {
      ::TA2CentralTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CentralTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CentralTrack", ::TA2CentralTrack::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CentralTrack.h", 9,
                  typeid(::TA2CentralTrack), DefineBehavior(ptr, ptr),
                  &::TA2CentralTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CentralTrack) );
      instance.SetNew(&new_TA2CentralTrack);
      instance.SetNewArray(&newArray_TA2CentralTrack);
      instance.SetDelete(&delete_TA2CentralTrack);
      instance.SetDeleteArray(&deleteArray_TA2CentralTrack);
      instance.SetDestructor(&destruct_TA2CentralTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CentralTrack*)
   {
      return GenerateInitInstanceLocal((::TA2CentralTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CentralTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CentralApparatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CentralApparatus(void *p);
   static void deleteArray_TA2CentralApparatus(void *p);
   static void destruct_TA2CentralApparatus(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CentralApparatus*)
   {
      ::TA2CentralApparatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CentralApparatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CentralApparatus", ::TA2CentralApparatus::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CentralApparatus.h", 34,
                  typeid(::TA2CentralApparatus), DefineBehavior(ptr, ptr),
                  &::TA2CentralApparatus::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CentralApparatus) );
      instance.SetDelete(&delete_TA2CentralApparatus);
      instance.SetDeleteArray(&deleteArray_TA2CentralApparatus);
      instance.SetDestructor(&destruct_TA2CentralApparatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CentralApparatus*)
   {
      return GenerateInitInstanceLocal((::TA2CentralApparatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CentralApparatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TA2Event(void *p = 0);
   static void *newArray_TA2Event(Long_t size, void *p);
   static void delete_TA2Event(void *p);
   static void deleteArray_TA2Event(void *p);
   static void destruct_TA2Event(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Event*)
   {
      ::TA2Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Event", ::TA2Event::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Event.h", 12,
                  typeid(::TA2Event), DefineBehavior(ptr, ptr),
                  &::TA2Event::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Event) );
      instance.SetNew(&new_TA2Event);
      instance.SetNewArray(&newArray_TA2Event);
      instance.SetDelete(&delete_TA2Event);
      instance.SetDeleteArray(&deleteArray_TA2Event);
      instance.SetDestructor(&destruct_TA2Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Event*)
   {
      return GenerateInitInstanceLocal((::TA2Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Trigger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Trigger(void *p);
   static void deleteArray_TA2Trigger(void *p);
   static void destruct_TA2Trigger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Trigger*)
   {
      ::TA2Trigger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Trigger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Trigger", ::TA2Trigger::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Trigger.h", 38,
                  typeid(::TA2Trigger), DefineBehavior(ptr, ptr),
                  &::TA2Trigger::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Trigger) );
      instance.SetDelete(&delete_TA2Trigger);
      instance.SetDeleteArray(&deleteArray_TA2Trigger);
      instance.SetDestructor(&destruct_TA2Trigger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Trigger*)
   {
      return GenerateInitInstanceLocal((::TA2Trigger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Trigger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CylWireSven_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CylWireSven(void *p);
   static void deleteArray_TA2CylWireSven(void *p);
   static void destruct_TA2CylWireSven(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CylWireSven*)
   {
      ::TA2CylWireSven *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CylWireSven >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CylWireSven", ::TA2CylWireSven::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylWireSven.h", 18,
                  typeid(::TA2CylWireSven), DefineBehavior(ptr, ptr),
                  &::TA2CylWireSven::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CylWireSven) );
      instance.SetDelete(&delete_TA2CylWireSven);
      instance.SetDeleteArray(&deleteArray_TA2CylWireSven);
      instance.SetDestructor(&destruct_TA2CylWireSven);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CylWireSven*)
   {
      return GenerateInitInstanceLocal((::TA2CylWireSven*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CylWireSven*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2TAPS_PbWO4_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2TAPS_PbWO4(void *p);
   static void deleteArray_TA2TAPS_PbWO4(void *p);
   static void destruct_TA2TAPS_PbWO4(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TAPS_PbWO4*)
   {
      ::TA2TAPS_PbWO4 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TAPS_PbWO4 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TAPS_PbWO4", ::TA2TAPS_PbWO4::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS_PbWO4.h", 22,
                  typeid(::TA2TAPS_PbWO4), DefineBehavior(ptr, ptr),
                  &::TA2TAPS_PbWO4::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TAPS_PbWO4) );
      instance.SetDelete(&delete_TA2TAPS_PbWO4);
      instance.SetDeleteArray(&deleteArray_TA2TAPS_PbWO4);
      instance.SetDestructor(&destruct_TA2TAPS_PbWO4);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TAPS_PbWO4*)
   {
      return GenerateInitInstanceLocal((::TA2TAPS_PbWO4*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TAPS_PbWO4*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2TAPS2008_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2TAPS2008(void *p);
   static void deleteArray_TA2TAPS2008(void *p);
   static void destruct_TA2TAPS2008(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TAPS2008*)
   {
      ::TA2TAPS2008 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TAPS2008 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TAPS2008", ::TA2TAPS2008::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS2008.h", 40,
                  typeid(::TA2TAPS2008), DefineBehavior(ptr, ptr),
                  &::TA2TAPS2008::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TAPS2008) );
      instance.SetDelete(&delete_TA2TAPS2008);
      instance.SetDeleteArray(&deleteArray_TA2TAPS2008);
      instance.SetDestructor(&destruct_TA2TAPS2008);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TAPS2008*)
   {
      return GenerateInitInstanceLocal((::TA2TAPS2008*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TAPS2008*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Compton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Compton(void *p);
   static void deleteArray_TA2Compton(void *p);
   static void destruct_TA2Compton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Compton*)
   {
      ::TA2Compton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Compton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Compton", ::TA2Compton::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Compton.h", 52,
                  typeid(::TA2Compton), DefineBehavior(ptr, ptr),
                  &::TA2Compton::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Compton) );
      instance.SetDelete(&delete_TA2Compton);
      instance.SetDeleteArray(&deleteArray_TA2Compton);
      instance.SetDestructor(&destruct_TA2Compton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Compton*)
   {
      return GenerateInitInstanceLocal((::TA2Compton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Compton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2FPMicro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2FPMicro(void *p);
   static void deleteArray_TA2FPMicro(void *p);
   static void destruct_TA2FPMicro(void *p);
   static void streamer_TA2FPMicro(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2FPMicro*)
   {
      ::TA2FPMicro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2FPMicro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2FPMicro", ::TA2FPMicro::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2FPMicro.h", 19,
                  typeid(::TA2FPMicro), DefineBehavior(ptr, ptr),
                  &::TA2FPMicro::Dictionary, isa_proxy, 0,
                  sizeof(::TA2FPMicro) );
      instance.SetDelete(&delete_TA2FPMicro);
      instance.SetDeleteArray(&deleteArray_TA2FPMicro);
      instance.SetDestructor(&destruct_TA2FPMicro);
      instance.SetStreamerFunc(&streamer_TA2FPMicro);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2FPMicro*)
   {
      return GenerateInitInstanceLocal((::TA2FPMicro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2GenericApp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2GenericApp(void *p);
   static void deleteArray_TA2GenericApp(void *p);
   static void destruct_TA2GenericApp(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2GenericApp*)
   {
      ::TA2GenericApp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2GenericApp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2GenericApp", ::TA2GenericApp::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2GenericApp.h", 21,
                  typeid(::TA2GenericApp), DefineBehavior(ptr, ptr),
                  &::TA2GenericApp::Dictionary, isa_proxy, 4,
                  sizeof(::TA2GenericApp) );
      instance.SetDelete(&delete_TA2GenericApp);
      instance.SetDeleteArray(&deleteArray_TA2GenericApp);
      instance.SetDestructor(&destruct_TA2GenericApp);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2GenericApp*)
   {
      return GenerateInitInstanceLocal((::TA2GenericApp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Efficiency_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Efficiency(void *p);
   static void deleteArray_TA2Efficiency(void *p);
   static void destruct_TA2Efficiency(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Efficiency*)
   {
      ::TA2Efficiency *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Efficiency >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Efficiency", ::TA2Efficiency::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Efficiency.h", 53,
                  typeid(::TA2Efficiency), DefineBehavior(ptr, ptr),
                  &::TA2Efficiency::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Efficiency) );
      instance.SetDelete(&delete_TA2Efficiency);
      instance.SetDeleteArray(&deleteArray_TA2Efficiency);
      instance.SetDestructor(&destruct_TA2Efficiency);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Efficiency*)
   {
      return GenerateInitInstanceLocal((::TA2Efficiency*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Efficiency*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Cristina_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Cristina(void *p);
   static void deleteArray_TA2Cristina(void *p);
   static void destruct_TA2Cristina(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Cristina*)
   {
      ::TA2Cristina *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Cristina >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Cristina", ::TA2Cristina::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Cristina.h", 33,
                  typeid(::TA2Cristina), DefineBehavior(ptr, ptr),
                  &::TA2Cristina::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Cristina) );
      instance.SetDelete(&delete_TA2Cristina);
      instance.SetDeleteArray(&deleteArray_TA2Cristina);
      instance.SetDestructor(&destruct_TA2Cristina);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Cristina*)
   {
      return GenerateInitInstanceLocal((::TA2Cristina*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Cristina*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2TAPS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2TAPS(void *p);
   static void deleteArray_TA2TAPS(void *p);
   static void destruct_TA2TAPS(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TAPS*)
   {
      ::TA2TAPS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TAPS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TAPS", ::TA2TAPS::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS.h", 25,
                  typeid(::TA2TAPS), DefineBehavior(ptr, ptr),
                  &::TA2TAPS::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TAPS) );
      instance.SetDelete(&delete_TA2TAPS);
      instance.SetDeleteArray(&deleteArray_TA2TAPS);
      instance.SetDestructor(&destruct_TA2TAPS);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TAPS*)
   {
      return GenerateInitInstanceLocal((::TA2TAPS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TAPS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2UserControl_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2UserControl(void *p);
   static void deleteArray_TA2UserControl(void *p);
   static void destruct_TA2UserControl(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2UserControl*)
   {
      ::TA2UserControl *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2UserControl >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2UserControl", ::TA2UserControl::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2UserControl.h", 21,
                  typeid(::TA2UserControl), DefineBehavior(ptr, ptr),
                  &::TA2UserControl::Dictionary, isa_proxy, 4,
                  sizeof(::TA2UserControl) );
      instance.SetDelete(&delete_TA2UserControl);
      instance.SetDeleteArray(&deleteArray_TA2UserControl);
      instance.SetDestructor(&destruct_TA2UserControl);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2UserControl*)
   {
      return GenerateInitInstanceLocal((::TA2UserControl*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2UserControl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2ParaPerpTest_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2ParaPerpTest(void *p);
   static void deleteArray_TA2ParaPerpTest(void *p);
   static void destruct_TA2ParaPerpTest(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2ParaPerpTest*)
   {
      ::TA2ParaPerpTest *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2ParaPerpTest >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2ParaPerpTest", ::TA2ParaPerpTest::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2ParaPerpTest.h", 16,
                  typeid(::TA2ParaPerpTest), DefineBehavior(ptr, ptr),
                  &::TA2ParaPerpTest::Dictionary, isa_proxy, 4,
                  sizeof(::TA2ParaPerpTest) );
      instance.SetDelete(&delete_TA2ParaPerpTest);
      instance.SetDeleteArray(&deleteArray_TA2ParaPerpTest);
      instance.SetDestructor(&destruct_TA2ParaPerpTest);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2ParaPerpTest*)
   {
      return GenerateInitInstanceLocal((::TA2ParaPerpTest*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2ParaPerpTest*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CosmicCal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CosmicCal(void *p);
   static void deleteArray_TA2CosmicCal(void *p);
   static void destruct_TA2CosmicCal(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CosmicCal*)
   {
      ::TA2CosmicCal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CosmicCal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CosmicCal", ::TA2CosmicCal::Class_Version(), "/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CosmicCal.h", 19,
                  typeid(::TA2CosmicCal), DefineBehavior(ptr, ptr),
                  &::TA2CosmicCal::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CosmicCal) );
      instance.SetDelete(&delete_TA2CosmicCal);
      instance.SetDeleteArray(&deleteArray_TA2CosmicCal);
      instance.SetDestructor(&destruct_TA2CosmicCal);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CosmicCal*)
   {
      return GenerateInitInstanceLocal((::TA2CosmicCal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CosmicCal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TA2TrackLine::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TrackLine::Class_Name()
{
   return "TA2TrackLine";
}

//______________________________________________________________________________
const char *TA2TrackLine::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TrackLine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TrackLine::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TrackLine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TrackLine::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TrackLine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TrackLine::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TrackLine*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MwpcTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MwpcTrack::Class_Name()
{
   return "TA2MwpcTrack";
}

//______________________________________________________________________________
const char *TA2MwpcTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MwpcTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MwpcTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MwpcTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MwpcTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MwpcTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MwpcTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MwpcTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2TAPS_BaF2::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TAPS_BaF2::Class_Name()
{
   return "TA2TAPS_BaF2";
}

//______________________________________________________________________________
const char *TA2TAPS_BaF2::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS_BaF2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TAPS_BaF2::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS_BaF2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TAPS_BaF2::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS_BaF2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TAPS_BaF2::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS_BaF2*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2PlasticPID::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2PlasticPID::Class_Name()
{
   return "TA2PlasticPID";
}

//______________________________________________________________________________
const char *TA2PlasticPID::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2PlasticPID::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2PlasticPID::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2PlasticPID::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Calorimeter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Calorimeter::Class_Name()
{
   return "TA2Calorimeter";
}

//______________________________________________________________________________
const char *TA2Calorimeter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Calorimeter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Calorimeter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Calorimeter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Calorimeter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Calorimeter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Calorimeter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Calorimeter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Physics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Physics::Class_Name()
{
   return "TA2Physics";
}

//______________________________________________________________________________
const char *TA2Physics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Physics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Physics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Physics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Physics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Physics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Physics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Physics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2TAPS2009::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TAPS2009::Class_Name()
{
   return "TA2TAPS2009";
}

//______________________________________________________________________________
const char *TA2TAPS2009::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS2009*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TAPS2009::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS2009*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TAPS2009::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS2009*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TAPS2009::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS2009*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2UserAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2UserAnalysis::Class_Name()
{
   return "TA2UserAnalysis";
}

//______________________________________________________________________________
const char *TA2UserAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2UserAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2UserAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2UserAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2WCLayerSven::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2WCLayerSven::Class_Name()
{
   return "TA2WCLayerSven";
}

//______________________________________________________________________________
const char *TA2WCLayerSven::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2WCLayerSven*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2WCLayerSven::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2WCLayerSven*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2WCLayerSven::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2WCLayerSven*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2WCLayerSven::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2WCLayerSven*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CylStripSven::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CylStripSven::Class_Name()
{
   return "TA2CylStripSven";
}

//______________________________________________________________________________
const char *TA2CylStripSven::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylStripSven*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CylStripSven::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylStripSven*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CylStripSven::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylStripSven*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CylStripSven::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylStripSven*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Taps2009LE::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Taps2009LE::Class_Name()
{
   return "TA2Taps2009LE";
}

//______________________________________________________________________________
const char *TA2Taps2009LE::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Taps2009LE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Taps2009LE::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Taps2009LE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Taps2009LE::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Taps2009LE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Taps2009LE::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Taps2009LE*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CylMWPC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CylMWPC::Class_Name()
{
   return "TA2CylMWPC";
}

//______________________________________________________________________________
const char *TA2CylMWPC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMWPC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CylMWPC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMWPC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CylMWPC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMWPC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CylMWPC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMWPC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CrystalBall::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CrystalBall::Class_Name()
{
   return "TA2CrystalBall";
}

//______________________________________________________________________________
const char *TA2CrystalBall::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CrystalBall*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CrystalBall::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CrystalBall*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CrystalBall::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CrystalBall*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CrystalBall::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CrystalBall*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2PhotoPhysics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2PhotoPhysics::Class_Name()
{
   return "TA2PhotoPhysics";
}

//______________________________________________________________________________
const char *TA2PhotoPhysics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2PhotoPhysics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2PhotoPhysics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2PhotoPhysics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2PhotoPhysics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2PhotoPhysics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2PhotoPhysics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2PhotoPhysics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2ThreshPi0::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2ThreshPi0::Class_Name()
{
   return "TA2ThreshPi0";
}

//______________________________________________________________________________
const char *TA2ThreshPi0::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2ThreshPi0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2ThreshPi0::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2ThreshPi0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2ThreshPi0::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2ThreshPi0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2ThreshPi0::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2ThreshPi0*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2UserPhysics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2UserPhysics::Class_Name()
{
   return "TA2UserPhysics";
}

//______________________________________________________________________________
const char *TA2UserPhysics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserPhysics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2UserPhysics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserPhysics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2UserPhysics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserPhysics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2UserPhysics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserPhysics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CylMwpcStrip::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CylMwpcStrip::Class_Name()
{
   return "TA2CylMwpcStrip";
}

//______________________________________________________________________________
const char *TA2CylMwpcStrip::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpcStrip*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CylMwpcStrip::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpcStrip*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CylMwpcStrip::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpcStrip*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CylMwpcStrip::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpcStrip*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CylMwpcWire::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CylMwpcWire::Class_Name()
{
   return "TA2CylMwpcWire";
}

//______________________________________________________________________________
const char *TA2CylMwpcWire::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpcWire*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CylMwpcWire::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpcWire*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CylMwpcWire::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpcWire*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CylMwpcWire::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpcWire*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MwpcIntersection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MwpcIntersection::Class_Name()
{
   return "TA2MwpcIntersection";
}

//______________________________________________________________________________
const char *TA2MwpcIntersection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MwpcIntersection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MwpcIntersection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MwpcIntersection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MwpcIntersection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MwpcIntersection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MwpcIntersection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MwpcIntersection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CylMwpc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CylMwpc::Class_Name()
{
   return "TA2CylMwpc";
}

//______________________________________________________________________________
const char *TA2CylMwpc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CylMwpc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CylMwpc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CylMwpc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylMwpc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CalArray::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CalArray::Class_Name()
{
   return "TA2CalArray";
}

//______________________________________________________________________________
const char *TA2CalArray::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CalArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CalArray::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CalArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CalArray::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CalArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CalArray::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CalArray*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CentralTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CentralTrack::Class_Name()
{
   return "TA2CentralTrack";
}

//______________________________________________________________________________
const char *TA2CentralTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CentralTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CentralTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CentralTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CentralTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CentralTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CentralTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CentralTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CentralApparatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CentralApparatus::Class_Name()
{
   return "TA2CentralApparatus";
}

//______________________________________________________________________________
const char *TA2CentralApparatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CentralApparatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CentralApparatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CentralApparatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CentralApparatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CentralApparatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CentralApparatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CentralApparatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Event::Class_Name()
{
   return "TA2Event";
}

//______________________________________________________________________________
const char *TA2Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Event*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Trigger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Trigger::Class_Name()
{
   return "TA2Trigger";
}

//______________________________________________________________________________
const char *TA2Trigger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Trigger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Trigger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Trigger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Trigger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Trigger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Trigger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Trigger*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CylWireSven::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CylWireSven::Class_Name()
{
   return "TA2CylWireSven";
}

//______________________________________________________________________________
const char *TA2CylWireSven::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylWireSven*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CylWireSven::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylWireSven*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CylWireSven::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylWireSven*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CylWireSven::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylWireSven*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2TAPS_PbWO4::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TAPS_PbWO4::Class_Name()
{
   return "TA2TAPS_PbWO4";
}

//______________________________________________________________________________
const char *TA2TAPS_PbWO4::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS_PbWO4*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TAPS_PbWO4::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS_PbWO4*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TAPS_PbWO4::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS_PbWO4*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TAPS_PbWO4::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS_PbWO4*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2TAPS2008::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TAPS2008::Class_Name()
{
   return "TA2TAPS2008";
}

//______________________________________________________________________________
const char *TA2TAPS2008::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS2008*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TAPS2008::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS2008*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TAPS2008::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS2008*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TAPS2008::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS2008*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Compton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Compton::Class_Name()
{
   return "TA2Compton";
}

//______________________________________________________________________________
const char *TA2Compton::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Compton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Compton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Compton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Compton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Compton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Compton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Compton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2FPMicro::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2FPMicro::Class_Name()
{
   return "TA2FPMicro";
}

//______________________________________________________________________________
const char *TA2FPMicro::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2FPMicro::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2FPMicro::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2FPMicro::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2GenericApp::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2GenericApp::Class_Name()
{
   return "TA2GenericApp";
}

//______________________________________________________________________________
const char *TA2GenericApp::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2GenericApp::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2GenericApp::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2GenericApp::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Efficiency::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Efficiency::Class_Name()
{
   return "TA2Efficiency";
}

//______________________________________________________________________________
const char *TA2Efficiency::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Efficiency*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Efficiency::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Efficiency*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Efficiency::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Efficiency*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Efficiency::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Efficiency*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Cristina::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Cristina::Class_Name()
{
   return "TA2Cristina";
}

//______________________________________________________________________________
const char *TA2Cristina::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Cristina*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Cristina::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Cristina*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Cristina::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Cristina*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Cristina::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Cristina*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2TAPS::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TAPS::Class_Name()
{
   return "TA2TAPS";
}

//______________________________________________________________________________
const char *TA2TAPS::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TAPS::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TAPS::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TAPS::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPS*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2UserControl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2UserControl::Class_Name()
{
   return "TA2UserControl";
}

//______________________________________________________________________________
const char *TA2UserControl::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserControl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2UserControl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserControl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2UserControl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserControl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2UserControl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserControl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2ParaPerpTest::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2ParaPerpTest::Class_Name()
{
   return "TA2ParaPerpTest";
}

//______________________________________________________________________________
const char *TA2ParaPerpTest::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2ParaPerpTest*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2ParaPerpTest::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2ParaPerpTest*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2ParaPerpTest::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2ParaPerpTest*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2ParaPerpTest::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2ParaPerpTest*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CosmicCal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CosmicCal::Class_Name()
{
   return "TA2CosmicCal";
}

//______________________________________________________________________________
const char *TA2CosmicCal::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CosmicCal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CosmicCal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CosmicCal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CosmicCal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CosmicCal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CosmicCal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CosmicCal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TA2UserControl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2UserControl.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2UserControl::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2UserControl::Class(),this);
   }
}

//______________________________________________________________________________
void TA2UserControl::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2UserControl.
      TClass *R__cl = ::TA2UserControl::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2Control::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2UserControl(void *p) {
      delete ((::TA2UserControl*)p);
   }
   static void deleteArray_TA2UserControl(void *p) {
      delete [] ((::TA2UserControl*)p);
   }
   static void destruct_TA2UserControl(void *p) {
      typedef ::TA2UserControl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2UserControl

//______________________________________________________________________________
void TA2UserAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2UserAnalysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2UserAnalysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2UserAnalysis::Class(),this);
   }
}

//______________________________________________________________________________
void TA2UserAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2UserAnalysis.
      TClass *R__cl = ::TA2UserAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2Analysis::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2UserAnalysis(void *p) {
      delete ((::TA2UserAnalysis*)p);
   }
   static void deleteArray_TA2UserAnalysis(void *p) {
      delete [] ((::TA2UserAnalysis*)p);
   }
   static void destruct_TA2UserAnalysis(void *p) {
      typedef ::TA2UserAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2UserAnalysis

//______________________________________________________________________________
void TA2UserPhysics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2UserPhysics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2UserPhysics::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2UserPhysics::Class(),this);
   }
}

//______________________________________________________________________________
void TA2UserPhysics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2UserPhysics.
      TClass *R__cl = ::TA2UserPhysics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4beam", &fP4beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP4input", &fP4input);
      R__insp.InspectMember(fP4input, "fP4input.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbeam", &fNbeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDpnAngle", &fDpnAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDpnAngleCM", &fDpnAngleCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiDiff", &fPhiDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaDiff", &fThetaDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaP", &fThetaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaN", &fThetaN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaPCM", &fThetaPCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaNCM", &fThetaNCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaDiffCM", &fThetaDiffCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDpnMinv", &fDpnMinv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDpnMmiss", &fDpnMmiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCBTAPS2PhotonMinv", &fCBTAPS2PhotonMinv);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2UserPhysics(void *p) {
      delete ((::TA2UserPhysics*)p);
   }
   static void deleteArray_TA2UserPhysics(void *p) {
      delete [] ((::TA2UserPhysics*)p);
   }
   static void destruct_TA2UserPhysics(void *p) {
      typedef ::TA2UserPhysics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2UserPhysics

//______________________________________________________________________________
void TA2PhotoPhysics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2PhotoPhysics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2PhotoPhysics::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2PhotoPhysics::Class(),this);
   }
}

//______________________________________________________________________________
void TA2PhotoPhysics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2PhotoPhysics.
      TClass *R__cl = ::TA2PhotoPhysics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLADD", &fLADD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGp4", &fTAGGp4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBp4", &fCBp4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSp4", &fTAPSp4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGpdg", &fTAGGpdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBpdg", &fCBpdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSpdg", &fTAPSpdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4photon", &fP4photon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4proton", &fP4proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4piplus", &fP4piplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4neutron", &fP4neutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4pi0", &fP4pi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4gprime", &fP4gprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4eta", &fP4eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4rootino", &fP4rootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP4photonTot", &fP4photonTot);
      R__insp.InspectMember(fP4photonTot, "fP4photonTot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphoton", &fNphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNproton", &fNproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpiplus", &fNpiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNneutron", &fNneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpi0", &fNpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgprime", &fNgprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNeta", &fNeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrootino", &fNrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNprompt", &fNprompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrandom", &fNrandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaP", &fNparaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaR", &fNparaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpP", &fNperpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpR", &fNperpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTagg", &fMaxTagg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMax2gPerm", &fMax2gPerm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDpi0", &fMassDpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDeta", &fMassDeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIJ", &fMassIJ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIpi0", &fMassIpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIeta", &fMassIeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsMesonIndex", &fIsMesonIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMDpi0", &fMaxMDpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMDeta", &fMaxMDeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM2g", &fM2g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM6g", &fM6g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM2gCBTAPS", &fM2gCBTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEm", &fEm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmP", &fEmP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmR", &fEmR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0", &fEmPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0P", &fEmPi0P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0R", &fEmPi0R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0p", &fEmPi0p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0pP", &fEmPi0pP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0pR", &fEmPi0pR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmPi0p", &fPmPi0p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmPi0pP", &fPmPi0pP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmPi0pR", &fPmPi0pR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmPi0p", &fPcmPi0p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmPi0pP", &fPcmPi0pP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmPi0pR", &fPcmPi0pR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0g", &fEmPi0g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0gP", &fEmPi0gP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0gR", &fEmPi0gR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0gp", &fEmPi0gp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0gpP", &fEmPi0gpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPi0gpR", &fEmPi0gpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmPi0gp", &fPmPi0gp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmPi0gpP", &fPmPi0gpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmPi0gpR", &fPmPi0gpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmPi0gp", &fPcmPi0gp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmPi0gpP", &fPcmPi0gpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmPi0gpR", &fPcmPi0gpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEgPi0gp", &fEgPi0gp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWEgPi0gp", &fWEgPi0gp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEgPi0gpP", &fEgPi0gpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEgPi0gpR", &fEgPi0gpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmEta", &fEmEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmEtaP", &fEmEtaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmEtaR", &fEmEtaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmEtap", &fEmEtap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmEtapP", &fEmEtapP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmEtapR", &fEmEtapR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmEtap", &fPcmEtap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmEtapP", &fPcmEtapP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPcmEtapR", &fPcmEtapR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPiplus", &fEmPiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPiplusP", &fEmPiplusP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmPiplusR", &fEmPiplusR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmProton", &fEmProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmProtonP", &fEmProtonP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmProtonR", &fEmProtonR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAopen", &fAopen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAopenP", &fAopenP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAopenR", &fAopenR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaP", &fThetaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaR", &fThetaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiParaP", &fPhiParaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiParaR", &fPhiParaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiPerpP", &fPhiPerpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiPerpR", &fPhiPerpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmLow", &fEmLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmHigh", &fEmHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEgLow", &fEgLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEgHigh", &fEgHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fALow", &fALow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAHigh", &fAHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngle1", &fAngle1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngle1P", &fAngle1P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngle1R", &fAngle1R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngle2", &fAngle2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngle2P", &fAngle2P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngle2R", &fAngle2R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerTime", &fTaggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0TaggTime", &fPi0TaggTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP1", &fP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP2", &fP2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRl1", &fRl1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRl2", &fRl2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRh1", &fRh1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRh2", &fRh2);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2PhotoPhysics(void *p) {
      delete ((::TA2PhotoPhysics*)p);
   }
   static void deleteArray_TA2PhotoPhysics(void *p) {
      delete [] ((::TA2PhotoPhysics*)p);
   }
   static void destruct_TA2PhotoPhysics(void *p) {
      typedef ::TA2PhotoPhysics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2PhotoPhysics

//______________________________________________________________________________
void TA2Compton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Compton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Compton::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Compton::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Compton::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Compton.
      TClass *R__cl = ::TA2Compton::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLADD", &fLADD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGpart", &fTAGGpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBpart", &fCBpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSpart", &fTAPSpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTtaggphot", &fPARTtaggphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTphoton", &fPARTphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTproton", &fPARTproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTpiplus", &fPARTpiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTneutron", &fPARTneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTrootino", &fPARTrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTpi0", &fPARTpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTeta", &fPARTeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTgprime", &fPARTgprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP4photonTot", &fP4photonTot);
      R__insp.InspectMember(fP4photonTot, "fP4photonTot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphoton", &fNphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNproton", &fNproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpiplus", &fNpiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNneutron", &fNneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrootino", &fNrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgprime", &fNgprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNprompt", &fNprompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrandom", &fNrandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaP", &fNparaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaR", &fNparaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpP", &fNperpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpR", &fNperpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTagg", &fMaxTagg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpi0", &fNpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNeta", &fNeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphotchk", &fNphotchk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDpi0", &fMassDpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDeta", &fMassDeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIJ", &fMassIJ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIpi0", &fMassIpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIeta", &fMassIeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMax2gPerm", &fMax2gPerm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsMesonIndex", &fIsMesonIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMDpi0", &fMaxMDpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMDeta", &fMaxMDeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP1", &fP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP2", &fP2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRl1", &fRl1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRl2", &fRl2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRh1", &fRh1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRh2", &fRh2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOACut", &fOACut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMLo", &fMMLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMHi", &fMMHi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM2g", &fM2g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM6g", &fM6g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtKE", &fProtKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtTheta", &fProtTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtPhi", &fProtPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtTime", &fProtTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotKE", &fPhotKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotTheta", &fPhotTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotPhi", &fPhotPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotTime", &fPhotTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerTime", &fTaggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotTaggTime", &fPhotTaggTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanHit", &fTChanHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhot", &fTChanPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotP", &fTChanPhotP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotR", &fTChanPhotR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmiss", &fPhotonMmiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmissP", &fPhotonMmissP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmissR", &fPhotonMmissR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonKECM", &fPhotonKECM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonKECMP", &fPhotonKECMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonKECMR", &fPhotonKECMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCM", &fPhotonThetaCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMP", &fPhotonThetaCMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMR", &fPhotonThetaCMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhiCM", &fPhotonPhiCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhiCMP", &fPhotonPhiCMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhiCMR", &fPhotonPhiCMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProt", &fTChanPhotProt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProtP", &fTChanPhotProtP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProtR", &fTChanPhotProtR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotProtOA", &fPhotProtOA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotProtOAP", &fPhotProtOAP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotProtOAR", &fPhotProtOAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmissProt", &fPhotonMmissProt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmissProtP", &fPhotonMmissProtP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmissProtR", &fPhotonMmissProtR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonEmissProt", &fPhotonEmissProt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonEmissProtP", &fPhotonEmissProtP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonEmissProtR", &fPhotonEmissProtR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProt", &fPhotonThetaCMProt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProtP", &fPhotonThetaCMProtP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProtR", &fPhotonThetaCMProtR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmissProtOA", &fPhotonMmissProtOA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmissProtOAP", &fPhotonMmissProtOAP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonMmissProtOAR", &fPhotonMmissProtOAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProtOA", &fTChanPhotProtOA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProtOAP", &fTChanPhotProtOAP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProtOAR", &fTChanPhotProtOAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProtOA", &fPhotonThetaCMProtOA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProtOAP", &fPhotonThetaCMProtOAP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProtOAR", &fPhotonThetaCMProtOAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProtOAMM", &fTChanPhotProtOAMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProtOAMMP", &fTChanPhotProtOAMMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanPhotProtOAMMR", &fTChanPhotProtOAMMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProtOAMM", &fPhotonThetaCMProtOAMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProtOAMMP", &fPhotonThetaCMProtOAMMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaCMProtOAMMR", &fPhotonThetaCMProtOAMMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhiCMProtOAMM", &fPhotonPhiCMProtOAMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhiCMProtOAMMP", &fPhotonPhiCMProtOAMMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhiCMProtOAMMR", &fPhotonPhiCMProtOAMMR);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Compton(void *p) {
      delete ((::TA2Compton*)p);
   }
   static void deleteArray_TA2Compton(void *p) {
      delete [] ((::TA2Compton*)p);
   }
   static void destruct_TA2Compton(void *p) {
      typedef ::TA2Compton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Compton

//______________________________________________________________________________
void TA2Cristina::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Cristina.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Cristina::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Cristina::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Cristina::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Cristina.
      TClass *R__cl = ::TA2Cristina::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLADD", &fLADD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCAPP", &fCAPP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCristinaFile", &fCristinaFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCristinaTree", &fCristinaTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGParticles", &fTAGGParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAGGNParticle", &fTAGGNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCAPPParticles", &fCAPPParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCAPPNParticle", &fCAPPNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCAPPMaxNParticle", &fCAPPMaxNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSParticles", &fTAPSParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPSNParticle", &fTAPSNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPSMaxNParticle", &fTAPSMaxNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxNTagg", &fMaxNTagg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxNParticle", &fMaxNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBasicVariable", &fBasicVariable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInput", &fInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "i", &i);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNParticle", &fNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPhotTemp", &fNPhotTemp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPhoton", &fNPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNProton", &fNProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPi0", &fNPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNUnknown", &fNUnknown);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotTemp", &fPhotTemp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhoton", &fPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProton", &fProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0", &fPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUnknown", &fUnknown);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Cristina(void *p) {
      delete ((::TA2Cristina*)p);
   }
   static void deleteArray_TA2Cristina(void *p) {
      delete [] ((::TA2Cristina*)p);
   }
   static void destruct_TA2Cristina(void *p) {
      typedef ::TA2Cristina current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Cristina

//______________________________________________________________________________
void TA2ParaPerpTest::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2ParaPerpTest.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2ParaPerpTest::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2ParaPerpTest::Class(),this);
   }
}

//______________________________________________________________________________
void TA2ParaPerpTest::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2ParaPerpTest.
      TClass *R__cl = ::TA2ParaPerpTest::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaI", &fNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBP4", &fCBP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonP4", &fPhotonP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhoton", &fPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeson", &fMeson);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPi0", &fNPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fhPhi", &fhPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastRun", &fLastRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastFile[200]", fLastFile);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2ParaPerpTest(void *p) {
      delete ((::TA2ParaPerpTest*)p);
   }
   static void deleteArray_TA2ParaPerpTest(void *p) {
      delete [] ((::TA2ParaPerpTest*)p);
   }
   static void destruct_TA2ParaPerpTest(void *p) {
      typedef ::TA2ParaPerpTest current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2ParaPerpTest

//______________________________________________________________________________
void TA2Trigger::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Trigger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Trigger::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Trigger::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Trigger::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Trigger.
      TClass *R__cl = ::TA2Trigger::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLADD", &fLADD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCAPP", &fCAPP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaI", &fNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMWPC", &fMWPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2", &fBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVeto", &fVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTriggerFile", &fTriggerFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTriggerTree", &fTriggerTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h", &h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "i", &i);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "j", &j);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "k", &k);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n", &n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c1", &c1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCAPPMaxNParticle", &fCAPPMaxNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPSMaxNParticle", &fTAPSMaxNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxNParticle", &fMaxNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCAPPParticles", &fCAPPParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSParticles", &fTAPSParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGParticles", &fTAGGParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCAPPNParticle", &fCAPPNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPSNParticle", &fTAPSNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAGGNParticle", &fTAGGNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNParticle", &fNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhoton", &fPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProton", &fProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggedPhoton", &fTaggedPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0", &fPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPhoton", &fNPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNProton", &fNProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPi0", &fNPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPionPhoton", &fNPionPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsPionPhoton", &fIsPionPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonEnergy", &fPhotonEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonTheta", &fPhotonTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhi", &fPhotonPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonTime", &fPhotonTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtonEnergy", &fProtonEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtonTheta", &fProtonTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtonPhi", &fProtonPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtonTime", &fProtonTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0Energy", &fPi0Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0Theta", &fPi0Theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0Phi", &fPi0Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0Time", &fPi0Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPi0InvariantMass", &fNPi0InvariantMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0InvariantMass", &fPi0InvariantMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0InvariantMassPrompt", &fPi0InvariantMassPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0InvariantMassRandom", &fPi0InvariantMassRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReactionPattern", &fReactionPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPrompt", &fNPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPromptMM", &fNPromptMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRandom", &fNRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRandomMM", &fNRandomMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTagg", &fNTagg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTaggNPhot", &fNTaggNPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerPhotonTime", &fTaggerPhotonTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMissingMassPrompt", &fMissingMassPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMissingMassRandom", &fMissingMassRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerChannel", &fTaggerChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerChannelPrompt", &fTaggerChannelPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerChannelRandom", &fTaggerChannelRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaPrompt", &fPhotonThetaPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonThetaRandom", &fPhotonThetaRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhiPrompt", &fPhotonPhiPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonPhiRandom", &fPhotonPhiRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPromptPi0", &fNPromptPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPromptPi0MM", &fNPromptPi0MM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRandomPi0", &fNRandomPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRandomPi0MM", &fNRandomPi0MM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTaggNPi0", &fNTaggNPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerPi0Time", &fTaggerPi0Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMissingMassPromptPi0", &fMissingMassPromptPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMissingMassRandomPi0", &fMissingMassRandomPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerChannelPromptPi0", &fTaggerChannelPromptPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerChannelRandomPi0", &fTaggerChannelRandomPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0ThetaPrompt", &fPi0ThetaPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0ThetaRandom", &fPi0ThetaRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0PhiPrompt", &fPi0PhiPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0PhiRandom", &fPi0PhiRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L1Pattern", &L1Pattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L2Pattern", &L2Pattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBitPattern", &fBitPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBitPattern", &fNBitPattern);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Trigger(void *p) {
      delete ((::TA2Trigger*)p);
   }
   static void deleteArray_TA2Trigger(void *p) {
      delete [] ((::TA2Trigger*)p);
   }
   static void destruct_TA2Trigger(void *p) {
      typedef ::TA2Trigger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Trigger

//______________________________________________________________________________
void TA2Physics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Physics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Physics::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Physics::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Physics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Physics.
      TClass *R__cl = ::TA2Physics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4miss", &fP4miss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4target", &fP4target);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetPos", &fTargetPos);
      R__insp.InspectMember(fTargetPos, "fTargetPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMmiss", &fMmiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmiss", &fPmiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPtheta", &fPtheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPphi", &fPphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtarget", &fNtarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperm", &fNperm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNpermutation", &fNpermutation);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Physics(void *p) {
      delete ((::TA2Physics*)p);
   }
   static void deleteArray_TA2Physics(void *p) {
      delete [] ((::TA2Physics*)p);
   }
   static void destruct_TA2Physics(void *p) {
      typedef ::TA2Physics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Physics

//______________________________________________________________________________
void TA2ThreshPi0::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2ThreshPi0.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2ThreshPi0::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2ThreshPi0::Class(),this);
   }
}

//______________________________________________________________________________
void TA2ThreshPi0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2ThreshPi0.
      TClass *R__cl = ::TA2ThreshPi0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLADD", &fLADD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGpart", &fTAGGpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBpart", &fCBpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSpart", &fTAPSpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGp4", &fTAGGp4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTtaggphot", &fPARTtaggphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTphoton", &fPARTphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTproton", &fPARTproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTpiplus", &fPARTpiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTneutron", &fPARTneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTrootino", &fPARTrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTpi0", &fPARTpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTeta", &fPARTeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTgprime", &fPARTgprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP4photonTot", &fP4photonTot);
      R__insp.InspectMember(fP4photonTot, "fP4photonTot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphoton", &fNphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNproton", &fNproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpiplus", &fNpiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNneutron", &fNneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrootino", &fNrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgprime", &fNgprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNprompt", &fNprompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrandom", &fNrandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaP", &fNparaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaR", &fNparaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpP", &fNperpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpR", &fNperpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTagg", &fMaxTagg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpi0", &fNpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNeta", &fNeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpi0phot", &fNpi0phot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDpi0", &fMassDpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDeta", &fMassDeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIJ", &fMassIJ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIpi0", &fMassIpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIeta", &fMassIeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMax2gPerm", &fMax2gPerm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsMesonIndex", &fIsMesonIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMDpi0", &fMaxMDpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMDeta", &fMaxMDeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP1", &fP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP2", &fP2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRl1", &fRl1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRl2", &fRl2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRh1", &fRh1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRh2", &fRh2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMassCorr", &fMassCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMWlo[2]", fMMWlo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMWhi[2]", fMMWhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TggCutOffset", &TggCutOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM2g", &fM2g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM6g", &fM6g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeDiff", &fTimeDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime1", &fTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime2", &fTime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0TGG", &fPi0TGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0LabKE", &fPi0LabKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0LabTheta", &fPi0LabTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0LabPhi", &fPi0LabPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0CMKE", &fPi0CMKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0CMTheta", &fPi0CMTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0CMPhi", &fPi0CMPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerTime", &fTaggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0TaggTime", &fPi0TaggTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanHit", &fTChanHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChan", &fTChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanP", &fTChanP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanR", &fTChanR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMMiss", &fMMiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMMissP", &fMMissP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMMissR", &fMMissR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTGG", &fTGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTGGP", &fTGGP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTGGR", &fTGGR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanM2g", &fTChanM2g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanM2gP", &fTChanM2gP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanM2gR", &fTChanM2gR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fM2gTagg", &fM2gTagg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fM2gTaggP", &fM2gTaggP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fM2gTaggR", &fM2gTaggR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNPi0Phot", &fNPi0Phot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNPi0PhotP", &fNPi0PhotP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNPi0PhotR", &fNPi0PhotR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKELab", &fKELab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKELabP", &fKELabP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKELabR", &fKELabR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaLab", &fThetaLab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaLabP", &fThetaLabP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaLabR", &fThetaLabR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiLab", &fPhiLab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiLabP", &fPhiLabP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiLabR", &fPhiLabR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECM", &fKECM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECMP", &fKECMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECMR", &fKECMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCM", &fThetaCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCMP", &fThetaCMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCMR", &fThetaCMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiCM", &fPhiCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiCMP", &fPhiCMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiCMR", &fPhiCMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanCut1", &fTChanCut1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanCut1P", &fTChanCut1P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanCut1R", &fTChanCut1R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECMCut1", &fKECMCut1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECMCut1P", &fKECMCut1P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECMCut1R", &fKECMCut1R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCMCut1", &fThetaCMCut1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCMCut1P", &fThetaCMCut1P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCMCut1R", &fThetaCMCut1R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMMissCut1", &fMMissCut1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMMissCut1P", &fMMissCut1P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMMissCut1R", &fMMissCut1R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanCut2", &fTChanCut2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanCut2P", &fTChanCut2P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanCut2R", &fTChanCut2R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECMCut2", &fKECMCut2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECMCut2P", &fKECMCut2P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKECMCut2R", &fKECMCut2R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCMCut2", &fThetaCMCut2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCMCut2P", &fThetaCMCut2P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaCMCut2R", &fThetaCMCut2R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiCMCut2", &fPhiCMCut2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiCMCut2P", &fPhiCMCut2P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiCMCut2R", &fPhiCMCut2R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4MissLabTheta", &fP4MissLabTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4MissLabThetaP", &fP4MissLabThetaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4MissLabThetaR", &fP4MissLabThetaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutAngle", &fCutAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutAngleP", &fCutAngleP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutAngleR", &fCutAngleR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0LabThetaProt", &fPi0LabThetaProt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0LabThetaProtP", &fPi0LabThetaProtP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0LabThetaProtR", &fPi0LabThetaProtR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtLabTheta", &fProtLabTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtLabThetaP", &fProtLabThetaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtLabThetaR", &fProtLabThetaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0LabThetaProtCut", &fPi0LabThetaProtCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0LabThetaProtCutP", &fPi0LabThetaProtCutP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0LabThetaProtCutR", &fPi0LabThetaProtCutR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtLabThetaCut", &fProtLabThetaCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtLabThetaCutP", &fProtLabThetaCutP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtLabThetaCutR", &fProtLabThetaCutR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLADDmh", &fLADDmh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLADDnhm", &fLADDnhm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTChanHitM", &fTChanHitM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerTimeM", &fTaggerTimeM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPi0TaggTimeM", &fPi0TaggTimeM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTaggPhot", &fNTaggPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggPhotHits", &fTaggPhotHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggPhotEnergy", &fTaggPhotEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggPhotTime", &fTaggPhotTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggPhotP4", &fTaggPhotP4);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2ThreshPi0(void *p) {
      delete ((::TA2ThreshPi0*)p);
   }
   static void deleteArray_TA2ThreshPi0(void *p) {
      delete [] ((::TA2ThreshPi0*)p);
   }
   static void destruct_TA2ThreshPi0(void *p) {
      typedef ::TA2ThreshPi0 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2ThreshPi0

//______________________________________________________________________________
void TA2Efficiency::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Efficiency.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Efficiency::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Efficiency::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Efficiency::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Efficiency.
      TClass *R__cl = ::TA2Efficiency::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLADD", &fLADD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGpart", &fTAGGpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBpart", &fCBpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSpart", &fTAPSpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGp4", &fTAGGp4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTphoton", &fPARTphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTproton", &fPARTproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTpiplus", &fPARTpiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTneutron", &fPARTneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTrootino", &fPARTrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTpi0", &fPARTpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTeta", &fPARTeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPARTgprime", &fPARTgprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP4photonTot", &fP4photonTot);
      R__insp.InspectMember(fP4photonTot, "fP4photonTot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphoton", &fNphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNproton", &fNproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpiplus", &fNpiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNneutron", &fNneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrootino", &fNrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgprime", &fNgprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNprompt", &fNprompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrandom", &fNrandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaP", &fNparaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaR", &fNparaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpP", &fNperpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpR", &fNperpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTagg", &fMaxTagg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpi0", &fNpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNeta", &fNeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDpi0", &fMassDpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDeta", &fMassDeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIJ", &fMassIJ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIpi0", &fMassIpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassIeta", &fMassIeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMax2gPerm", &fMax2gPerm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsMesonIndex", &fIsMesonIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMDpi0", &fMaxMDpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMDeta", &fMaxMDeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP1", &fP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP2", &fP2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRl1", &fRl1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRl2", &fRl2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRh1", &fRh1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRh2", &fRh2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMMinLo", &fMMMinLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMMinHi", &fMMMinHi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMMaxLo", &fMMMaxLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMMaxHi", &fMMMaxHi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM2g", &fM2g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM6g", &fM6g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotKE", &fPhotKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotTheta", &fPhotTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotPhi", &fPhotPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtKE", &fProtKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtTheta", &fProtTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtPhi", &fProtPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0KE", &fPi0KE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0Theta", &fPi0Theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0Phi", &fPi0Phi);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Efficiency(void *p) {
      delete ((::TA2Efficiency*)p);
   }
   static void deleteArray_TA2Efficiency(void *p) {
      delete [] ((::TA2Efficiency*)p);
   }
   static void destruct_TA2Efficiency(void *p) {
      typedef ::TA2Efficiency current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Efficiency

//______________________________________________________________________________
void TA2GenericApp::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2GenericApp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2GenericApp::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2GenericApp::Class(),this);
   }
}

//______________________________________________________________________________
void TA2GenericApp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2GenericApp.
      TClass *R__cl = ::TA2GenericApp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGenDet", &fGenDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLScint", &fLScint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLTrig", &fLTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrig", &fTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFPMic", &fFPMic);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2GenericApp(void *p) {
      delete ((::TA2GenericApp*)p);
   }
   static void deleteArray_TA2GenericApp(void *p) {
      delete [] ((::TA2GenericApp*)p);
   }
   static void destruct_TA2GenericApp(void *p) {
      typedef ::TA2GenericApp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2GenericApp

//______________________________________________________________________________
void TA2Calorimeter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Calorimeter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Calorimeter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Calorimeter::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Calorimeter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Calorimeter.
      TClass *R__cl = ::TA2Calorimeter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCal", &fCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPTracker", &fPTracker);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4_Nphoton", &fP4_Nphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fM_Nphoton", &fM_Nphoton);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Calorimeter(void *p) {
      delete ((::TA2Calorimeter*)p);
   }
   static void deleteArray_TA2Calorimeter(void *p) {
      delete [] ((::TA2Calorimeter*)p);
   }
   static void destruct_TA2Calorimeter(void *p) {
      typedef ::TA2Calorimeter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Calorimeter

//______________________________________________________________________________
void TA2CosmicCal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CosmicCal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CosmicCal::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CosmicCal::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CosmicCal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CosmicCal.
      TClass *R__cl = ::TA2CosmicCal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLScint", &fLScint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLTrig", &fLTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrig", &fTrig);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CosmicCal(void *p) {
      delete ((::TA2CosmicCal*)p);
   }
   static void deleteArray_TA2CosmicCal(void *p) {
      delete [] ((::TA2CosmicCal*)p);
   }
   static void destruct_TA2CosmicCal(void *p) {
      typedef ::TA2CosmicCal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CosmicCal

//______________________________________________________________________________
void TA2CrystalBall::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CrystalBall.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CrystalBall::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CrystalBall::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CrystalBall::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CrystalBall.
      TClass *R__cl = ::TA2CrystalBall::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaI", &fNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticle", &fParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMWPC", &fMWPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDdPhi", &fPIDdPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPIDdPhi", &fMaxPIDdPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMWPCdTheta", &fMWPCdTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMWPCdTheta", &fMaxMWPCdTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngDiffI", &fAngDiffI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDij", &fPIDij);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDindex", &fPIDindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDdouble", &fPIDdouble);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMWPCij", &fMWPCij);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMWPCindex", &fMWPCindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaE", &fDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaEdouble", &fDeltaEdouble);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fECentral", &fECentral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEch", &fEch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaPhi", &fDeltaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaTheta", &fDeltaTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaEOR", &fDeltaEOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEchOR", &fEchOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCharged", &fNCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPIDSigmaTime", &fPIDSigmaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNaISigmaTime", &fNaISigmaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrigSectFired", &fNTrigSectFired);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigThresh", &fTrigThresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fETrigSect", &fETrigSect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fETrigCBA", &fETrigCBA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fETrigCBB", &fETrigCBB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fETrigCBC", &fETrigCBC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fETrigCBD", &fETrigCBD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimple", &fSimple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSingleThresh", &fUseSingleThresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTrigHist", &fUseTrigHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigFileName[255]", fTrigFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrigFile", &fTrigFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigHistName[255]", fTrigHistName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBThresholds", &fCBThresholds);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CrystalBall(void *p) {
      delete ((::TA2CrystalBall*)p);
   }
   static void deleteArray_TA2CrystalBall(void *p) {
      delete [] ((::TA2CrystalBall*)p);
   }
   static void destruct_TA2CrystalBall(void *p) {
      typedef ::TA2CrystalBall current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CrystalBall

//______________________________________________________________________________
void TA2TAPS::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TAPS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TAPS::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TAPS::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TAPS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TAPS.
      TClass *R__cl = ::TA2TAPS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLadder", &fLadder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2", &fBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RealVetoHits", &RealVetoHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*IsProton", &IsProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VetoMap", &VetoMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNWVetosAmount", &fNWVetosAmount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsSigma1", &fTapsSigma1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsSigma2", &fTapsSigma2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNWVetos", &fNWVetos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoStatus", &fVetoStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsFudge", &fTapsFudge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsTof", &fTapsTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsPsa", &fTapsPsa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsVetodet", &fTapsVetodet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCharged", &fNCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*isVCharged", &isVCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*psaInfo", &psaInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTestLG", &fTestLG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTestSG", &fTestSG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*psarad", &psarad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*psaang", &psaang);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*minRad", &minRad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*maxRad", &maxRad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle1", &angle1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle2", &angle2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle3", &angle3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle4", &angle4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle5", &angle5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle6", &angle6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle7", &angle7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle8", &angle8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle9", &angle9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle10", &angle10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*angle11", &angle11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma1", &sigma1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma2", &sigma2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma3", &sigma3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma4", &sigma4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma5", &sigma5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma6", &sigma6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma7", &sigma7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma8", &sigma8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma9", &sigma9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma10", &sigma10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigma11", &sigma11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crystal", &crystal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClusterTime", &fClusterTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutFile", &fCutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProtonCut", &fProtonCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntaps", &ntaps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", &particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtapsneutron", &fNtapsneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtapsproton", &fNtapsproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtapselectron", &fNtapselectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtapsgamma", &fNtapsgamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtapsrootino", &fNtapsrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosShift[4]", PosShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeShift", &TimeShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSize", &fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "STesting[4]", STesting);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVetoIndex", &fVetoIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticles", &fParticles);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2TAPS(void *p) {
      delete ((::TA2TAPS*)p);
   }
   static void deleteArray_TA2TAPS(void *p) {
      delete [] ((::TA2TAPS*)p);
   }
   static void destruct_TA2TAPS(void *p) {
      typedef ::TA2TAPS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TAPS

//______________________________________________________________________________
void TA2TAPS2008::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TAPS2008.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TAPS2008::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TAPS2008::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TAPS2008::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TAPS2008.
      TClass *R__cl = ::TA2TAPS2008::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_OUTPUT_FILE", &fTAPS_OUTPUT_FILE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrintSetUpInfo", &fPrintSetUpInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsRunStep", &fTapsRunStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2", &fBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVeto", &fVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbWO4", &fPbWO4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2_Ncluster", &fBaF2_Ncluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*id_clBaF2", &id_clBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clBaF2", &clBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cl", &cl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clBaF2_Nhits", &clBaF2_Nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clBaF2_elements", &clBaF2_elements);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BaF2Time", &BaF2Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTOF", &fTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNoCBTimeCounter", &fNoCBTimeCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fShortGateValue", &fShortGateValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLongGateValue", &fLongGateValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsVCharged", &fIsVCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_NHits", &fVeto_NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVeto_Hits", &fVeto_Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThisVetoFired", &fThisVetoFired);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_index", &fVeto_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_dE", &fVeto_dE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_T", &fVeto_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultipleVetoHit", &fMultipleVetoHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fp3", &fp3);
      R__insp.InspectMember(fp3, "fp3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particles", &particles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NParticles", &NParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG_ID_sec", &fPDG_ID_sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG_ID_unclear", &fPDG_ID_unclear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsProton", &fdEvE_IsProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsChPion", &fdEvE_IsChPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsElectron", &fdEvE_IsElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOF_IsNeutron", &fTOF_IsNeutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOF_IsProton", &fTOF_IsProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOF_IsChPion", &fTOF_IsChPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOF_IsElectron", &fTOF_IsElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOF_IsGamma", &fTOF_IsGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPSA_IsNucleon", &fPSA_IsNucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPSA_IsNoNucleon", &fPSA_IsNoNucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimpleReconstruct", &fSimpleReconstruct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsFudge", &fTapsFudge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeShift", &fTimeShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_TOF_CutFile", &fTAPS_TOF_CutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_CutFile", &fTAPS_dEvE_CutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_PSA_CutFile", &fTAPS_PSA_CutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_USEAGE", &fTAPS_TOF_USEAGE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Cuts[256]", fTAPS_TOF_Cuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Neutron", &fTAPS_TOF_Neutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_TOF_NeutronCut", &fTAPS_TOF_NeutronCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Neutron_CutName[32]", fTAPS_TOF_Neutron_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Proton", &fTAPS_TOF_Proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_TOF_ProtonCut", &fTAPS_TOF_ProtonCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Proton_CutName[32]", fTAPS_TOF_Proton_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_ChPion", &fTAPS_TOF_ChPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_TOF_ChPionCut", &fTAPS_TOF_ChPionCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_ChPion_CutName[32]", fTAPS_TOF_ChPion_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Electron", &fTAPS_TOF_Electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_TOF_ElectronCut", &fTAPS_TOF_ElectronCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Electron_CutName[32]", fTAPS_TOF_Electron_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Gamma", &fTAPS_TOF_Gamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_TOF_GammaCut", &fTAPS_TOF_GammaCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_TOF_Gamma_CutName[32]", fTAPS_TOF_Gamma_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_USEAGE", &fTAPS_dEvE_USEAGE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Cuts[256]", fTAPS_dEvE_Cuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Proton", &fTAPS_dEvE_Proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ProtonCut", &fTAPS_dEvE_ProtonCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Proton_CutName[32]", fTAPS_dEvE_Proton_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_ChPion", &fTAPS_dEvE_ChPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ChPionCut", &fTAPS_dEvE_ChPionCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_ChPion_CutName[32]", fTAPS_dEvE_ChPion_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Electron", &fTAPS_dEvE_Electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ElectronCut", &fTAPS_dEvE_ElectronCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Electron_CutName[32]", fTAPS_dEvE_Electron_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_PSA_USEAGE", &fTAPS_PSA_USEAGE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_PSA_Cuts[256]", fTAPS_PSA_Cuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_PSA_Nucleon", &fTAPS_PSA_Nucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_PSA_NucleonCut", &fTAPS_PSA_NucleonCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_PSA_Nucleon_CutName[32]", fTAPS_PSA_Nucleon_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_PSA_noNucleon", &fTAPS_PSA_noNucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_PSA_noNucleonCut", &fTAPS_PSA_noNucleonCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_PSA_noNucleon_CutName[32]", fTAPS_PSA_noNucleon_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_ReadPbWO4", &fTAPS_ReadPbWO4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeOfFlight", &fTimeOfFlight);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2TAPS2008(void *p) {
      delete ((::TA2TAPS2008*)p);
   }
   static void deleteArray_TA2TAPS2008(void *p) {
      delete [] ((::TA2TAPS2008*)p);
   }
   static void destruct_TA2TAPS2008(void *p) {
      typedef ::TA2TAPS2008 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TAPS2008

//______________________________________________________________________________
void TA2TAPS2009::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TAPS2009.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TAPS2009::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TAPS2009::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TAPS2009::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TAPS2009.
      TClass *R__cl = ::TA2TAPS2009::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsRunStep", &fTapsRunStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibVetoStep", &fCalibVetoStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibBaF2Step", &fCalibBaF2Step);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2", &fBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVeto", &fVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2_Ncluster", &fBaF2_Ncluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*id_clBaF2", &id_clBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clBaF2", &clBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cl", &cl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clBaF2_Nhits", &clBaF2_Nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clBaF2_elements", &clBaF2_elements);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsVCharged", &fIsVCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_NHits", &fVeto_NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVeto_Hits", &fVeto_Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_index", &fVeto_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_dE", &fVeto_dE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_T", &fVeto_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy_Index", &fEnergy_Index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy_BaF2", &fEnergy_BaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultipleVetoHit", &fMultipleVetoHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4_Nphoton", &fP4_Nphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fM_Nphoton", &fM_Nphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fp3", &fp3);
      R__insp.InspectMember(fp3, "fp3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsProton", &fdEvE_IsProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsChPion", &fdEvE_IsChPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsElectron", &fdEvE_IsElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaE", &fDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEcharged", &fEcharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEchargedcl", &fEchargedcl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEchargedIndex", &fEchargedIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particles", &particles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG_ID_sec", &fPDG_ID_sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG_ID_unclear", &fPDG_ID_unclear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimpleReconstruct", &fSimpleReconstruct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsFudge", &fTapsFudge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeShift", &fTimeShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_CutFile", &fTAPS_dEvE_CutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Cuts[250]", fTAPS_dEvE_Cuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Proton", &fTAPS_dEvE_Proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ProtonCut", &fTAPS_dEvE_ProtonCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Proton_CutName[50]", fTAPS_dEvE_Proton_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_ChPion", &fTAPS_dEvE_ChPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ChPionCut", &fTAPS_dEvE_ChPionCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_ChPion_CutName[50]", fTAPS_dEvE_ChPion_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Electron", &fTAPS_dEvE_Electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ElectronCut", &fTAPS_dEvE_ElectronCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Electron_CutName[50]", fTAPS_dEvE_Electron_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calibTAPS_m1g_Single", &calibTAPS_m1g_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calibTAPS_m1g_AllCh", &calibTAPS_m1g_AllCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calibTAPS_VetoCorr", &calibTAPS_VetoCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VetoData", &VetoData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calib_TAPSdEvEcl", &calib_TAPSdEvEcl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calib_TAPSdEvE", &calib_TAPSdEvE);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2TAPS2009(void *p) {
      delete ((::TA2TAPS2009*)p);
   }
   static void deleteArray_TA2TAPS2009(void *p) {
      delete [] ((::TA2TAPS2009*)p);
   }
   static void destruct_TA2TAPS2009(void *p) {
      typedef ::TA2TAPS2009 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TAPS2009

//______________________________________________________________________________
void TA2Taps2009LE::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Taps2009LE.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Taps2009LE::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Taps2009LE::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Taps2009LE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Taps2009LE.
      TClass *R__cl = ::TA2Taps2009LE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsRunStep", &fTapsRunStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibVetoStep", &fCalibVetoStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibBaF2Step", &fCalibBaF2Step);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2", &fBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVeto", &fVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2_Ncluster", &fBaF2_Ncluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*id_clBaF2", &id_clBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clBaF2", &clBaF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cl", &cl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clBaF2_Nhits", &clBaF2_Nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clBaF2_elements", &clBaF2_elements);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsVCharged", &fIsVCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_NHits", &fVeto_NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVeto_Hits", &fVeto_Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThisVetoFired", &fThisVetoFired);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVeto_dE", &fVeto_dE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultipleVetoHit", &fMultipleVetoHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4_Nphoton", &fP4_Nphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fM_Nphoton", &fM_Nphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fp3", &fp3);
      R__insp.InspectMember(fp3, "fp3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsProton", &fdEvE_IsProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsChPion", &fdEvE_IsChPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEvE_IsElectron", &fdEvE_IsElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimpleReconstruct", &fSimpleReconstruct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsFudge", &fTapsFudge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeShift", &fTimeShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaE", &fDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEcharged", &fEcharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_CutFile", &fTAPS_dEvE_CutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Cuts[250]", fTAPS_dEvE_Cuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Proton", &fTAPS_dEvE_Proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ProtonCut", &fTAPS_dEvE_ProtonCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Proton_CutName[50]", fTAPS_dEvE_Proton_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_ChPion", &fTAPS_dEvE_ChPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ChPionCut", &fTAPS_dEvE_ChPionCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_ChPion_CutName[50]", fTAPS_dEvE_ChPion_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Electron", &fTAPS_dEvE_Electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS_dEvE_ElectronCut", &fTAPS_dEvE_ElectronCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_dEvE_Electron_CutName[50]", fTAPS_dEvE_Electron_CutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calibTAPS_m1g_Single", &calibTAPS_m1g_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calibTAPS_m1g_AllCh", &calibTAPS_m1g_AllCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calibTAPS_VetoCorr", &calibTAPS_VetoCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VetoData", &VetoData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calib_TAPSdEvEcl", &calib_TAPSdEvEcl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calib_TAPSdEvE", &calib_TAPSdEvE);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Taps2009LE(void *p) {
      delete ((::TA2Taps2009LE*)p);
   }
   static void deleteArray_TA2Taps2009LE(void *p) {
      delete [] ((::TA2Taps2009LE*)p);
   }
   static void destruct_TA2Taps2009LE(void *p) {
      typedef ::TA2Taps2009LE current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Taps2009LE

//______________________________________________________________________________
void TA2PlasticPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2PlasticPID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2PlasticPID::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2PlasticPID::Class(),this);
   }
}

//______________________________________________________________________________
void TA2PlasticPID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2PlasticPID.
      TClass *R__cl = ::TA2PlasticPID::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2PlasticPID(void *p) {
      delete ((::TA2PlasticPID*)p);
   }
   static void deleteArray_TA2PlasticPID(void *p) {
      delete [] ((::TA2PlasticPID*)p);
   }
   static void destruct_TA2PlasticPID(void *p) {
      typedef ::TA2PlasticPID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2PlasticPID

//______________________________________________________________________________
void TA2CalArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CalArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CalArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CalArray::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CalArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CalArray.
      TClass *R__cl = ::TA2CalArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClusterUCLA", &fClusterUCLA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnergyAll", &fEnergyAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSigmaEnergy", &fUseSigmaEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSigmaTime", &fUseSigmaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseClusterDecodeUCLA", &fUseClusterDecodeUCLA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaEnergyFactor", &fSigmaEnergyFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaEnergyPower", &fSigmaEnergyPower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaTime", &fSigmaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaTheta", &fSigmaTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaPhi", &fSigmaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTryHits", &fTryHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTempHits2", &fTempHits2);
      TA2ClusterDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CalArray(void *p) {
      delete ((::TA2CalArray*)p);
   }
   static void deleteArray_TA2CalArray(void *p) {
      delete [] ((::TA2CalArray*)p);
   }
   static void destruct_TA2CalArray(void *p) {
      typedef ::TA2CalArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CalArray

//______________________________________________________________________________
void TA2TAPS_BaF2::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TAPS_BaF2.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TAPS_BaF2::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TAPS_BaF2::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TAPS_BaF2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TAPS_BaF2.
      TClass *R__cl = ::TA2TAPS_BaF2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSGEnergy", &fSGEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLGEnergy", &fLGEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSGEnergyValue", &fSGEnergyValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxSGElements", &fMaxSGElements);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSG", &fNSG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pRandoms", &pRandoms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bSimul", &bSimul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EnergyAll", &EnergyAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*theta_c", &theta_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phi_c", &phi_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*x_c", &x_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*y_c", &y_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*z_c", &z_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Z_c", &Z_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseEnergyResolution", &fUseEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTimeResolution", &fUseTimeResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseVetoEfficiency", &fUseVetoEfficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyResolutionFactor", &fEnergyResolutionFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyResolutionConst", &fEnergyResolutionConst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeResolution", &fTimeResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaResolution", &fThetaResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiResolution", &fPhiResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoThreshold", &fVetoThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoEfficiency[5]", fVetoEfficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoEnergy[5]", fVetoEnergy);
      TA2ClusterDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2TAPS_BaF2(void *p) {
      delete ((::TA2TAPS_BaF2*)p);
   }
   static void deleteArray_TA2TAPS_BaF2(void *p) {
      delete [] ((::TA2TAPS_BaF2*)p);
   }
   static void destruct_TA2TAPS_BaF2(void *p) {
      typedef ::TA2TAPS_BaF2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TAPS_BaF2

//______________________________________________________________________________
void TA2TAPS_PbWO4::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TAPS_PbWO4.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TAPS_PbWO4::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TAPS_PbWO4::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TAPS_PbWO4::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TAPS_PbWO4.
      TClass *R__cl = ::TA2TAPS_PbWO4::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2TAPS_PbWO4(void *p) {
      delete ((::TA2TAPS_PbWO4*)p);
   }
   static void deleteArray_TA2TAPS_PbWO4(void *p) {
      delete [] ((::TA2TAPS_PbWO4*)p);
   }
   static void destruct_TA2TAPS_PbWO4(void *p) {
      typedef ::TA2TAPS_PbWO4 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TAPS_PbWO4

//______________________________________________________________________________
void TA2CylMWPC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CylMWPC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CylMWPC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CylMWPC::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CylMWPC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CylMWPC.
      TClass *R__cl = ::TA2CylMWPC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fR", &fR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtE", &fRtE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtI", &fRtI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fC1", &fC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fC2", &fC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fD1", &fD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fD2", &fD2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextPhiInt", &fNextPhiInt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPhiMax", &fDPhiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPhi12Max", &fDPhi12Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxVertRadius", &fMaxVertRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxVertZ", &fMaxVertZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinVertZ", &fMinVertZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZIntersect", &fZIntersect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiSWDiff", &fPhiSWDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiWire", &fPhiWire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiDiff", &fPhiDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNIntersect", &fNIntersect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertX", &fVertX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertY", &fVertY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertZ", &fVertZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertR", &fVertR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPseudoVertex", &fPseudoVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPseudoVertX", &fPseudoVertX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPseudoVertY", &fPseudoVertY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPseudoVertZ", &fPseudoVertZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPseudoVertR", &fPseudoVertR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDPhi12", &fDPhi12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSTesting", &fSTesting);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClustEnI[2][256]", fClustEnI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClustEnE[2][256]", fClustEnE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DeadStrPatt[4][128]", DeadStrPatt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargZShift", &TargZShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Simulate", &Simulate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FileSigmaTheta[256]", FileSigmaTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FileSigmaPhi[256]", FileSigmaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FileEfficiency[256]", FileEfficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaTheta[36]", SigmaTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaPhi[36]", SigmaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Efficiency[36]", Efficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pRandoms", &pRandoms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiPlastic[24]", fPhiPlastic);
      TA2WireChamber::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CylMWPC(void *p) {
      delete ((::TA2CylMWPC*)p);
   }
   static void deleteArray_TA2CylMWPC(void *p) {
      delete [] ((::TA2CylMWPC*)p);
   }
   static void destruct_TA2CylMWPC(void *p) {
      typedef ::TA2CylMWPC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CylMWPC

//______________________________________________________________________________
void TA2FPMicro::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2FPMicro.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TA2Detector::Streamer(R__b);
      //R__b.ReadArray(fFPhits);
      R__b >> fNFPhits;
      R__b >> fNFPelem;
      R__b.CheckByteCount(R__s, R__c, TA2FPMicro::IsA());
   } else {
      R__c = R__b.WriteVersion(TA2FPMicro::IsA(), kTRUE);
      TA2Detector::Streamer(R__b);
      //R__b.WriteArray(fFPhits, __COUNTER__);
      R__b << fNFPhits;
      R__b << fNFPelem;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TA2FPMicro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2FPMicro.
      TClass *R__cl = ::TA2FPMicro::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFPhits", &fFPhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFPhits", &fNFPhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFPelem", &fNFPelem);
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2FPMicro(void *p) {
      delete ((::TA2FPMicro*)p);
   }
   static void deleteArray_TA2FPMicro(void *p) {
      delete [] ((::TA2FPMicro*)p);
   }
   static void destruct_TA2FPMicro(void *p) {
      typedef ::TA2FPMicro current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TA2FPMicro(TBuffer &buf, void *obj) {
      ((::TA2FPMicro*)obj)->::TA2FPMicro::Streamer(buf);
   }
} // end of namespace ROOT for class ::TA2FPMicro

//______________________________________________________________________________
void TA2CylStripSven::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CylStripSven.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CylStripSven::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CylStripSven::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CylStripSven::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CylStripSven.
      TClass *R__cl = ::TA2CylStripSven::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadius", &fRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTgWC", &fTgWC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ0", &fZ0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPitch", &fPitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEffLength", &fEffLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClustEn", &fClustEn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZCor[3]", fZCor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiCor[3]", fPhiCor);
      TA2WCLayerSven::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CylStripSven(void *p) {
      delete ((::TA2CylStripSven*)p);
   }
   static void deleteArray_TA2CylStripSven(void *p) {
      delete [] ((::TA2CylStripSven*)p);
   }
   static void destruct_TA2CylStripSven(void *p) {
      typedef ::TA2CylStripSven current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CylStripSven

//______________________________________________________________________________
void TA2CylWireSven::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CylWireSven.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CylWireSven::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CylWireSven::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CylWireSven::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CylWireSven.
      TClass *R__cl = ::TA2CylWireSven::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadius", &fRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiCor[3]", fPhiCor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiSpace", &fPhiSpace);
      TA2WCLayerSven::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CylWireSven(void *p) {
      delete ((::TA2CylWireSven*)p);
   }
   static void deleteArray_TA2CylWireSven(void *p) {
      delete [] ((::TA2CylWireSven*)p);
   }
   static void destruct_TA2CylWireSven(void *p) {
      typedef ::TA2CylWireSven current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CylWireSven

//______________________________________________________________________________
void TA2WCLayerSven::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2WCLayerSven.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2WCLayerSven::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2WCLayerSven::Class(),this);
   }
}

//______________________________________________________________________________
void TA2WCLayerSven::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2WCLayerSven.
      TClass *R__cl = ::TA2WCLayerSven::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2WCLayer::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2WCLayerSven(void *p) {
      delete ((::TA2WCLayerSven*)p);
   }
   static void deleteArray_TA2WCLayerSven(void *p) {
      delete [] ((::TA2WCLayerSven*)p);
   }
   static void destruct_TA2WCLayerSven(void *p) {
      typedef ::TA2WCLayerSven current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2WCLayerSven

//______________________________________________________________________________
void TA2CentralApparatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CentralApparatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CentralApparatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CentralApparatus::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CentralApparatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CentralApparatus.
      TClass *R__cl = ::TA2CentralApparatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWait", &fWait);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTracksBestMwpc", &fUseTracksBestMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTrack", &fMaxTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFactorTrackLengthNaI", &fFactorTrackLengthNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPhiMwpcNaI", &fMaxPhiMwpcNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPhiTrackPid", &fMaxPhiTrackPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPhiPidNaI", &fMaxPhiPidNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPhiMwpcInterNaI", &fMaxPhiMwpcInterNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPhiMwpcInterPid", &fMaxPhiMwpcInterPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLimitsPsVertex[3]", fLimitsPsVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLengthPid", &fLengthPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpointsDroopPid", &fNpointsDroopPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLostCorrPosPid", &fLostCorrPosPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLostCorrFacPid", &fLostCorrFacPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticleInfo", &fParticleInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPid", &fPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhitsPid", &fNhitsPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitsPid", &fHitsPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPositionsPid", &fPositionsPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIhitsPidUsed", &fIhitsPidUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIhitsPidNotUsed", &fIhitsPidNotUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhitsPidNotUsed", &fNhitsPidNotUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc", &fMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNchambers", &fNchambers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRmwpc", &fRmwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracksMwpc", &fTracksMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracksTrueMwpc", &fTracksTrueMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracksTrueCandidateMwpc", &fTracksTrueCandidateMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracksCandidateMwpc", &fTracksCandidateMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNintersTrueMwpc", &fNintersTrueMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIintersTrueMwpc", &fIintersTrueMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNintersCandidateMwpc", &fNintersCandidateMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIintersCandidateMwpc", &fIintersCandidateMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaI", &fNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNclNaI", &fNclNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClNaI", &fClNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdClNaI", &fIdClNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPositionsNaI", &fPositionsNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUsedClNaI", &fUsedClNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPIDProton", &fNPIDProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPIDPion", &fNPIDPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPIDRootino", &fNPIDRootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracks", &fNtracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracks", &fTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNchTracks", &fNchTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIchTracks", &fIchTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNneTracks", &fNneTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIneTracks", &fIneTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapMwpcTrueTrackNaI", (void*)&fMapMwpcTrueTrackNaI);
      R__insp.InspectMember("map<Double_t,pair<Int_t,Int_t> >", (void*)&fMapMwpcTrueTrackNaI, "fMapMwpcTrueTrackNaI.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapMwpcTrueCandidateTrackNaI", (void*)&fMapMwpcTrueCandidateTrackNaI);
      R__insp.InspectMember("map<Double_t,pair<Int_t,Int_t> >", (void*)&fMapMwpcTrueCandidateTrackNaI, "fMapMwpcTrueCandidateTrackNaI.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapMwpcCandidateTrackNaI", (void*)&fMapMwpcCandidateTrackNaI);
      R__insp.InspectMember("map<Double_t,pair<Int_t,Int_t> >", (void*)&fMapMwpcCandidateTrackNaI, "fMapMwpcCandidateTrackNaI.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracksSingleMwpc", &fNtracksSingleMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracksSingleMwpc", &fTracksSingleMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapMwpcTrueInterNaI", (void*)&fMapMwpcTrueInterNaI);
      R__insp.InspectMember("map<Double_t,Int_t>", (void*)&fMapMwpcTrueInterNaI, "fMapMwpcTrueInterNaI.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapMwpcCandidateInterNaI", (void*)&fMapMwpcCandidateInterNaI);
      R__insp.InspectMember("map<Double_t,Int_t>", (void*)&fMapMwpcCandidateInterNaI, "fMapMwpcCandidateInterNaI.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracksSingleMwpcBest", &fNtracksSingleMwpcBest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNintersTrueMwpcNotUsed", &fNintersTrueMwpcNotUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNintersCandidateMwpcNotUsed", &fNintersCandidateMwpcNotUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiMwpcTrackNaI", &fPhiMwpcTrackNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiTrackPid", &fPhiTrackPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiMwpcTrackPid", &fPhiMwpcTrackPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiInterSingleMwpcNaI", &fPhiInterSingleMwpcNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiTrackSingleMwpcPid", &fPhiTrackSingleMwpcPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiMwpcInterNaI", &fPhiMwpcInterNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiMwpcInterPid", &fPhiMwpcInterPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiPidNaI", &fPhiPidNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackType", &fTrackType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackTheta", &fTrackTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackPhi", &fTrackPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPsVertex[3]", &fPsVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPsVertexR", &fPsVertexR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEclNaI", &fEclNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEhitPid", &fEhitPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEtrackMwpc", &fEtrackMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalyseNaI", &fAnalyseNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalysePid", &fAnalysePid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalyseMwpc", &fAnalyseMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNvertexes", &fNvertexes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexes", &fVertexes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIvertexes", &fIvertexes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVert[3]", &fVert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertR", &fVertR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackDist", &fTrackDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSize", &fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDet", &fDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCentral", &fCentral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDHitsProton", &fPIDHitsProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDHitsPion", &fPIDHitsPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDHitsRootino", &fPIDHitsRootino);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CentralApparatus(void *p) {
      delete ((::TA2CentralApparatus*)p);
   }
   static void deleteArray_TA2CentralApparatus(void *p) {
      delete [] ((::TA2CentralApparatus*)p);
   }
   static void destruct_TA2CentralApparatus(void *p) {
      typedef ::TA2CentralApparatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CentralApparatus

//______________________________________________________________________________
void TA2CentralTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CentralTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CentralTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CentralTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CentralTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CentralTrack.
      TClass *R__cl = ::TA2CentralTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIhitPid", &fIhitPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEhitPid", &fEhitPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThitPid", &fThitPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIintersMwpc[2]", fIintersMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEtrackMwpc", &fEtrackMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTtrackMwpc", &fTtrackMwpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIclNaI", &fIclNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEclNaI", &fEclNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTclNaI", &fTclNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMclNaI", &fMclNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCentralIndexNaI", &fCentralIndexNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaTimeNaI", &fSigmaTimeNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaEnergyNaI", &fSigmaEnergyNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaPhiNaI", &fSigmaPhiNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaThetaNaI", &fSigmaThetaNaI);
      TA2TrackLine::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TA2CentralTrack(void *p) {
      return  p ? new(p) ::TA2CentralTrack : new ::TA2CentralTrack;
   }
   static void *newArray_TA2CentralTrack(Long_t nElements, void *p) {
      return p ? new(p) ::TA2CentralTrack[nElements] : new ::TA2CentralTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TA2CentralTrack(void *p) {
      delete ((::TA2CentralTrack*)p);
   }
   static void deleteArray_TA2CentralTrack(void *p) {
      delete [] ((::TA2CentralTrack*)p);
   }
   static void destruct_TA2CentralTrack(void *p) {
      typedef ::TA2CentralTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CentralTrack

//______________________________________________________________________________
void TA2CylMwpc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CylMwpc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CylMwpc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CylMwpc::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CylMwpc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CylMwpc.
      TClass *R__cl = ::TA2CylMwpc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWait", &fWait);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fR", &fR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtI", &fRtI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtE", &fRtE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fC1", &fC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fC2", &fC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxDphiWIE", &fMaxDphiWIE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxDr", &fMaxDr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fI", &fI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUsedClW", &fUsedClW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUsedClI", &fUsedClI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUsedClE", &fUsedClE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNinters", &fNinters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInters", &fInters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNintersTrue", &fNintersTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIintersTrue", &fIintersTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNintersCandidate", &fNintersCandidate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIintersCandidate", &fIintersCandidate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIclI", &fIclI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIclE", &fIclE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZie", &fZie);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiIE", &fPhiIE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNie", &fNie);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDphiWIE", &fDphiWIE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiCorrEI[3]", &fPhiCorrEI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiCorr", &fPhiCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fXcorr", &fXcorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fYcorr", &fYcorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZcorr[8]", &fZcorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTypeInter", &fTypeInter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZInter", &fZInter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiInter", &fPhiInter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDphiWS", &fDphiWS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCGclI", &fCGclI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCGclW", &fCGclW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCGclE", &fCGclE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAclIE", &fAclIE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracks", &fTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracksTrue", &fNtracksTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTracksTrue", (void*)&fTracksTrue);
      R__insp.InspectMember("map<Double_t,Int_t>", (void*)&fTracksTrue, "fTracksTrue.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracksTrueCandidate", &fNtracksTrueCandidate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTracksTrueCandidate", (void*)&fTracksTrueCandidate);
      R__insp.InspectMember("map<Double_t,Int_t>", (void*)&fTracksTrueCandidate, "fTracksTrueCandidate.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracksCandidate", &fNtracksCandidate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTracksCandidate", (void*)&fTracksCandidate);
      R__insp.InspectMember("map<Double_t,Int_t>", (void*)&fTracksCandidate, "fTracksCandidate.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracksTrueBest", &fNtracksTrueBest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTracksTrueBest", (void*)&fTracksTrueBest);
      R__insp.InspectMember("map<Double_t,Int_t>", (void*)&fTracksTrueBest, "fTracksTrueBest.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracksTrueCandidateBest", &fNtracksTrueCandidateBest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTracksTrueCandidateBest", (void*)&fTracksTrueCandidateBest);
      R__insp.InspectMember("map<Double_t,Int_t>", (void*)&fTracksTrueCandidateBest, "fTracksTrueCandidateBest.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracksCandidateBest", &fNtracksCandidateBest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTracksCandidateBest", (void*)&fTracksCandidateBest);
      R__insp.InspectMember("map<Double_t,Int_t>", (void*)&fTracksCandidateBest, "fTracksCandidateBest.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTypeTrack", &fTypeTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMagTrack", &fMagTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaTrack", &fThetaTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiTrack", &fPhiTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDPhiInters", &fDPhiInters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDZInters", &fDZInters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPsVertex[3]", &fPsVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPsVertexR", &fPsVertexR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEtrack", &fEtrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexes", &fVertexes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fItracks", &fItracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVert[3]", &fVert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertR", &fVertR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackDist", &fTrackDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReadGeneratedKinematics", &fReadGeneratedKinematics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSigmaZ", &fSigmaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSigmaPhi", &fSigmaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetEff", &fDetEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertSim[3]", fVertSim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDrHitsSim", &fDrHitsSim);
      TA2WireChamber::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CylMwpc(void *p) {
      delete ((::TA2CylMwpc*)p);
   }
   static void deleteArray_TA2CylMwpc(void *p) {
      delete [] ((::TA2CylMwpc*)p);
   }
   static void destruct_TA2CylMwpc(void *p) {
      typedef ::TA2CylMwpc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CylMwpc

//______________________________________________________________________________
void TA2CylMwpcStrip::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CylMwpcStrip.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CylMwpcStrip::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CylMwpcStrip::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CylMwpcStrip::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CylMwpcStrip.
      TClass *R__cl = ::TA2CylMwpcStrip::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadius", &fRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTgWC", &fTgWC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPitch", &fPitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEffLength", &fEffLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClustEn", &fClustEn);
      TA2WCLayerSven::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CylMwpcStrip(void *p) {
      delete ((::TA2CylMwpcStrip*)p);
   }
   static void deleteArray_TA2CylMwpcStrip(void *p) {
      delete [] ((::TA2CylMwpcStrip*)p);
   }
   static void destruct_TA2CylMwpcStrip(void *p) {
      typedef ::TA2CylMwpcStrip current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CylMwpcStrip

//______________________________________________________________________________
void TA2CylMwpcWire::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CylMwpcWire.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CylMwpcWire::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CylMwpcWire::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CylMwpcWire::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CylMwpcWire.
      TClass *R__cl = ::TA2CylMwpcWire::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadius", &fRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiSpace", &fPhiSpace);
      TA2WCLayerSven::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CylMwpcWire(void *p) {
      delete ((::TA2CylMwpcWire*)p);
   }
   static void deleteArray_TA2CylMwpcWire(void *p) {
      delete [] ((::TA2CylMwpcWire*)p);
   }
   static void destruct_TA2CylMwpcWire(void *p) {
      typedef ::TA2CylMwpcWire current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CylMwpcWire

//______________________________________________________________________________
void TA2MwpcIntersection::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MwpcIntersection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MwpcIntersection::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MwpcIntersection::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MwpcIntersection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MwpcIntersection.
      TClass *R__cl = ::TA2MwpcIntersection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition", &fPosition);
      R__insp.InspectMember(fPosition, "fPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIclI", &fIclI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIclW", &fIclW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIclE", &fIclE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDphiWIE", &fDphiWIE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAclIE", &fAclIE);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TA2MwpcIntersection(void *p) {
      return  p ? new(p) ::TA2MwpcIntersection : new ::TA2MwpcIntersection;
   }
   static void *newArray_TA2MwpcIntersection(Long_t nElements, void *p) {
      return p ? new(p) ::TA2MwpcIntersection[nElements] : new ::TA2MwpcIntersection[nElements];
   }
   // Wrapper around operator delete
   static void delete_TA2MwpcIntersection(void *p) {
      delete ((::TA2MwpcIntersection*)p);
   }
   static void deleteArray_TA2MwpcIntersection(void *p) {
      delete [] ((::TA2MwpcIntersection*)p);
   }
   static void destruct_TA2MwpcIntersection(void *p) {
      typedef ::TA2MwpcIntersection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MwpcIntersection

//______________________________________________________________________________
void TA2MwpcTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MwpcTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MwpcTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MwpcTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MwpcTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MwpcTrack.
      TClass *R__cl = ::TA2MwpcTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIinters[2]", fIinters);
      TA2TrackLine::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TA2MwpcTrack(void *p) {
      return  p ? new(p) ::TA2MwpcTrack : new ::TA2MwpcTrack;
   }
   static void *newArray_TA2MwpcTrack(Long_t nElements, void *p) {
      return p ? new(p) ::TA2MwpcTrack[nElements] : new ::TA2MwpcTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TA2MwpcTrack(void *p) {
      delete ((::TA2MwpcTrack*)p);
   }
   static void deleteArray_TA2MwpcTrack(void *p) {
      delete [] ((::TA2MwpcTrack*)p);
   }
   static void destruct_TA2MwpcTrack(void *p) {
      typedef ::TA2MwpcTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MwpcTrack

//______________________________________________________________________________
void TA2TrackLine::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TrackLine.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TrackLine::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TrackLine::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TrackLine::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TrackLine.
      TClass *R__cl = ::TA2TrackLine::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrigin", &fOrigin);
      R__insp.InspectMember(fOrigin, "fOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirCos", &fDirCos);
      R__insp.InspectMember(fDirCos, "fDirCos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPsVertex", &fPsVertex);
      R__insp.InspectMember(fPsVertex, "fPsVertex.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TA2TrackLine(void *p) {
      return  p ? new(p) ::TA2TrackLine : new ::TA2TrackLine;
   }
   static void *newArray_TA2TrackLine(Long_t nElements, void *p) {
      return p ? new(p) ::TA2TrackLine[nElements] : new ::TA2TrackLine[nElements];
   }
   // Wrapper around operator delete
   static void delete_TA2TrackLine(void *p) {
      delete ((::TA2TrackLine*)p);
   }
   static void deleteArray_TA2TrackLine(void *p) {
      delete [] ((::TA2TrackLine*)p);
   }
   static void destruct_TA2TrackLine(void *p) {
      typedef ::TA2TrackLine current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TrackLine

//______________________________________________________________________________
void TA2Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Event::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Event.
      TClass *R__cl = ::TA2Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam[32]", Beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particle[16]", Particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBeam", &nBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nParticle", &nParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvent", &nEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PatternL1", &PatternL1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PatternL2", &PatternL2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TA2Event(void *p) {
      return  p ? new(p) ::TA2Event : new ::TA2Event;
   }
   static void *newArray_TA2Event(Long_t nElements, void *p) {
      return p ? new(p) ::TA2Event[nElements] : new ::TA2Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_TA2Event(void *p) {
      delete ((::TA2Event*)p);
   }
   static void deleteArray_TA2Event(void *p) {
      delete [] ((::TA2Event*)p);
   }
   static void destruct_TA2Event(void *p) {
      typedef ::TA2Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Event

namespace ROOT {
   void maplEdoublecOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEdoublecOintgR_Dictionary();
   static void *new_maplEdoublecOintgR(void *p = 0);
   static void *newArray_maplEdoublecOintgR(Long_t size, void *p);
   static void delete_maplEdoublecOintgR(void *p);
   static void deleteArray_maplEdoublecOintgR(void *p);
   static void destruct_maplEdoublecOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<double,int>*)
   {
      map<double,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,int>", -2, "map2.dll", 0,
                  typeid(map<double,int>), DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<double,int>) );
      instance.SetNew(&new_maplEdoublecOintgR);
      instance.SetNewArray(&newArray_maplEdoublecOintgR);
      instance.SetDelete(&delete_maplEdoublecOintgR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOintgR);
      instance.SetDestructor(&destruct_maplEdoublecOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<double,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<double,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEdoublecOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,int> : new map<double,int>;
   }
   static void *newArray_maplEdoublecOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,int>[nElements] : new map<double,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOintgR(void *p) {
      delete ((map<double,int>*)p);
   }
   static void deleteArray_maplEdoublecOintgR(void *p) {
      delete [] ((map<double,int>*)p);
   }
   static void destruct_maplEdoublecOintgR(void *p) {
      typedef map<double,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<double,int>

namespace ROOT {
   void maplEdoublecOpairlEintcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEdoublecOpairlEintcOintgRsPgR_Dictionary();
   static void *new_maplEdoublecOpairlEintcOintgRsPgR(void *p = 0);
   static void *newArray_maplEdoublecOpairlEintcOintgRsPgR(Long_t size, void *p);
   static void delete_maplEdoublecOpairlEintcOintgRsPgR(void *p);
   static void deleteArray_maplEdoublecOpairlEintcOintgRsPgR(void *p);
   static void destruct_maplEdoublecOpairlEintcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<double,pair<int,int> >*)
   {
      map<double,pair<int,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,pair<int,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,pair<int,int> >", -2, "prec_stl/map", 63,
                  typeid(map<double,pair<int,int> >), DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOpairlEintcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<double,pair<int,int> >) );
      instance.SetNew(&new_maplEdoublecOpairlEintcOintgRsPgR);
      instance.SetNewArray(&newArray_maplEdoublecOpairlEintcOintgRsPgR);
      instance.SetDelete(&delete_maplEdoublecOpairlEintcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOpairlEintcOintgRsPgR);
      instance.SetDestructor(&destruct_maplEdoublecOpairlEintcOintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<double,pair<int,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,pair<int,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOpairlEintcOintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<double,pair<int,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEdoublecOpairlEintcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,pair<int,int> > : new map<double,pair<int,int> >;
   }
   static void *newArray_maplEdoublecOpairlEintcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,pair<int,int> >[nElements] : new map<double,pair<int,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOpairlEintcOintgRsPgR(void *p) {
      delete ((map<double,pair<int,int> >*)p);
   }
   static void deleteArray_maplEdoublecOpairlEintcOintgRsPgR(void *p) {
      delete [] ((map<double,pair<int,int> >*)p);
   }
   static void destruct_maplEdoublecOpairlEintcOintgRsPgR(void *p) {
      typedef map<double,pair<int,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<double,pair<int,int> >

namespace ROOT {
   void maplEintcOTGraph2DmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTGraph2DmUgR_Dictionary();
   static void *new_maplEintcOTGraph2DmUgR(void *p = 0);
   static void *newArray_maplEintcOTGraph2DmUgR(Long_t size, void *p);
   static void delete_maplEintcOTGraph2DmUgR(void *p);
   static void deleteArray_maplEintcOTGraph2DmUgR(void *p);
   static void destruct_maplEintcOTGraph2DmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TGraph2D*>*)
   {
      map<int,TGraph2D*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TGraph2D*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TGraph2D*>", -2, "prec_stl/map", 63,
                  typeid(map<int,TGraph2D*>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOTGraph2DmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TGraph2D*>) );
      instance.SetNew(&new_maplEintcOTGraph2DmUgR);
      instance.SetNewArray(&newArray_maplEintcOTGraph2DmUgR);
      instance.SetDelete(&delete_maplEintcOTGraph2DmUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTGraph2DmUgR);
      instance.SetDestructor(&destruct_maplEintcOTGraph2DmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,TGraph2D*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TGraph2D*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTGraph2DmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,TGraph2D*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOTGraph2DmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TGraph2D*> : new map<int,TGraph2D*>;
   }
   static void *newArray_maplEintcOTGraph2DmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TGraph2D*>[nElements] : new map<int,TGraph2D*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTGraph2DmUgR(void *p) {
      delete ((map<int,TGraph2D*>*)p);
   }
   static void deleteArray_maplEintcOTGraph2DmUgR(void *p) {
      delete [] ((map<int,TGraph2D*>*)p);
   }
   static void destruct_maplEintcOTGraph2DmUgR(void *p) {
      typedef map<int,TGraph2D*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,TGraph2D*>

/********************************************************
* /home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/UserDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableUserDict();

extern "C" void G__set_cpp_environmentUserDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2MwpcTrack.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS2009.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylStripSven.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS_BaF2.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Taps2009LE.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Calorimeter.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2ThreshPi0.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2UserPhysics.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Trigger.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CentralApparatus.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CrystalBall.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylMWPC.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2PhotoPhysics.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS2008.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Compton.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2UserAnalysis.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2GenericApp.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Efficiency.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CalArray.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TrackLine.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2FPMicro.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS_PbWO4.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Cristina.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2WCLayerSven.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2Event.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylWireSven.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2TAPS.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylMwpcStrip.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylMwpc.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CentralTrack.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2UserControl.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2PlasticPID.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2ParaPerpTest.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CylMwpcWire.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2CosmicCal.h");
  G__add_compiledheader("/home/cristina/AcquRoot/4v6/2012.05.19/acqu/root/src/TA2MwpcIntersection.h");
  G__cpp_reset_tagtableUserDict();
}
#include <new>
extern "C" int G__cpp_dllrevUserDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TA2TrackLine */
static int G__UserDict_227_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TrackLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2TrackLine[n];
     } else {
       p = new((void*) gvp) TA2TrackLine[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2TrackLine;
     } else {
       p = new((void*) gvp) TA2TrackLine;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TrackLine*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2TrackLine*) G__getstructoffset())->GetType();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TA2TrackLine*) G__getstructoffset())->GetOrigin();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TA2TrackLine*) G__getstructoffset())->GetDirCos();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TA2TrackLine*) G__getstructoffset())->GetPsVertex();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2TrackLine*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2TrackLine*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TrackLine*) G__getstructoffset())->SetType((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TrackLine*) G__getstructoffset())->SetOrigin(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TrackLine*) G__getstructoffset())->SetDirCos(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TrackLine*) G__getstructoffset())->SetPsVertex(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((TA2TrackLine*) G__getstructoffset())->BuildTrack(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TA2TrackLine*) G__getstructoffset())->BuildTrack(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(Double_t*) G__Doubleref(&libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TA2TrackLine*) G__getstructoffset())->BuildTrack(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2TrackLine*) G__getstructoffset())->Angle(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2TrackLine*) G__getstructoffset())->Angle(*(TA2TrackLine*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2TrackLine*) G__getstructoffset())->Angle((TA2TrackLine*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2TrackLine*) G__getstructoffset())->Angle(*(TVector2*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TrackLine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TrackLine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TrackLine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TrackLine::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TrackLine*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TrackLine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TrackLine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TrackLine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_227_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TrackLine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_227_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TrackLine* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TrackLine(*(TA2TrackLine*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TrackLine G__TTA2TrackLine;
static int G__UserDict_227_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TrackLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TrackLine*) (soff+(sizeof(TA2TrackLine)*i)))->~G__TTA2TrackLine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TrackLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TrackLine*) (soff))->~G__TTA2TrackLine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UserDict_227_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TrackLine* dest = (TA2TrackLine*) G__getstructoffset();
   *dest = *(TA2TrackLine*) libp->para[0].ref;
   const TA2TrackLine& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MwpcTrack */
static int G__UserDict_228_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MwpcTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2MwpcTrack[n];
     } else {
       p = new((void*) gvp) TA2MwpcTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2MwpcTrack;
     } else {
       p = new((void*) gvp) TA2MwpcTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2MwpcTrack*) G__getstructoffset())->GetIinter((const Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2MwpcTrack*) G__getstructoffset())->GetIinters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MwpcTrack::CalcTrackType((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MwpcTrack*) G__getstructoffset())->SetType((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MwpcTrack*) G__getstructoffset())->SetIinters((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MwpcTrack*) G__getstructoffset())->SetIinters((const Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MwpcTrack*) G__getstructoffset())->SetIinter((const UChar_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2MwpcTrack*) G__getstructoffset())->BuildTrack(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (const Int_t*) G__int(libp->para[4]), (const Int_t*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MwpcTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MwpcTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MwpcTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MwpcTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MwpcTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MwpcTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MwpcTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MwpcTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_228_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MwpcTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_228_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MwpcTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MwpcTrack(*(TA2MwpcTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MwpcTrack G__TTA2MwpcTrack;
static int G__UserDict_228_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MwpcTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MwpcTrack*) (soff+(sizeof(TA2MwpcTrack)*i)))->~G__TTA2MwpcTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MwpcTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MwpcTrack*) (soff))->~G__TTA2MwpcTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UserDict_228_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MwpcTrack* dest = (TA2MwpcTrack*) G__getstructoffset();
   *dest = *(TA2MwpcTrack*) libp->para[0].ref;
   const TA2MwpcTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2TAPS_BaF2 */
static int G__UserDict_738_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TAPS_BaF2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2TAPS_BaF2((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2TAPS_BaF2((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2TAPS_BaF2*) G__getstructoffset())->GetMaxSGElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetSGEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetLGEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2TAPS_BaF2*) G__getstructoffset())->GetEnergyAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetEnergyAll((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetClusterThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetEnergyResolutionGeV((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetEnergyResolution((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetPhiResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetPhiResolutionDg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetThetaResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetThetaResolutionDg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TAPS_BaF2*) G__getstructoffset())->GetTimeResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TAPS_BaF2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS_BaF2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TAPS_BaF2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TAPS_BaF2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS_BaF2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS_BaF2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS_BaF2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS_BaF2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS_BaF2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_738_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TAPS_BaF2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TAPS_BaF2(*(TA2TAPS_BaF2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TAPS_BaF2 G__TTA2TAPS_BaF2;
static int G__UserDict_738_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TAPS_BaF2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TAPS_BaF2*) (soff+(sizeof(TA2TAPS_BaF2)*i)))->~G__TTA2TAPS_BaF2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TAPS_BaF2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TAPS_BaF2*) (soff))->~G__TTA2TAPS_BaF2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2PlasticPID */
static int G__UserDict_739_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2PlasticPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2PlasticPID((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2PlasticPID((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PlasticPID*) G__getstructoffset())->PIDReadDecoded();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PlasticPID*) G__getstructoffset())->TAPSReadDecoded();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2PlasticPID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticPID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2PlasticPID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2PlasticPID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PlasticPID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticPID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2PlasticPID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticPID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_739_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2PlasticPID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_739_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2PlasticPID* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2PlasticPID(*(TA2PlasticPID*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2PlasticPID G__TTA2PlasticPID;
static int G__UserDict_739_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2PlasticPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2PlasticPID*) (soff+(sizeof(TA2PlasticPID)*i)))->~G__TTA2PlasticPID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2PlasticPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2PlasticPID*) (soff))->~G__TTA2PlasticPID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Calorimeter */
static int G__UserDict_750_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Calorimeter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Calorimeter((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Calorimeter((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Calorimeter*) G__getstructoffset())->PhotonReconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TA2Calorimeter*) G__getstructoffset())->SetLorentzVector((Double_t) G__double(libp->para[0]), (HitCluster_t*) G__int(libp->para[1]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Calorimeter*) G__getstructoffset())->GetCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Calorimeter*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Calorimeter*) G__getstructoffset())->GetPTracker());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Calorimeter*) G__getstructoffset())->GetP4_Nphoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Calorimeter*) G__getstructoffset())->GetM_Nphoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Calorimeter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Calorimeter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Calorimeter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Calorimeter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Calorimeter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Calorimeter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Calorimeter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Calorimeter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_750_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Calorimeter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_750_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Calorimeter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Calorimeter(*(TA2Calorimeter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Calorimeter G__TTA2Calorimeter;
static int G__UserDict_750_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Calorimeter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Calorimeter*) (soff+(sizeof(TA2Calorimeter)*i)))->~G__TTA2Calorimeter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Calorimeter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Calorimeter*) (soff))->~G__TTA2Calorimeter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Physics */
static int G__UserDict_755_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Physics* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Physics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Physics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Physics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Physics*) G__getstructoffset())->GetP4miss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Physics*) G__getstructoffset())->GetP4target());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2Physics*) G__getstructoffset())->GetTargetPos();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Physics*) G__getstructoffset())->GetMmiss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Physics*) G__getstructoffset())->GetPmiss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Physics*) G__getstructoffset())->GetPtheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Physics*) G__getstructoffset())->GetPphi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Physics*) G__getstructoffset())->GetNtarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Physics*) G__getstructoffset())->GetNperm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Physics*) G__getstructoffset())->GetNpermutation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Physics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Physics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Physics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Physics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Physics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Physics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Physics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Physics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_755_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Physics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_755_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Physics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Physics(*(TA2Physics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Physics));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Physics G__TTA2Physics;
static int G__UserDict_755_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Physics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Physics*) (soff+(sizeof(TA2Physics)*i)))->~G__TTA2Physics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Physics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Physics*) (soff))->~G__TTA2Physics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2TAPS2009 */
static int G__UserDict_756_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TAPS2009* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2TAPS2009((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2TAPS2009((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2009*) G__getstructoffset())->MakeAllRootinos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2009*) G__getstructoffset())->SimplePhotonReconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2009*) G__getstructoffset())->MainReconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TA2TAPS2009*) G__getstructoffset())->SetLorentzVector((Double_t) G__double(libp->para[0]), (HitCluster_t*) G__int(libp->para[1]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2009*) G__getstructoffset())->SetParticleInfo((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS2009*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2TAPS2009*) G__getstructoffset())->GetNparticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS2009*) G__getstructoffset())->GetCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS2009*) G__getstructoffset())->GetVeto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS2009*) G__getstructoffset())->GetP4_Nphoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2TAPS2009*) G__getstructoffset())->GetM_Nphoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2TAPS2009*) G__getstructoffset())->CheckParticleID((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2009*) G__getstructoffset())->CalibrateVetoEnergy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2009*) G__getstructoffset())->CalibrateBaF2Energy((TLorentzVector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TA2TAPS2009*) G__getstructoffset())->TAPS_GetCLInfo((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TAPS2009::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS2009::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TAPS2009::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TAPS2009::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2009*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS2009::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS2009::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS2009::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_756_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS2009::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_756_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TAPS2009* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TAPS2009(*(TA2TAPS2009*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TAPS2009 G__TTA2TAPS2009;
static int G__UserDict_756_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TAPS2009*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TAPS2009*) (soff+(sizeof(TA2TAPS2009)*i)))->~G__TTA2TAPS2009();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TAPS2009*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TAPS2009*) (soff))->~G__TTA2TAPS2009();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2UserAnalysis */
static int G__UserDict_758_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2UserAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2UserAnalysis((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TA2UserAnalysis((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2UserAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2UserAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2UserAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2UserAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_758_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_758_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2UserAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2UserAnalysis(*(TA2UserAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2UserAnalysis G__TTA2UserAnalysis;
static int G__UserDict_758_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2UserAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2UserAnalysis*) (soff+(sizeof(TA2UserAnalysis)*i)))->~G__TTA2UserAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2UserAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2UserAnalysis*) (soff))->~G__TTA2UserAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2WCLayerSven */
static int G__UserDict_759_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2WCLayerSven* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2WCLayerSven(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TA2WCLayerSven(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WCLayerSven*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2WCLayerSven*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WCLayerSven*) G__getstructoffset())->GetMaxClust());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2WCLayerSven::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WCLayerSven::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2WCLayerSven::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2WCLayerSven::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WCLayerSven*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WCLayerSven::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2WCLayerSven::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WCLayerSven::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_759_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2WCLayerSven::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_759_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2WCLayerSven* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2WCLayerSven(*(TA2WCLayerSven*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2WCLayerSven G__TTA2WCLayerSven;
static int G__UserDict_759_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2WCLayerSven*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2WCLayerSven*) (soff+(sizeof(TA2WCLayerSven)*i)))->~G__TTA2WCLayerSven();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2WCLayerSven*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2WCLayerSven*) (soff))->~G__TTA2WCLayerSven();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CylStripSven */
static int G__UserDict_760_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CylStripSven* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CylStripSven(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TA2CylStripSven(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetTgWC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetZ0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetPitch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetEffLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylStripSven*) G__getstructoffset())->GetZCor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetZCor((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylStripSven*) G__getstructoffset())->GetPhiCor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetPhiCor((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylStripSven*) G__getstructoffset())->GetClustEn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStripSven*) G__getstructoffset())->GetClustEn((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CylStripSven::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylStripSven::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CylStripSven::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CylStripSven::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylStripSven*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylStripSven::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylStripSven::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylStripSven::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_760_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylStripSven::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_760_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CylStripSven* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CylStripSven(*(TA2CylStripSven*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CylStripSven G__TTA2CylStripSven;
static int G__UserDict_760_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CylStripSven*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CylStripSven*) (soff+(sizeof(TA2CylStripSven)*i)))->~G__TTA2CylStripSven();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CylStripSven*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CylStripSven*) (soff))->~G__TTA2CylStripSven();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Taps2009LE */
static int G__UserDict_761_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Taps2009LE* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Taps2009LE((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Taps2009LE((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Taps2009LE*) G__getstructoffset())->MakeAllRootinos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Taps2009LE*) G__getstructoffset())->SimplePhotonReconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Taps2009LE*) G__getstructoffset())->MainReconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TA2Taps2009LE*) G__getstructoffset())->SetLorentzVector((Double_t) G__double(libp->para[0]), (HitCluster_t*) G__int(libp->para[1]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Taps2009LE*) G__getstructoffset())->GetCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Taps2009LE*) G__getstructoffset())->GetVeto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Taps2009LE*) G__getstructoffset())->GetP4_Nphoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Taps2009LE*) G__getstructoffset())->GetM_Nphoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Taps2009LE*) G__getstructoffset())->CheckParticleID((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Taps2009LE*) G__getstructoffset())->CalibrateVetoEnergy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Taps2009LE*) G__getstructoffset())->CalibrateBaF2Energy((TLorentzVector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TA2Taps2009LE*) G__getstructoffset())->TAPS_GetCLInfo((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Taps2009LE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Taps2009LE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Taps2009LE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Taps2009LE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Taps2009LE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Taps2009LE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Taps2009LE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Taps2009LE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_761_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Taps2009LE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_761_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Taps2009LE* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Taps2009LE(*(TA2Taps2009LE*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Taps2009LE G__TTA2Taps2009LE;
static int G__UserDict_761_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Taps2009LE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Taps2009LE*) (soff+(sizeof(TA2Taps2009LE)*i)))->~G__TTA2Taps2009LE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Taps2009LE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Taps2009LE*) (soff))->~G__TTA2Taps2009LE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CylMWPC */
static int G__UserDict_762_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CylMWPC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CylMWPC((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2CylMWPC((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMWPC*) G__getstructoffset())->MakeTracks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMWPC*) G__getstructoffset())->ReadParamFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylMWPC*) G__getstructoffset())->AbsDiffPhiSven((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylMWPC*) G__getstructoffset())->GetDPhiMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetZIntersect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetZIntersect((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetPhiSWDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetPhiSWDiff((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetPhiWire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetPhiWire((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetPhiDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetVertX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetVertY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetVertZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetPseudoVertX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetPseudoVertY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetPseudoVertZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylMWPC*) G__getstructoffset())->GetClustEnI((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylMWPC*) G__getstructoffset())->GetClustEnE((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetClustEnIPtr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylMWPC*) G__getstructoffset())->GetClustEnEPtr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CylMWPC*) G__getstructoffset())->GetNTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2CylMWPC*) G__getstructoffset())->GetNIntersect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CylMWPC*) G__getstructoffset())->GetNIntersect((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CylMWPC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMWPC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CylMWPC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CylMWPC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMWPC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMWPC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylMWPC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMWPC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_762_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylMWPC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_762_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CylMWPC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CylMWPC(*(TA2CylMWPC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CylMWPC G__TTA2CylMWPC;
static int G__UserDict_762_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CylMWPC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CylMWPC*) (soff+(sizeof(TA2CylMWPC)*i)))->~G__TTA2CylMWPC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CylMWPC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CylMWPC*) (soff))->~G__TTA2CylMWPC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CrystalBall */
static int G__UserDict_763_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CrystalBall* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CrystalBall((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2CrystalBall((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CrystalBall*) G__getstructoffset())->TriggerSections();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CrystalBall*) G__getstructoffset())->GetNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CrystalBall*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CrystalBall*) G__getstructoffset())->GetMWPC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CrystalBall*) G__getstructoffset())->GetNCharged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CrystalBall*) G__getstructoffset())->GetDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CrystalBall*) G__getstructoffset())->GetCBMeanTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CrystalBall*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2CrystalBall*) G__getstructoffset())->GetParticles((Int_t) G__int(libp->para[0]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CrystalBall*) G__getstructoffset())->GetNparticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CrystalBall*) G__getstructoffset())->GetNParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CrystalBall*) G__getstructoffset())->GetNTrigSectFired());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CrystalBall*) G__getstructoffset())->GetETrigCBA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CrystalBall*) G__getstructoffset())->GetETrigCBB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CrystalBall*) G__getstructoffset())->GetETrigCBC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CrystalBall*) G__getstructoffset())->GetETrigCBD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CrystalBall*) G__getstructoffset())->GetETrigSect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CrystalBall::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CrystalBall::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CrystalBall::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CrystalBall::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CrystalBall*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CrystalBall::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CrystalBall::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CrystalBall::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_763_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CrystalBall::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_763_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CrystalBall* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CrystalBall(*(TA2CrystalBall*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CrystalBall G__TTA2CrystalBall;
static int G__UserDict_763_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CrystalBall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CrystalBall*) (soff+(sizeof(TA2CrystalBall)*i)))->~G__TTA2CrystalBall();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CrystalBall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CrystalBall*) (soff))->~G__TTA2CrystalBall();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2PhotoPhysics */
static int G__UserDict_782_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2PhotoPhysics* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2PhotoPhysics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2PhotoPhysics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PhotoPhysics*) G__getstructoffset())->Sort2Photon();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PhotoPhysics*) G__getstructoffset())->SortNPhoton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PhotoPhysics*) G__getstructoffset())->MarkUndefined((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PhotoPhysics*) G__getstructoffset())->MarkEndBuffer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2PhotoPhysics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PhotoPhysics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2PhotoPhysics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2PhotoPhysics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PhotoPhysics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PhotoPhysics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2PhotoPhysics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PhotoPhysics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_782_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2PhotoPhysics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_782_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2PhotoPhysics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2PhotoPhysics(*(TA2PhotoPhysics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2PhotoPhysics G__TTA2PhotoPhysics;
static int G__UserDict_782_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2PhotoPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2PhotoPhysics*) (soff+(sizeof(TA2PhotoPhysics)*i)))->~G__TTA2PhotoPhysics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2PhotoPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2PhotoPhysics*) (soff))->~G__TTA2PhotoPhysics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2ThreshPi0 */
static int G__UserDict_783_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2ThreshPi0* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2ThreshPi0((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2ThreshPi0((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ThreshPi0*) G__getstructoffset())->Sort2Photon();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ThreshPi0*) G__getstructoffset())->SortNPhoton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ThreshPi0*) G__getstructoffset())->MarkUndefined((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ThreshPi0*) G__getstructoffset())->MarkEndBuffer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ThreshPi0*) G__getstructoffset())->Sqr((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ThreshPi0*) G__getstructoffset())->Tgg_Min((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ThreshPi0*) G__getstructoffset())->Energy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ThreshPi0*) G__getstructoffset())->Momentum((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ThreshPi0*) G__getstructoffset())->qp_thcm((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ThreshPi0*) G__getstructoffset())->qT_max((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ThreshPi0*) G__getstructoffset())->Linear((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2ThreshPi0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ThreshPi0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2ThreshPi0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2ThreshPi0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ThreshPi0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ThreshPi0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2ThreshPi0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ThreshPi0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_783_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2ThreshPi0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_783_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2ThreshPi0* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2ThreshPi0(*(TA2ThreshPi0*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2ThreshPi0 G__TTA2ThreshPi0;
static int G__UserDict_783_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2ThreshPi0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2ThreshPi0*) (soff+(sizeof(TA2ThreshPi0)*i)))->~G__TTA2ThreshPi0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2ThreshPi0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2ThreshPi0*) (soff))->~G__TTA2ThreshPi0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2UserPhysics */
static int G__UserDict_784_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2UserPhysics* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2UserPhysics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2UserPhysics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2UserPhysics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserPhysics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2UserPhysics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2UserPhysics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2UserPhysics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserPhysics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserPhysics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserPhysics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_784_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserPhysics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_784_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2UserPhysics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2UserPhysics(*(TA2UserPhysics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2UserPhysics G__TTA2UserPhysics;
static int G__UserDict_784_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2UserPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2UserPhysics*) (soff+(sizeof(TA2UserPhysics)*i)))->~G__TTA2UserPhysics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2UserPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2UserPhysics*) (soff))->~G__TTA2UserPhysics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CylMwpcStrip */
static int G__UserDict_792_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CylMwpcStrip* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CylMwpcStrip(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TA2CylMwpcStrip(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpcStrip*) G__getstructoffset())->CGCluster((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpcStrip*) G__getstructoffset())->IsInside((const Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpcStrip*) G__getstructoffset())->GetRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpcStrip*) G__getstructoffset())->GetTgWC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpcStrip*) G__getstructoffset())->GetPitch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpcStrip*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpcStrip*) G__getstructoffset())->GetEffLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TA2CylMwpcStrip*) G__getstructoffset())->GetClustEn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpcStrip*) G__getstructoffset())->GetClustEn((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylMwpcStrip*) G__getstructoffset())->CGClusterFromPhiZ(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, (const TA2CylMwpcStrip::EHelicity) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CylMwpcStrip::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpcStrip::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CylMwpcStrip::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CylMwpcStrip::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpcStrip*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpcStrip::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylMwpcStrip::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpcStrip::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_792_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylMwpcStrip::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_792_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CylMwpcStrip* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CylMwpcStrip(*(TA2CylMwpcStrip*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CylMwpcStrip G__TTA2CylMwpcStrip;
static int G__UserDict_792_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CylMwpcStrip*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CylMwpcStrip*) (soff+(sizeof(TA2CylMwpcStrip)*i)))->~G__TTA2CylMwpcStrip();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CylMwpcStrip*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CylMwpcStrip*) (soff))->~G__TTA2CylMwpcStrip();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CylMwpcWire */
static int G__UserDict_794_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CylMwpcWire* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CylMwpcWire(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TA2CylMwpcWire(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpcWire*) G__getstructoffset())->CGCluster((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpcWire*) G__getstructoffset())->GetRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpcWire*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CylMwpcWire::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpcWire::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CylMwpcWire::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CylMwpcWire::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpcWire*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpcWire::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylMwpcWire::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpcWire::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_794_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylMwpcWire::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_794_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CylMwpcWire* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CylMwpcWire(*(TA2CylMwpcWire*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CylMwpcWire G__TTA2CylMwpcWire;
static int G__UserDict_794_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CylMwpcWire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CylMwpcWire*) (soff+(sizeof(TA2CylMwpcWire)*i)))->~G__TTA2CylMwpcWire();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CylMwpcWire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CylMwpcWire*) (soff))->~G__TTA2CylMwpcWire();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MwpcIntersection */
static int G__UserDict_795_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MwpcIntersection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2MwpcIntersection[n];
     } else {
       p = new((void*) gvp) TA2MwpcIntersection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2MwpcIntersection;
     } else {
       p = new((void*) gvp) TA2MwpcIntersection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MwpcIntersection*) G__getstructoffset())->Set(
*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5])
, (const TA2MwpcIntersection::EType) G__int(libp->para[6]), (const Double_t) G__double(libp->para[7])
, (const Double_t) G__double(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2MwpcIntersection*) G__getstructoffset())->GetPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2MwpcIntersection*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2MwpcIntersection*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2MwpcIntersection*) G__getstructoffset())->GetIclI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2MwpcIntersection*) G__getstructoffset())->GetIclW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2MwpcIntersection*) G__getstructoffset())->GetIclE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2MwpcIntersection*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2MwpcIntersection*) G__getstructoffset())->GetDphiWIE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2MwpcIntersection*) G__getstructoffset())->GetAclIE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MwpcIntersection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MwpcIntersection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MwpcIntersection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MwpcIntersection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MwpcIntersection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MwpcIntersection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MwpcIntersection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MwpcIntersection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_795_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MwpcIntersection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_795_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MwpcIntersection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MwpcIntersection(*(TA2MwpcIntersection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MwpcIntersection G__TTA2MwpcIntersection;
static int G__UserDict_795_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MwpcIntersection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MwpcIntersection*) (soff+(sizeof(TA2MwpcIntersection)*i)))->~G__TTA2MwpcIntersection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MwpcIntersection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MwpcIntersection*) (soff))->~G__TTA2MwpcIntersection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UserDict_795_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MwpcIntersection* dest = (TA2MwpcIntersection*) G__getstructoffset();
   *dest = *(TA2MwpcIntersection*) libp->para[0].ref;
   const TA2MwpcIntersection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CylMwpc */
static int G__UserDict_797_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->Test();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetStripsI((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetStripsE((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetWires((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->ResetWiresAndStripsUsage((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->ResetWiresAndStripsUsage();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpc*) G__getstructoffset())->IsUsedClW((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpc*) G__getstructoffset())->IsUsedClI((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpc*) G__getstructoffset())->IsUsedClE((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->SetUsedClW((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->SetUsedClI((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->SetUsedClE((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpc*) G__getstructoffset())->IsUsedWIE((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpc*) G__getstructoffset())->IsUsedWIE((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpc*) G__getstructoffset())->IsUsedWIE((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->SetUsedWIE((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->SetUsedWIE((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->SetUsedWIE((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->AddIntersection(
(const Int_t) G__int(libp->para[0]), (const TA2MwpcIntersection::EType) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpc*) G__getstructoffset())->TooManyInters((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->PhiCorrEI((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->ZcorrEI((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->ZcorrEW((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->ZinterIE((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->PhiInterIE((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->ZinterWI((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (const Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->ZinterWE((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (const Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->Xinter((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->Yinter((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CylMwpc*) G__getstructoffset())->Zinter((const Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNinters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNinters((const Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetInters((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetInters((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNintersTrue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNintersTrue((const Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetIintersTrue((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetIintersTrue((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetInterTrue((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNintersCandidate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNintersCandidate((const Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetIintersCandidate((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetIintersCandidate((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetInterCandidate((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetIclI((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetIclE((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetZie((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetPhiIE((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNie());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetDphiWIE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->MakeTracks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->SelectBestTracks(*(map<Double_t,Int_t>*) libp->para[0].ref, *(map<Double_t,Int_t>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CylMwpc*) G__getstructoffset())->TooManyTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNtracks();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetTrack((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksTruePtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksTrue();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetTracksTrue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksTrueCandidatePtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksTrueCandidate();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetTracksTrueCandidate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksCandidatePtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksCandidate();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetTracksCandidate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksTrueBestPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksTrueBest();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetTracksTrueBest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksTrueCandidateBestPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksTrueCandidateBest();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetTracksTrueCandidateBest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksCandidateBestPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNtracksCandidateBest();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetTracksCandidateBest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetMaxVertex();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CylMwpc*) G__getstructoffset())->GetNvertexes();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetNvertexPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CylMwpc*) G__getstructoffset())->GetVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CylMwpc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CylMwpc((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2CylMwpc((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->ReadGeneratedKinematics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->ReadMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CylMwpc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CylMwpc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CylMwpc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylMwpc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylMwpc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylMwpc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_797_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylMwpc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_797_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CylMwpc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CylMwpc(*(TA2CylMwpc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CylMwpc G__TTA2CylMwpc;
static int G__UserDict_797_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CylMwpc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CylMwpc*) (soff+(sizeof(TA2CylMwpc)*i)))->~G__TTA2CylMwpc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CylMwpc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CylMwpc*) (soff))->~G__TTA2CylMwpc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CalArray */
static int G__UserDict_812_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CalArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CalArray((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2CalArray((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CalArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CalArray*) G__getstructoffset())->DecodeClusterUCLA();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetClusterThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetSigmaEnergyGeV((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetSigmaEnergy((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetSigmaPhi((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetSigmaPhiDg((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetSigmaTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetSigmaThetaDg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetSigmaTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CalArray*) G__getstructoffset())->GetEnergyAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CalArray*) G__getstructoffset())->GetEnergyAll((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CalArray*) G__getstructoffset())->GetClusterUCLA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CalArray*) G__getstructoffset())->GetClusterUCLA((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2CalArray*) G__getstructoffset())->IsUCLAClustering());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2CalArray*) G__getstructoffset())->GetTempHits2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CalArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CalArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CalArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CalArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CalArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CalArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CalArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CalArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_812_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CalArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_812_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CalArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CalArray(*(TA2CalArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CalArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CalArray G__TTA2CalArray;
static int G__UserDict_812_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CalArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CalArray*) (soff+(sizeof(TA2CalArray)*i)))->~G__TTA2CalArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CalArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CalArray*) (soff))->~G__TTA2CalArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CentralTrack */
static int G__UserDict_814_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CentralTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2CentralTrack[n];
     } else {
       p = new((void*) gvp) TA2CentralTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2CentralTrack;
     } else {
       p = new((void*) gvp) TA2CentralTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetTrack(
(const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, *(TVector3*) libp->para[4].ref, *(TVector3*) libp->para[5].ref
, *(TVector3*) libp->para[6].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetIhitPid((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetEhitPid(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetThitPid(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetIinterMwpc((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetIintersMwpc((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetEtrackMwpc(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetTtrackMwpc(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetIclNaI((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetEclNaI(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetTclNaI(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetMclNaI(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetCentralIndexNaI(*(Int_t*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetSigmaTimeNaI(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetSigmaEnergyNaI(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetSigmaPhiNaI(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->SetSigmaThetaNaI(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CentralTrack::CalcTrackType((const Bool_t) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1])
, (const Bool_t) G__int(libp->para[2]), (const Bool_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2CentralTrack*) G__getstructoffset())->GetIhitPid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetEhitPid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetThitPid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2CentralTrack*) G__getstructoffset())->GetIinterMwpc((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CentralTrack*) G__getstructoffset())->GetIintersMwpc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetEtrackMwpc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetTtrackMwpc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2CentralTrack*) G__getstructoffset())->GetIclNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetEclNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetTclNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetMclNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2CentralTrack*) G__getstructoffset())->GetCentralIndexNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetSigmaTimeNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetSigmaEnergyNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetSigmaPhiNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralTrack*) G__getstructoffset())->GetSigmaThetaNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralTrack*) G__getstructoffset())->HasPid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralTrack*) G__getstructoffset())->HasMwpc((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralTrack*) G__getstructoffset())->HasMwpc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2CentralTrack*) G__getstructoffset())->HasSingleMwpc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralTrack*) G__getstructoffset())->HasNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralTrack*) G__getstructoffset())->IsNeutral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CentralTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CentralTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CentralTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CentralTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CentralTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CentralTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CentralTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_814_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CentralTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_814_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CentralTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CentralTrack(*(TA2CentralTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CentralTrack G__TTA2CentralTrack;
static int G__UserDict_814_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CentralTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CentralTrack*) (soff+(sizeof(TA2CentralTrack)*i)))->~G__TTA2CentralTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CentralTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CentralTrack*) (soff))->~G__TTA2CentralTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UserDict_814_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CentralTrack* dest = (TA2CentralTrack*) G__getstructoffset();
   *dest = *(TA2CentralTrack*) libp->para[0].ref;
   const TA2CentralTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CentralApparatus */
static int G__UserDict_815_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralApparatus*) G__getstructoffset())->Test();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CentralApparatus*) G__getstructoffset())->GetMaxTrack();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((const TA2CentralApparatus*) G__getstructoffset())->GetFactorTrackLengthNaI();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetPid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetMwpc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetPositionsPid((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetPositionsNaI((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralApparatus*) G__getstructoffset())->SetUsedClNaI((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralApparatus*) G__getstructoffset())->IsUsedClNaI((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralApparatus*) G__getstructoffset())->SetUsedHitPid((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralApparatus*) G__getstructoffset())->IsUsedHitPid((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralApparatus*) G__getstructoffset())->CalcEhitPid((const Int_t) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TA2CentralApparatus*) G__getstructoffset())->CalcEtrackMwpc((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetAnalyseNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetAnalysePid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetAnalyseMwpc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CentralApparatus*) G__getstructoffset())->GetNtracks();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetNtracksPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CentralApparatus*) G__getstructoffset())->GetNch();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetNchPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetIchTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CentralApparatus*) G__getstructoffset())->GetNne();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetNnePtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetIneTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CentralApparatus*) G__getstructoffset())->GetNtracksSingleMwpc();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetNtracksSingleMwpcPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CentralApparatus*) G__getstructoffset())->GetNtracksSingleMwpcBest();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetNtracksSingleMwpcBestPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CentralApparatus*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2CentralApparatus*) G__getstructoffset())->GetParticles((Int_t) G__int(libp->para[0]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CentralApparatus*) G__getstructoffset())->GetNparticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2CentralApparatus*) G__getstructoffset())->GetNParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const TA2CentralApparatus*) G__getstructoffset())->GetNvertexes();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2CentralApparatus*) G__getstructoffset())->GetVertexes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralApparatus*) G__getstructoffset())->AddParticleInfo(*(TA2CentralTrack*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CentralApparatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CentralApparatus((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2CentralApparatus((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralApparatus*) G__getstructoffset())->MarkEndBuffers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CentralApparatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CentralApparatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CentralApparatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CentralApparatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CentralApparatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CentralApparatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CentralApparatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CentralApparatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_815_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CentralApparatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_815_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CentralApparatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CentralApparatus(*(TA2CentralApparatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CentralApparatus G__TTA2CentralApparatus;
static int G__UserDict_815_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CentralApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CentralApparatus*) (soff+(sizeof(TA2CentralApparatus)*i)))->~G__TTA2CentralApparatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CentralApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CentralApparatus*) (soff))->~G__TTA2CentralApparatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Event */
static int G__UserDict_821_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Event[n];
     } else {
       p = new((void*) gvp) TA2Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Event;
     } else {
       p = new((void*) gvp) TA2Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Event*) G__getstructoffset())->GetBeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Event*) G__getstructoffset())->GetBeam((Int_t) G__int(libp->para[0]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Event*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Event*) G__getstructoffset())->GetParticle((Int_t) G__int(libp->para[0]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Event*) G__getstructoffset())->GetNBeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Event*) G__getstructoffset())->GetNParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Event*) G__getstructoffset())->GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Event*) G__getstructoffset())->GetL1Pattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Event*) G__getstructoffset())->GetL2Pattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Event*) G__getstructoffset())->AddBeam(*((TA2Particle*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Event*) G__getstructoffset())->AddParticle(*((TA2Particle*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Event*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Event*) G__getstructoffset())->SetEventNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Event*) G__getstructoffset())->SetEventNumber();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Event*) G__getstructoffset())->SetL1Pattern((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Event*) G__getstructoffset())->SetL2Pattern((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_821_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_821_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Event(*(TA2Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Event G__TTA2Event;
static int G__UserDict_821_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Event*) (soff+(sizeof(TA2Event)*i)))->~G__TTA2Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Event*) (soff))->~G__TTA2Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UserDict_821_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Event* dest = (TA2Event*) G__getstructoffset();
   *dest = *(TA2Event*) libp->para[0].ref;
   const TA2Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Trigger */
static int G__UserDict_823_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Trigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Trigger((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Trigger((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Trigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Trigger*) G__getstructoffset())->CloseTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Trigger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Trigger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Trigger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Trigger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Trigger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Trigger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Trigger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Trigger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_823_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Trigger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_823_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Trigger* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Trigger(*(TA2Trigger*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Trigger));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Trigger G__TTA2Trigger;
static int G__UserDict_823_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Trigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Trigger*) (soff+(sizeof(TA2Trigger)*i)))->~G__TTA2Trigger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Trigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Trigger*) (soff))->~G__TTA2Trigger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CylWireSven */
static int G__UserDict_824_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CylWireSven* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CylWireSven(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TA2CylWireSven(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylWireSven*) G__getstructoffset())->GetRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylWireSven*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylWireSven*) G__getstructoffset())->GetPhiCor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylWireSven*) G__getstructoffset())->GetPhiCor((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CylWireSven::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylWireSven::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CylWireSven::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CylWireSven::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylWireSven*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylWireSven::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylWireSven::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylWireSven::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_824_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylWireSven::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_824_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CylWireSven* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CylWireSven(*(TA2CylWireSven*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CylWireSven G__TTA2CylWireSven;
static int G__UserDict_824_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CylWireSven*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CylWireSven*) (soff+(sizeof(TA2CylWireSven)*i)))->~G__TTA2CylWireSven();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CylWireSven*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CylWireSven*) (soff))->~G__TTA2CylWireSven();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2TAPS_PbWO4 */
static int G__UserDict_825_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TAPS_PbWO4* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2TAPS_PbWO4((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2TAPS_PbWO4((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TAPS_PbWO4::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS_PbWO4::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TAPS_PbWO4::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TAPS_PbWO4::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS_PbWO4*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS_PbWO4::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS_PbWO4::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS_PbWO4::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_825_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS_PbWO4::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_825_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TAPS_PbWO4* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TAPS_PbWO4(*(TA2TAPS_PbWO4*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TAPS_PbWO4 G__TTA2TAPS_PbWO4;
static int G__UserDict_825_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TAPS_PbWO4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TAPS_PbWO4*) (soff+(sizeof(TA2TAPS_PbWO4)*i)))->~G__TTA2TAPS_PbWO4();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TAPS_PbWO4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TAPS_PbWO4*) (soff))->~G__TTA2TAPS_PbWO4();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2TAPS2008 */
static int G__UserDict_826_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS2008*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2TAPS2008*) G__getstructoffset())->GetParticles((Int_t) G__int(libp->para[0]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2TAPS2008*) G__getstructoffset())->GetNparticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2TAPS2008*) G__getstructoffset())->GetNParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2008*) G__getstructoffset())->SetParticleInfo((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TAPS2008* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2TAPS2008((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2TAPS2008((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2008*) G__getstructoffset())->MakeAllRootinos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2008*) G__getstructoffset())->SimplePhotonReconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2008*) G__getstructoffset())->MainReconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TA2TAPS2008*) G__getstructoffset())->SetLorentzVector((Double_t) G__double(libp->para[0]), (HitCluster_t*) G__int(libp->para[1]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS2008*) G__getstructoffset())->GetCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS2008*) G__getstructoffset())->GetVeto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2TAPS2008*) G__getstructoffset())->CheckParticleID((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TAPS2008::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS2008::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TAPS2008::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TAPS2008::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS2008*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS2008::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS2008::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS2008::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_826_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS2008::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_826_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TAPS2008* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TAPS2008(*(TA2TAPS2008*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TAPS2008 G__TTA2TAPS2008;
static int G__UserDict_826_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TAPS2008*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TAPS2008*) (soff+(sizeof(TA2TAPS2008)*i)))->~G__TTA2TAPS2008();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TAPS2008*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TAPS2008*) (soff))->~G__TTA2TAPS2008();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Compton */
static int G__UserDict_827_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Compton* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Compton((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Compton((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Compton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Compton*) G__getstructoffset())->Sort2Photon();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Compton*) G__getstructoffset())->SortNPhoton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Compton*) G__getstructoffset())->MarkUndefined((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Compton*) G__getstructoffset())->MarkEndBuffer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Compton*) G__getstructoffset())->Sqr((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Compton*) G__getstructoffset())->MsepCut((Bool_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Compton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Compton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Compton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Compton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Compton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Compton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Compton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Compton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_827_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Compton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_827_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Compton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Compton(*(TA2Compton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Compton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Compton G__TTA2Compton;
static int G__UserDict_827_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Compton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Compton*) (soff+(sizeof(TA2Compton)*i)))->~G__TTA2Compton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Compton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Compton*) (soff))->~G__TTA2Compton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2FPMicro */
static int G__UserDict_831_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2FPMicro* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2FPMicro((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2FPMicro((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2FPMicro*) G__getstructoffset())->GetFPhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2FPMicro*) G__getstructoffset())->GetNFPhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2FPMicro*) G__getstructoffset())->GetNFPelem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2FPMicro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FPMicro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2FPMicro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2FPMicro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2FPMicro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FPMicro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2FPMicro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FPMicro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_831_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2FPMicro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_831_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2FPMicro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2FPMicro(*(TA2FPMicro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2FPMicro G__TTA2FPMicro;
static int G__UserDict_831_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2FPMicro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2FPMicro*) (soff+(sizeof(TA2FPMicro)*i)))->~G__TTA2FPMicro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2FPMicro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2FPMicro*) (soff))->~G__TTA2FPMicro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2GenericApp */
static int G__UserDict_832_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2GenericApp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2GenericApp((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2GenericApp((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericApp*) G__getstructoffset())->GetGenDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericApp*) G__getstructoffset())->GetLScint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericApp*) G__getstructoffset())->GetLTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericApp*) G__getstructoffset())->GetTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2GenericApp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2GenericApp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2GenericApp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericApp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericApp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_832_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericApp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_832_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2GenericApp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2GenericApp(*(TA2GenericApp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2GenericApp G__TTA2GenericApp;
static int G__UserDict_832_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2GenericApp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2GenericApp*) (soff+(sizeof(TA2GenericApp)*i)))->~G__TTA2GenericApp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2GenericApp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2GenericApp*) (soff))->~G__TTA2GenericApp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Efficiency */
static int G__UserDict_833_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Efficiency* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Efficiency((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Efficiency((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Efficiency*) G__getstructoffset())->Sort2Photon();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Efficiency*) G__getstructoffset())->SortNPhoton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Efficiency*) G__getstructoffset())->MarkUndefined((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Efficiency*) G__getstructoffset())->MarkEndBuffer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Efficiency*) G__getstructoffset())->Sqr((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Efficiency::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Efficiency::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Efficiency::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Efficiency::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Efficiency*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Efficiency::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Efficiency::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Efficiency::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_833_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Efficiency::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_833_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Efficiency* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Efficiency(*(TA2Efficiency*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Efficiency G__TTA2Efficiency;
static int G__UserDict_833_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Efficiency*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Efficiency*) (soff+(sizeof(TA2Efficiency)*i)))->~G__TTA2Efficiency();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Efficiency*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Efficiency*) (soff))->~G__TTA2Efficiency();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Cristina */
static int G__UserDict_834_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Cristina* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Cristina((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Cristina((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Cristina));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Cristina*) G__getstructoffset())->CloseTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Cristina::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Cristina::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Cristina::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Cristina::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Cristina*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Cristina::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Cristina::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Cristina::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_834_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Cristina::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_834_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Cristina* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Cristina(*(TA2Cristina*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2Cristina));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Cristina G__TTA2Cristina;
static int G__UserDict_834_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Cristina*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Cristina*) (soff+(sizeof(TA2Cristina)*i)))->~G__TTA2Cristina();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Cristina*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Cristina*) (soff))->~G__TTA2Cristina();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2TAPS */
static int G__UserDict_835_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TAPS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2TAPS((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2TAPS((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS*) G__getstructoffset())->ReadDecoded();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2TAPS*) G__getstructoffset())->GetParticles((Int_t) G__int(libp->para[0]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2TAPS*) G__getstructoffset())->GetNparticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2TAPS*) G__getstructoffset())->GetNParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS*) G__getstructoffset())->SetParticleInfo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TAPS*) G__getstructoffset())->GetBaF2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2TAPS*) G__getstructoffset())->GetVetos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2TAPS*) G__getstructoffset())->GetClusterTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TA2TAPS*) G__getstructoffset())->GetVetoInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TA2TAPS*) G__getstructoffset())->GetTofInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2TAPS*) G__getstructoffset())->GetPsaInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TAPS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TAPS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TAPS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_835_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_835_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TAPS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TAPS(*(TA2TAPS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TAPS G__TTA2TAPS;
static int G__UserDict_835_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TAPS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TAPS*) (soff+(sizeof(TA2TAPS)*i)))->~G__TTA2TAPS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TAPS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TAPS*) (soff))->~G__TTA2TAPS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2UserControl */
static int G__UserDict_843_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2UserControl* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2UserControl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2UserControl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserControl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2UserControl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2UserControl::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2UserControl*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserControl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserControl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserControl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_843_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserControl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2UserControl G__TTA2UserControl;
static int G__UserDict_843_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2UserControl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2UserControl*) (soff+(sizeof(TA2UserControl)*i)))->~G__TTA2UserControl();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2UserControl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2UserControl*) (soff))->~G__TTA2UserControl();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2ParaPerpTest */
static int G__UserDict_844_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2ParaPerpTest* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2ParaPerpTest((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2ParaPerpTest((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2ParaPerpTest*) G__getstructoffset())->CreatChild((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ParaPerpTest*) G__getstructoffset())->ZeroAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ParaPerpTest*) G__getstructoffset())->WriteFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2ParaPerpTest::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ParaPerpTest::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2ParaPerpTest::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2ParaPerpTest::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ParaPerpTest*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ParaPerpTest::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2ParaPerpTest::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ParaPerpTest::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_844_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2ParaPerpTest::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_844_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2ParaPerpTest* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2ParaPerpTest(*(TA2ParaPerpTest*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2ParaPerpTest G__TTA2ParaPerpTest;
static int G__UserDict_844_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2ParaPerpTest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2ParaPerpTest*) (soff+(sizeof(TA2ParaPerpTest)*i)))->~G__TTA2ParaPerpTest();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2ParaPerpTest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2ParaPerpTest*) (soff))->~G__TTA2ParaPerpTest();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CosmicCal */
static int G__UserDict_845_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CosmicCal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CosmicCal((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2CosmicCal((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CosmicCal*) G__getstructoffset())->GetLScint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CosmicCal*) G__getstructoffset())->GetLTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2CosmicCal*) G__getstructoffset())->GetTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CosmicCal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CosmicCal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CosmicCal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CosmicCal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CosmicCal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CosmicCal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CosmicCal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CosmicCal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_845_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CosmicCal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_845_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CosmicCal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CosmicCal(*(TA2CosmicCal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CosmicCal G__TTA2CosmicCal;
static int G__UserDict_845_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CosmicCal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CosmicCal*) (soff+(sizeof(TA2CosmicCal)*i)))->~G__TTA2CosmicCal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CosmicCal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CosmicCal*) (soff))->~G__TTA2CosmicCal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TA2TrackLine */

/* TA2MwpcTrack */

/* TA2TAPS_BaF2 */

/* TA2PlasticPID */

/* TA2Calorimeter */

/* TA2Physics */

/* TA2TAPS2009 */

/* TA2UserAnalysis */

/* TA2WCLayerSven */

/* TA2CylStripSven */

/* TA2Taps2009LE */

/* TA2CylMWPC */

/* TA2CrystalBall */

/* TA2PhotoPhysics */

/* TA2ThreshPi0 */

/* TA2UserPhysics */

/* TA2CylMwpcStrip */

/* TA2CylMwpcWire */

/* TA2MwpcIntersection */

/* TA2CylMwpc */

/* TA2CalArray */

/* TA2CentralTrack */

/* TA2CentralApparatus */

/* TA2Event */

/* TA2Trigger */

/* TA2CylWireSven */

/* TA2TAPS_PbWO4 */

/* TA2TAPS2008 */

/* TA2Compton */

/* TA2FPMicro */

/* TA2GenericApp */

/* TA2Efficiency */

/* TA2Cristina */

/* TA2TAPS */

/* TA2UserControl */

/* TA2ParaPerpTest */

/* TA2CosmicCal */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncUserDict {
 public:
  G__Sizep2memfuncUserDict(): p(&G__Sizep2memfuncUserDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncUserDict::*p)();
};

size_t G__get_sizep2memfuncUserDict()
{
  G__Sizep2memfuncUserDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceUserDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine))) {
     TA2TrackLine *G__Lderived;
     G__Lderived=(TA2TrackLine*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack))) {
     TA2MwpcTrack *G__Lderived;
     G__Lderived=(TA2MwpcTrack*)0x1000;
     {
       TA2TrackLine *G__Lpbase=(TA2TrackLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack),G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2))) {
     TA2TAPS_BaF2 *G__Lderived;
     G__Lderived=(TA2TAPS_BaF2*)0x1000;
     {
       TA2ClusterDetector *G__Lpbase=(TA2ClusterDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID))) {
     TA2PlasticPID *G__Lderived;
     G__Lderived=(TA2PlasticPID*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter))) {
     TA2Calorimeter *G__Lderived;
     G__Lderived=(TA2Calorimeter*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2Physics))) {
     TA2Physics *G__Lderived;
     G__Lderived=(TA2Physics*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Physics),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Physics),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Physics),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Physics),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Physics),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Physics),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009))) {
     TA2TAPS2009 *G__Lderived;
     G__Lderived=(TA2TAPS2009*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis))) {
     TA2UserAnalysis *G__Lderived;
     G__Lderived=(TA2UserAnalysis*)0x1000;
     {
       TA2Analysis *G__Lpbase=(TA2Analysis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2Analysis),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven))) {
     TA2WCLayerSven *G__Lderived;
     G__Lderived=(TA2WCLayerSven*)0x1000;
     {
       TA2WCLayer *G__Lpbase=(TA2WCLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven))) {
     TA2CylStripSven *G__Lderived;
     G__Lderived=(TA2CylStripSven*)0x1000;
     {
       TA2WCLayerSven *G__Lpbase=(TA2WCLayerSven*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2WCLayer *G__Lpbase=(TA2WCLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE))) {
     TA2Taps2009LE *G__Lderived;
     G__Lderived=(TA2Taps2009LE*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC))) {
     TA2CylMWPC *G__Lderived;
     G__Lderived=(TA2CylMWPC*)0x1000;
     {
       TA2WireChamber *G__Lpbase=(TA2WireChamber*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC),G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall))) {
     TA2CrystalBall *G__Lderived;
     G__Lderived=(TA2CrystalBall*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics))) {
     TA2PhotoPhysics *G__Lderived;
     G__Lderived=(TA2PhotoPhysics*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0))) {
     TA2ThreshPi0 *G__Lderived;
     G__Lderived=(TA2ThreshPi0*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics))) {
     TA2UserPhysics *G__Lderived;
     G__Lderived=(TA2UserPhysics*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber))) {
     TA2WireChamber *G__Lderived;
     G__Lderived=(TA2WireChamber*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip))) {
     TA2CylMwpcStrip *G__Lderived;
     G__Lderived=(TA2CylMwpcStrip*)0x1000;
     {
       TA2WCLayerSven *G__Lpbase=(TA2WCLayerSven*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2WCLayer *G__Lpbase=(TA2WCLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire))) {
     TA2CylMwpcWire *G__Lderived;
     G__Lderived=(TA2CylMwpcWire*)0x1000;
     {
       TA2WCLayerSven *G__Lpbase=(TA2WCLayerSven*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2WCLayer *G__Lpbase=(TA2WCLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection))) {
     TA2MwpcIntersection *G__Lderived;
     G__Lderived=(TA2MwpcIntersection*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc))) {
     TA2CylMwpc *G__Lderived;
     G__Lderived=(TA2CylMwpc*)0x1000;
     {
       TA2WireChamber *G__Lpbase=(TA2WireChamber*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),G__get_linked_tagnum(&G__UserDictLN_TA2WireChamber),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray))) {
     TA2CalArray *G__Lderived;
     G__Lderived=(TA2CalArray*)0x1000;
     {
       TA2ClusterDetector *G__Lpbase=(TA2ClusterDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack))) {
     TA2CentralTrack *G__Lderived;
     G__Lderived=(TA2CentralTrack*)0x1000;
     {
       TA2TrackLine *G__Lpbase=(TA2TrackLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack),G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus))) {
     TA2CentralApparatus *G__Lderived;
     G__Lderived=(TA2CentralApparatus*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2Event))) {
     TA2Event *G__Lderived;
     G__Lderived=(TA2Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Event),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger))) {
     TA2Trigger *G__Lderived;
     G__Lderived=(TA2Trigger*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven))) {
     TA2CylWireSven *G__Lderived;
     G__Lderived=(TA2CylWireSven*)0x1000;
     {
       TA2WCLayerSven *G__Lpbase=(TA2WCLayerSven*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2WCLayer *G__Lpbase=(TA2WCLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven),G__get_linked_tagnum(&G__UserDictLN_TA2WCLayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4))) {
     TA2TAPS_PbWO4 *G__Lderived;
     G__Lderived=(TA2TAPS_PbWO4*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008))) {
     TA2TAPS2008 *G__Lderived;
     G__Lderived=(TA2TAPS2008*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2Compton))) {
     TA2Compton *G__Lderived;
     G__Lderived=(TA2Compton*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro))) {
     TA2FPMicro *G__Lderived;
     G__Lderived=(TA2FPMicro*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp))) {
     TA2GenericApp *G__Lderived;
     G__Lderived=(TA2GenericApp*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency))) {
     TA2Efficiency *G__Lderived;
     G__Lderived=(TA2Efficiency*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina))) {
     TA2Cristina *G__Lderived;
     G__Lderived=(TA2Cristina*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS))) {
     TA2TAPS *G__Lderived;
     G__Lderived=(TA2TAPS*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl))) {
     TA2UserControl *G__Lderived;
     G__Lderived=(TA2UserControl*)0x1000;
     {
       TA2Control *G__Lpbase=(TA2Control*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TA2Control),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TRint *G__Lpbase=(TRint*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TRint),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest))) {
     TA2ParaPerpTest *G__Lderived;
     G__Lderived=(TA2ParaPerpTest*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal))) {
     TA2CosmicCal *G__Lderived;
     G__Lderived=(TA2CosmicCal*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableUserDict() {

   /* Setting up typedef entry */
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__UserDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,Int_t>",117,G__get_linked_tagnum(&G__UserDictLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Double_t,pair<Int_t,Int_t> >",117,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,pair<int,int> >",117,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,pair<int,int>,less<double> >",117,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Double_t,Int_t>",117,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGraph2D*>",117,G__get_linked_tagnum(&G__UserDictLN_maplEintcOTGraph2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGraph2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGraph2D*>",117,G__get_linked_tagnum(&G__UserDictLN_maplEintcOTGraph2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGraph2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGraph2D*,less<int> >",117,G__get_linked_tagnum(&G__UserDictLN_maplEintcOTGraph2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGraph2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TA2TrackLine */
static void G__setup_memvarTA2TrackLine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine));
   { TA2TrackLine *p; p=(TA2TrackLine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"Track type");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fOrigin=",0,"Track origin");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fDirCos=",0,"Direction cosines (NOT unit vector)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fPsVertex=",0,"Pseudo vertex (closest point to the Z axis)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MwpcTrack */
static void G__setup_memvarTA2MwpcTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack));
   { TA2MwpcTrack *p; p=(TA2MwpcTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"kNullHit=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIinters[2]=",0,"Indexes of intersections in the internal (0) and external (1) MWPC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2TAPS_BaF2 */
static void G__setup_memvarTA2TAPS_BaF2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2));
   { TA2TAPS_BaF2 *p; p=(TA2TAPS_BaF2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitD2A_t),-1,-1,4,"fSGEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitD2A_t),-1,-1,4,"fLGEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSGEnergyValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxSGElements=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNSG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TRandom3),-1,-1,4,"pRandoms=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"bSimul=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"EnergyAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"theta_c=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phi_c=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"x_c=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"y_c=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"z_c=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Z_c=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fUseEnergyResolution=",0,"Use energy resoution smearing for MC?");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fUseTimeResolution=",0,"Use time resolution smearing in MC?");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fUseVetoEfficiency=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergyResolutionFactor=",0,"Factor in Energy Resolution Equation");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergyResolutionConst=",0,"Power in energy Resolution Equation");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeResolution=",0,"Sigma for time resolution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fThetaResolution=",0,"Theta resolution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhiResolution=",0,"Phi Resolution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVetoThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVetoEfficiency[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVetoEnergy[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2PlasticPID */
static void G__setup_memvarTA2PlasticPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID));
   { TA2PlasticPID *p; p=(TA2PlasticPID*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Calorimeter */
static void G__setup_memvarTA2Calorimeter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter));
   { TA2Calorimeter *p; p=(TA2Calorimeter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector),-1,-1,2,"fCal=",0,"calorimeter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fPID=",0,"charged-particle ID");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fPTracker=",0,"charged-particle tracker");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4_Nphoton=",0,"Total invariant mass N photons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM_Nphoton=",0,"Inv mass for N cluster totals");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Physics */
static void G__setup_memvarTA2Physics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Physics));
   { TA2Physics *p; p=(TA2Physics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4miss=",0,"missing momenta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4target=",0,"target 4 vector (at rest)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fTargetPos=",0,"target position");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMmiss=",0,"missing mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmiss=",0,"missing momentum magnitude");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPtheta=",0,"missing momentum theta");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPphi=",0,"missing momentum phi");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtarget=",0,"# target nuclei");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperm=",0,"# general purpose");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpermutation=",0,"wild card stuff");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2TAPS2009 */
static void G__setup_memvarTA2TAPS2009(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009));
   { TA2TAPS2009 *p; p=(TA2TAPS2009*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTapsRunStep=",0,"step of running");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCalibVetoStep=",0,"step of Veto  calibration");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCalibBaF2Step=",0,"step of BaF2 of calibration");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),-1,-1,2,"fBaF2=",0,"BaF2-calorimeeter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fVeto=",0,"Veto-Detectors");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2_Ncluster=",0,"Nr of BaF2 clusters in event");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"id_clBaF2=",0,"indices of hit clusters");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"clBaF2=",0,"-> cluster structs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"cl=",0,"cluster struct");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"clBaF2_Nhits=",0,"crystal-hits inside a cluster");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"clBaF2_elements=",0,"crystal-elements inside a cluster");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsVCharged=",0,"to save if hit is charged or not");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fVeto_NHits=",0,"# veto-hits in this event");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVeto_Hits=",0,"all veto-elements that fired");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVeto_index=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVeto_dE=",0,"to save Veto-dE");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVeto_T=",0,"to save Veto-Time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergy_Index=",0,"to save E of BaF2-ClusterIndexCrystal");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergy_BaF2=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMultipleVetoHit=",0,"will be used in v1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4_Nphoton=",0,"Total invariant mass N photons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM_Nphoton=",0,"Inv mass for N cluster totals");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fp3=",0,"used to make p4");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsProton=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsChPion=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsElectron=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEcharged=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEchargedcl=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEchargedIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"particles=",0,"use this to store particle-information");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPDG_ID_sec=",0,"to store particles second (maybe) id");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPDG_ID_unclear=",0,"if fPDG_ID_sec is set then this should be true");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSimpleReconstruct=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTapsFudge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fTAPS_dEvE_CutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTAPS_dEvE_Cuts[250]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_Proton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ProtonCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTAPS_dEvE_Proton_CutName[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_ChPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ChPionCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTAPS_dEvE_ChPion_CutName[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_Electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ElectronCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTAPS_dEvE_Electron_CutName[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,2,"calibTAPS_m1g_Single=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,2,"calibTAPS_m1g_AllCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,2,"calibTAPS_VetoCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TNtuple),-1,-1,2,"VetoData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,2,"calib_TAPSdEvEcl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,2,"calib_TAPSdEvE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2UserAnalysis */
static void G__setup_memvarTA2UserAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis));
   { TA2UserAnalysis *p; p=(TA2UserAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2WCLayerSven */
static void G__setup_memvarTA2WCLayerSven(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven));
   { TA2WCLayerSven *p; p=(TA2WCLayerSven*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CylStripSven */
static void G__setup_memvarTA2CylStripSven(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven));
   { TA2CylStripSven *p; p=(TA2CylStripSven*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRadius=",0,"radius mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTgWC=",0,"tan helix angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ0=",0,"along beam axis");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPitch=",0,"strip pitch mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"length mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEffLength=",0,"effective 1/2 length mm");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClustEn=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZCor[3]=",0,"z correction coeffs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCor[3]=",0,"phi correction coeffs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Taps2009LE */
static void G__setup_memvarTA2Taps2009LE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE));
   { TA2Taps2009LE *p; p=(TA2Taps2009LE*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTapsRunStep=",0,"step of running");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCalibVetoStep=",0,"step of Veto  calibration");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCalibBaF2Step=",0,"step of BaF2 of calibration");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),-1,-1,2,"fBaF2=",0,"BaF2-calorimeeter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fVeto=",0,"Veto-Detectors");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2_Ncluster=",0,"Nr of BaF2 clusters in event");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"id_clBaF2=",0,"indices of hit clusters");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"clBaF2=",0,"-> cluster structs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"cl=",0,"cluster struct");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"clBaF2_Nhits=",0,"crystal-hits inside a cluster");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"clBaF2_elements=",0,"crystal-elements inside a cluster");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsVCharged=",0,"to save if hit is charged or not");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fVeto_NHits=",0,"# veto-hits in this event");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVeto_Hits=",0,"all veto-elements that fired");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fThisVetoFired=",0,"element-nr of veto that fired");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVeto_dE=",0,"to save Veto-dE");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMultipleVetoHit=",0,"will be used in v1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4_Nphoton=",0,"Total invariant mass N photons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM_Nphoton=",0,"Inv mass for N cluster totals");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fp3=",0,"used to make p4");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsProton=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsChPion=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsElectron=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSimpleReconstruct=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTapsFudge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEcharged=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fTAPS_dEvE_CutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTAPS_dEvE_Cuts[250]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_Proton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ProtonCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTAPS_dEvE_Proton_CutName[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_ChPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ChPionCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTAPS_dEvE_ChPion_CutName[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_Electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ElectronCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTAPS_dEvE_Electron_CutName[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,2,"calibTAPS_m1g_Single=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,2,"calibTAPS_m1g_AllCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,2,"calibTAPS_VetoCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TNtuple),-1,-1,2,"VetoData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,2,"calib_TAPSdEvEcl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,2,"calib_TAPSdEvE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CylMWPC */
static void G__setup_memvarTA2CylMWPC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC));
   { TA2CylMWPC *p; p=(TA2CylMWPC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR=",0,"chamber wire radii");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRtE=",0,"chamber external strip radii");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRtI=",0,"chamber inner strip radii");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC1=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC2=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fD1=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fD2=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNextPhiInt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPhiMax=",0,"max difference in wire-strip phi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPhi12Max=",0,"max difference in phi chambers 1,2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxVertRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxVertZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinVertZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fZIntersect=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiSWDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiWire=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNIntersect=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVertX=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVertY=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVertZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVertR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fPseudoVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPseudoVertX=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPseudoVertY=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPseudoVertZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPseudoVertR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPhi12=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSTesting=",0,"Spare single-hit spectrum for testing purposes");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClustEnI[2][256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClustEnE[2][256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"DeadStrPatt[4][128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TargZShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"Simulate=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"FileSigmaTheta[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"FileSigmaPhi[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"FileEfficiency[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"SigmaTheta[36]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"SigmaPhi[36]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Efficiency[36]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TRandom3),-1,-1,2,"pRandoms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),-1,-1,2,"fCB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiPlastic[24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CrystalBall */
static void G__setup_memvarTA2CrystalBall(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall));
   { TA2CrystalBall *p; p=(TA2CrystalBall*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector),-1,-1,2,"fNaI=",0,"Pointer to NaI array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fParticle=",0,"Pointer to TA2Particle array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fPID=",0,"Pointer to PID");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC),-1,-1,2,"fMWPC=",0,"Pointer to MWPC");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPIDdPhi=",0,"PID-CB Phi differences");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPIDdPhi=",0,"Max PID-CB Phi difference");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMWPCdTheta=",0,"PID-CB Phi differences");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMWPCdTheta=",0,"Max MWPC-CB angle difference");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAngDiffI=",0,"for general sorting of angle differences");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDij=",0,"back reference PID j, to CB i");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDindex=",0,"Delta-E index associated with cluster");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDdouble=",0,"Delta-E 2nd index associated with cluster");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMWPCij=",0,"back reference MWPC track j, to CB i");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMWPCindex=",0,"MWPC track index associated with cluster");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaE=",0,"Cluster correlated PID energy deposit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaEdouble=",0,"Cluster correlated PID energy deposit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fECentral=",0,"Fraction total energy in central clust elem.");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEch=",0,"PID correlated Cluster energy deposit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaPhi=",0,"Difference in PiD and cluster phi");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaTheta=",0,"Difference in PiD and cluster phi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaEOR=",0,"OR of Delta-E (for common dE-E cuts)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEchOR=",0,"OR correlated cluster-E (common dE-E cuts)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCharged=",0,"Number of CB clusters identified as charged");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPIDSigmaTime=",0,"PID Time resolution;");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNaISigmaTime=",0,"CB Time Resolution;");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTrigSectFired=",0,"no of reconstructed trigger sections fired");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrigThresh=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fETrigSect=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fETrigCBA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fETrigCBB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fETrigCBC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fETrigCBD=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSimple=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseSingleThresh=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseTrigHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTrigFileName[255]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fTrigFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTrigHistName[255]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1D),-1,-1,2,"fCBThresholds=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2PhotoPhysics */
static void G__setup_memvarTA2PhotoPhysics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics));
   { TA2PhotoPhysics *p; p=(TA2PhotoPhysics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Tagger),-1,-1,2,"fTAGG=",0,"Glasgow photon tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),-1,-1,2,"fCB=",0,"Crystal Ball");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),-1,-1,2,"fTAPS=",0,"TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Ladder),-1,-1,2,"fLADD=",0,"Ladder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fTAGGp4=",0,"Tagger 4-mom store");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fCBp4=",0,"CB 4-mom store");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fTAPSp4=",0,"TAPS 4-mom store");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTAGGpdg=",0,"PDG indices of tagger hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCBpdg=",0,"PDG indices of CB hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTAPSpdg=",0,"PDG indices of TAPS hits");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4photon=",0,"sorted list of gamma 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4proton=",0,"sorted list of proton 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4piplus=",0,"sorted list of pi+ 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4neutron=",0,"sorted list of neutron 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4pi0=",0,"sorted list of pi0 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4gprime=",0,"sorted list of gamma' 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4eta=",0,"sorted list of eta 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4rootino=",0,"sorted list of unknown 4 momenta");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4photonTot=",0,"total 4-momentum of gammas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNphoton=",0,"# photon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNproton=",0,"# proton");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpiplus=",0,"# pi+");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNneutron=",0,"# neutron");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpi0=",0,"# pi0");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNgprime=",0,"# gamma'");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNeta=",0,"# eta");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrootino=",0,"# unknowns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNprompt=",0,"tagger prompts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrandom=",0,"tagger randoms");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaP=",0,"prompts lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaR=",0,"randoms lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpP=",0,"prompts lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpR=",0,"randoms lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxTagg=",0,"max # tagger hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMax2gPerm=",0,"max # 2-gamma permutations");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassDpi0=",0,"for meson ID by inv. mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassDeta=",0,"for meson ID by inv. mass");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIJ=",0,"combinatorial indices");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIpi0=",0,"ditto");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIeta=",0,"ditto");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsMesonIndex=",0,"is a photon derived from a meson");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMDpi0=",0,"mass-diff limit pi0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMDeta=",0,"mass-diff limit eta");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM2g=",0,"2-photon invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM6g=",0,"2-photon invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM2gCBTAPS=",0,"1-photon CB and 1-photon TAPS invariant mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEm=",0,"overall missing mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0=",0,"missing mass single pi0 final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0p=",0,"missing energy pi0-p final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0pP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0pR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmPi0p=",0,"cm mometum pi0-p final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmPi0pP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmPi0pR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmPi0p=",0,"cm mometum pi0-p final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmPi0pP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmPi0pR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0g=",0,"missing mass pi0-g' final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0gP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0gR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0gp=",0,"missing energy pi0-g'-p final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0gpP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPi0gpR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmPi0gp=",0,"Pmiss pi0-g'-p");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmPi0gpP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmPi0gpR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmPi0gp=",0,"cm momentum pi0-g'-p final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmPi0gpP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmPi0gpR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEgPi0gp=",0,"g' energy pi0-g'-p final state");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWEgPi0gp=",0,"weight factor for g' energy spectrum");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEgPi0gpP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEgPi0gpR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmEta=",0,"missing mass single eta final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmEtaP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmEtaR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmEtap=",0,"missing energy eta-p final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmEtapP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmEtapR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmEtap=",0,"cm momentum eta-p final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmEtapP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcmEtapR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPiplus=",0,"missing mass single pi+ final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPiplusP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmPiplusR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmProton=",0,"missing mass single pi+ final state");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmProtonP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmProtonR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAopen=",0,"final-state Pi-N opening angle");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAopenP=",0,"prompt");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAopenR=",0,"random");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"polar angles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaP=",0,"polar prompt");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaR=",0,"polar random");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"asimuthal angles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiParaP=",0,"asimuth prompt parallel pol");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiParaR=",0,"asimuth random parallel pol");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiPerpP=",0,"asimuth prompt perpendicular pol");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiPerpR=",0,"asimuth random perpendicular pol");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmLow=",0,"missing energy cut low threshold");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmHigh=",0,"missing energy cut high threshold");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEgLow=",0,"photon energy cut low threshold");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEgHigh=",0,"photon energy cut high threshold");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fALow=",0,"angle cut low threshold");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAHigh=",0,"angle cut high threshold");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAngle1=",0,"wild-card angles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAngle1P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAngle1R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAngle2=",0,"wild-card angles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAngle2P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAngle2R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggerTime=",0,"tagger time");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0TaggTime=",0,"pi0 tagger time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRl1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRl2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRh1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRh2=",0,"Prompt-Random windows");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2ThreshPi0 */
static void G__setup_memvarTA2ThreshPi0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0));
   { TA2ThreshPi0 *p; p=(TA2ThreshPi0*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Tagger),-1,-1,2,"fTAGG=",0,"Glasgow photon tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),-1,-1,2,"fCB=",0,"Crystal Ball");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),-1,-1,2,"fTAPS=",0,"TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Ladder),-1,-1,2,"fLADD=",0,"Ladder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAGGpart=",0,"TA2Particles from Tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fCBpart=",0,"TA2Particles from CB");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAPSpart=",0,"TA2Particles from TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fTAGGp4=",0,"Tagger 4-mom store");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTtaggphot=",0,"TA2Particle tagger photon");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTphoton=",0,"TA2Particle photon");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTproton=",0,"TA2Particle proton");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTpiplus=",0,"TA2Particle piplus");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTneutron=",0,"TA2Particle neutron");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTrootino=",0,"TA2Particle rootino");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTpi0=",0,"TA2Particle pi0");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTeta=",0,"TA2Particle eta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTgprime=",0,"TA2Particle gprime");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4photonTot=",0,"total 4-momentum of gammas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNphoton=",0,"# photon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNproton=",0,"# proton");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpiplus=",0,"# pi+");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNneutron=",0,"# neutron");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrootino=",0,"# unknowns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNgprime=",0,"# unknowns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNprompt=",0,"tagger prompts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrandom=",0,"tagger randoms");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaP=",0,"prompts lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaR=",0,"randoms lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpP=",0,"prompts lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpR=",0,"randoms lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxTagg=",0,"max # tagger hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpi0=",0,"# pi0");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNeta=",0,"# eta");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpi0phot=",0,"# photon");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassDpi0=",0,"for meson ID by inv. mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassDeta=",0,"for meson ID by inv. mass");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIJ=",0,"combinatorial indices");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIpi0=",0,"ditto");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIeta=",0,"ditto");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMax2gPerm=",0,"max # 2-gamma permutations");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsMesonIndex=",0,"photon derived from a meson?");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMDpi0=",0,"mass-diff limit pi0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMDeta=",0,"mass-diff limit eta");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRl1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRl2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRh1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRh2=",0,"Prompt-Random windows");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassCorr=",0,"pi0 invmass correction");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMWlo[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMWhi[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TggCutOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM2g=",0,"2-photon invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM6g=",0,"6-photon invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeDiff=",0,"time difference between photons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime1=",0,"time of photon1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime2=",0,"time of photon2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0TGG=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabKE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0CMKE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0CMTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0CMPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggerTime=",0,"tagger time");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0TaggTime=",0,"pi0 tagger time");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanHit=",0,"channel hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChan=",0,"tagger channel");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanP=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMiss=",0,"missing mass of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMissP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMissR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTGG=",0,"TGG");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTGGP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTGGR=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanM2g=",0,"tagger channel");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanM2gP=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanM2gR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM2gTagg=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM2gTaggP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM2gTaggR=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPi0Phot=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPi0PhotP=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPi0PhotR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKELab=",0,"KE lab of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKELabP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKELabR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaLab=",0,"theta lab of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaLabP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaLabR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiLab=",0,"phi Lab of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiLabP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiLabR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECM=",0,"KE CM of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCM=",0,"theta CM of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCM=",0,"phi CM of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanCut1=",0,"tagger channel");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanCut1P=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanCut1R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECMCut1=",0,"KE CM of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECMCut1P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECMCut1R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCMCut1=",0,"theta CM of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCMCut1P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCMCut1R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMissCut1=",0,"missing mass of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMissCut1P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMissCut1R=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanCut2=",0,"tagger channel");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanCut2P=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanCut2R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECMCut2=",0,"KE CM of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECMCut2P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKECMCut2R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCMCut2=",0,"theta CM of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCMCut2P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCMCut2R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCMCut2=",0,"phi CM of the pion");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCMCut2P=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCMCut2R=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP4MissLabTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP4MissLabThetaP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP4MissLabThetaR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCutAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCutAngleP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCutAngleR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabThetaProt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabThetaProtP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabThetaProtR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtLabTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtLabThetaP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtLabThetaR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabThetaProtCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabThetaProtCutP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0LabThetaProtCutR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtLabThetaCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtLabThetaCutP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtLabThetaCutR=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fLADDmh=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLADDnhm=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanHitM=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggerTimeM=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0TaggTimeM=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNTaggPhot=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggPhotHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggPhotEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggPhotTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fTaggPhotP4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2UserPhysics */
static void G__setup_memvarTA2UserPhysics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics));
   { TA2UserPhysics *p; p=(TA2UserPhysics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),-1,-1,2,"fTAGG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),-1,-1,2,"fCB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),-1,-1,2,"fTAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4beam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4input=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDpnAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDpnAngleCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaP=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaN=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaPCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaNCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaDiffCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDpnMinv=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDpnMmiss=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCBTAPS2PhotonMinv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CylMwpcStrip */
static void G__setup_memvarTA2CylMwpcStrip(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip));
   { TA2CylMwpcStrip *p; p=(TA2CylMwpcStrip*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRadius=",0,"radius mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTgWC=",0,"tan helix angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPitch=",0,"strip pitch mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"length mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEffLength=",0,"effective 1/2 length mm");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClustEn=",0,"Summed amplitude of strips contributing to a cluster");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStripcLcLEHelicity),-1,-2,1,G__FastAllocString(2048).Format("kPlus=%lldLL",(long long)TA2CylMwpcStrip::kPlus).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStripcLcLEHelicity),-1,-2,1,G__FastAllocString(2048).Format("kMinus=%lldLL",(long long)TA2CylMwpcStrip::kMinus).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CylMwpcWire */
static void G__setup_memvarTA2CylMwpcWire(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire));
   { TA2CylMwpcWire *p; p=(TA2CylMwpcWire*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRadius=",0,"radius mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"length mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiSpace=",0,"phi spacing of wires");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MwpcIntersection */
static void G__setup_memvarTA2MwpcIntersection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection));
   { TA2MwpcIntersection *p; p=(TA2MwpcIntersection*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-2,1,G__FastAllocString(2048).Format("k0=%lldLL",(long long)TA2MwpcIntersection::k0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-2,1,G__FastAllocString(2048).Format("kI=%lldLL",(long long)TA2MwpcIntersection::kI).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-2,1,G__FastAllocString(2048).Format("kW=%lldLL",(long long)TA2MwpcIntersection::kW).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-2,1,G__FastAllocString(2048).Format("kWI=%lldLL",(long long)TA2MwpcIntersection::kWI).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-2,1,G__FastAllocString(2048).Format("kE=%lldLL",(long long)TA2MwpcIntersection::kE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-2,1,G__FastAllocString(2048).Format("kEI=%lldLL",(long long)TA2MwpcIntersection::kEI).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-2,1,G__FastAllocString(2048).Format("kEW=%lldLL",(long long)TA2MwpcIntersection::kEW).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-2,1,G__FastAllocString(2048).Format("kEWI=%lldLL",(long long)TA2MwpcIntersection::kEWI).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fPosition=",0,"Position of the intersection in 3D space");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIclI=",0,"Cluster index of internal strip layer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIclW=",0,"Cluster index of wire layer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIclE=",0,"Cluster index of external strip layer");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType),-1,-1,2,"fType=",0,"Type of intersection");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDphiWIE=",0,"dPhi between wire and internal-external strip clusters intersection");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAclIE=",0,"Average strip cluster pulse amplitudes associated with the intersection");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CylMwpc */
static void G__setup_memvarTA2CylMwpc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc));
   { TA2CylMwpc *p; p=(TA2CylMwpc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fWait)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fWait=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR=",0,"chamber wire radii");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRtI=",0,"chamber inner strip radii");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRtE=",0,"chamber external strip radii");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC1=",0,"some const");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC2=",0,"some const");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"kNullHit=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,2,"kNullFloat=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,2,"kMaxNsolIE=3ULL",0,"Max number of the strip-strip solutions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxDphiWIE=",0,"max w-ie intersections dPhi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxDr=",0,"max distance between 2 intersections forming a track");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip),-1,-1,2,"fI=",0,"ptr to an internal strips layer");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip),-1,-1,2,"fE=",0,"ptr to an external strips layer");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire),-1,-1,2,"fW=",0,"ptr to a wires layer");
   G__memvar_setup((void*)0,71,2,0,-1,G__defined_typename("Bool_t"),-1,2,"fUsedClW=",0,"a used/unused wires clusters puttern");
   G__memvar_setup((void*)0,71,2,0,-1,G__defined_typename("Bool_t"),-1,2,"fUsedClI=",0,"a used/unused internal strips clusters puttern");
   G__memvar_setup((void*)0,71,2,0,-1,G__defined_typename("Bool_t"),-1,2,"fUsedClE=",0,"a used/unused external strips clusters puttern");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNinters=",0,"# of all intersections + # of all intersection candidates");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection),-1,-1,2,"fInters=",0,"intersections + intersection candidates");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNintersTrue=",0,"# of strip-strip-wire intersections");
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fIintersTrue=",0,"strip-strip-wire intersections indexes");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNintersCandidate=",0,"# of intersection candidates (strip-wire or strip-strip intersections)");
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fIintersCandidate=",0,"intersection candidates (strip-wire or strip-strip intersections) indexes");
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fIclI=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fIclE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fZie=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiIE=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNie=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),G__defined_typename("map<Double_t,pair<Int_t,Int_t> >"),-1,2,"fDphiWIE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCorrEI[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXcorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYcorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZcorr[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fTypeInter=",0,"intersection type");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fZInter=",0,"Z for a given intersection");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiInter=",0,"Phi for a given intersection");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fDphiWS=",0,"w-ss intersections dPhi");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fCGclI=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fCGclW=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fCGclE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fAclIE=",0,"Sum of the strip signals amplitudes corresponding to the intersection");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack),-1,-1,2,"fTracks=",0,"all possible tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracksTrue=",0,"# of possible true tracks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksTrue=",0,"sorted array of the possible true tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracksTrueCandidate=",0,"# of possible true candidate tracks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksTrueCandidate=",0,"sorted array of the possible true candidates tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracksCandidate=",0,"# of possible candidate tracks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksCandidate=",0,"sorted array of the possible candidates tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracksTrueBest=",0,"# of the best true tracks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksTrueBest=",0,"sorted array of the best true tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracksTrueCandidateBest=",0,"# of the best true candidate tracks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksTrueCandidateBest=",0,"sorted array of the best true candidates tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracksCandidateBest=",0,"# of best candidate tracks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksCandidateBest=",0,"sorted array of the best candidates tracks");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTypeTrack=",0,"a track type");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMagTrack=",0,"a track lenght");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaTrack=",0,"a track theta angle");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiTrack=",0,"a track phi angle");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPhiInters=",0,"dPhi of the intersections forming a given track");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDZInters=",0,"dZ of the intersections forming a given track");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPsVertex[3]=",0,"a pseudo vertex {x,y,z} for a given track");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPsVertexR=",0,"a pseudo vertex R for a given track");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEtrack=",0,"Sum of the strip signals amplitudes corresponding to the track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fVertexes=",0,"Vertexes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_pairlEintcOintgR),G__defined_typename("pair<Int_t,Int_t>"),-1,2,"fItracks=",0,"vertex-tracks cross indexes");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVert[3]=",0,"a vertex {x,y,z}");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVertR=",0,"a vertex R");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackDist=",0,"distance between 2 tracks forming a given vertex");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fReadGeneratedKinematics=",0,"when \"true\" run ReadGeneratedKinematics() instead of ReadMC()");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TGraph2D),-1,-1,2,"fSigmaZ=",0,"sigmaZ(phi,z)");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TGraph2D),-1,-1,2,"fSigmaPhi=",0,"sigmaPhi(phi,z)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEintcOTGraph2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGraph2DmUgRsPgRsPgR),G__defined_typename("map<Int_t,TGraph2D*>"),-1,2,"fDetEff=",0,"Detection efficiency");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVertSim[3]=",0,"simulated vertex {x,y,z}");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDrHitsSim=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CalArray */
static void G__setup_memvarTA2CalArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray));
   { TA2CalArray *p; p=(TA2CalArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitClusterUCLA_t),-1,-1,2,"fClusterUCLA=",0,"FCluster pointer for UCLA Clustering");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergyAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fUseSigmaEnergy=",0,"Use energy resoution smearing for MC?");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fUseSigmaTime=",0,"Use time resolution smearing in MC?");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fUseClusterDecodeUCLA=",0,"Use Cluster Decode by S. Prakhov - Not fully tested!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaEnergyFactor=",0,"Factor in Energy Resolution Equation");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaEnergyPower=",0,"Power in energy Resolution Equation");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaTime=",0,"Sigma for time resolution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaTheta=",0,"Theta resolution for CB");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaPhi=",0,"Phi Resolution for CB");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTryHits=",0,"Element-Hit store - Sergey");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTempHits2=",0,"Element-Hit store - Sergey");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CentralTrack */
static void G__setup_memvarTA2CentralTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack));
   { TA2CentralTrack *p; p=(TA2CentralTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"kNullHit=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,2,"kNullFloat=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIhitPid=",0,"Index of a hit in the PID");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEhitPid=",0,"Pulse amplitude of the Pid hit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThitPid=",0,"Time of the Pid hit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIintersMwpc[2]=",0,"Indexes of intersections in the internal (0) and external (1) MWPC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEtrackMwpc=",0,"Sum of MWPCs intersections pulse amplitudes");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTtrackMwpc=",0,"TODO");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIclNaI=",0,"Index of a cluster in the NaI");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEclNaI=",0,"Sum of crystals pulse amplitudes");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTclNaI=",0,"NaI cluster time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMclNaI=",0,"Size of the NaI cluster");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCentralIndexNaI=",0,"Index of the central crystal in the cluster");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaTimeNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaEnergyNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaPhiNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaThetaNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CentralApparatus */
static void G__setup_memvarTA2CentralApparatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus));
   { TA2CentralApparatus *p; p=(TA2CentralApparatus*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fWait)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fWait=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"kNullHit=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,2,"kNullFloat=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseTracksBestMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxTrack=",0,"Max tracks number");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFactorTrackLengthNaI=",0,"TEST option under test");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPhiMwpcNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPhiTrackPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPhiPidNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPhiMwpcInterNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPhiMwpcInterPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLimitsPsVertex[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLengthPid=",0,"TODO Must be moved into TA2PlasticPID");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpointsDroopPid=",0,"TODO Must be moved into TA2PlasticPID");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLostCorrPosPid=",0,"TODO Must be moved into TA2PlasticPID");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLostCorrFacPid=",0,"TODO Must be moved into TA2PlasticPID");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fParticleInfo=",0,"Used to store particle information //***");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fPid=",0,"Pointer to PID");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhitsPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHitsPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector2),-1,-1,2,"fPositionsPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIhitsPidUsed=",0,(char*)NULL);
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIhitsPidNotUsed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhitsPidNotUsed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),-1,-1,2,"fMwpc=",0,"Pointer to MWPC");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNchambers=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fRmwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack),-1,-1,2,"fTracksMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksTrueMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksTrueCandidateMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fTracksCandidateMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,1,-1,G__defined_typename("Int_t"),-1,2,"fNintersTrueMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,1,-1,G__defined_typename("Int_t"),-1,2,"fIintersTrueMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,1,-1,G__defined_typename("Int_t"),-1,2,"fNintersCandidateMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,1,-1,G__defined_typename("Int_t"),-1,2,"fIintersCandidateMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),-1,-1,2,"fNaI=",0,"Pointer to NaI");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNclNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"fClNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fIdClNaI=",0,"Indices of hit clusters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fPositionsNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUsedClNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPIDProton=",0,"***");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPIDPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPIDRootino=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack),-1,-1,2,"fTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNchTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIchTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNneTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIneTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),G__defined_typename("map<Double_t,pair<Int_t,Int_t> >"),-1,2,"fMapMwpcTrueTrackNaI=",0,"sorted array of all possible Mwpc true track & NaI cluster combinations");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),G__defined_typename("map<Double_t,pair<Int_t,Int_t> >"),-1,2,"fMapMwpcTrueCandidateTrackNaI=",0,"sorted array of all possible Mwpc true-candidate track & NaI cluster combinations");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),G__defined_typename("map<Double_t,pair<Int_t,Int_t> >"),-1,2,"fMapMwpcCandidateTrackNaI=",0,"sorted array of all possible Mwpc candidate track & NaI cluster combinations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracksSingleMwpc=",0,"# of possible tracks with a single MWPC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack),-1,-1,2,"fTracksSingleMwpc=",0,"array of all possible tracks with NaI claster & MWPC intersection & (Pid)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fMapMwpcTrueInterNaI=",0,"sorted array of all possible MWPC true intersection & NaI cluster combinations");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("map<Double_t,Int_t>"),-1,2,"fMapMwpcCandidateInterNaI=",0,"sorted array of all possible MWPC candidate intersection & NaI cluster combinations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracksSingleMwpcBest=",0,"# of the best tracks with a single MWPC which added to the fTracks");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNintersTrueMwpcNotUsed=",0,"not used true MWPC intersections");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNintersCandidateMwpcNotUsed=",0,"not used candidate MWPC intersections");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiMwpcTrackNaI=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiTrackPid=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiMwpcTrackPid=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiInterSingleMwpcNaI=",0,"[fNtracksSingleMwpc]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiTrackSingleMwpcPid=",0,"[fNtracksSingleMwpc]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiMwpcInterNaI=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiMwpcInterPid=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiPidNaI=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackType=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackTheta=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackPhi=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPsVertex[3]=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPsVertexR=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEclNaI=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEhitPid=",0,"[fNtracks]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEtrackMwpc=",0,"[fNtracks]");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAnalyseNaI=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAnalysePid=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAnalyseMwpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNvertexes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fVertexes=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fIvertexes=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVert[3]=",0,"vertex {x,y,z}");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVertR=",0,"vertex R");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackDist=",0,"distance between 2 tracks forming a given vertex");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCentral=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDHitsProton=",0,"PID elements if Type = 2212 //***");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDHitsPion=",0,"PID elements if Type = 211  //***");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDHitsRootino=",0,"PID elements if Type = 0    //***");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Event */
static void G__setup_memvarTA2Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Event));
   { TA2Event *p; p=(TA2Event*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"Beam[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"Particle[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nParticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"PatternL1=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"PatternL2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Trigger */
static void G__setup_memvarTA2Trigger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger));
   { TA2Trigger *p; p=(TA2Trigger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Tagger),-1,-1,2,"fTAGG=",0,"Glasgow photon tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Ladder),-1,-1,2,"fLADD=",0,"Ladder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),-1,-1,2,"fCAPP=",0,"CB  ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),-1,-1,2,"fTAPS=",0,"TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),-1,-1,2,"fNaI=",0,"NaI ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc),-1,-1,2,"fMWPC=",0,"Mwpc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),-1,-1,2,"fPID=",0,"Pid");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),-1,-1,2,"fBaF2=",0,"BaF2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),-1,-1,2,"fVeto=",0,"TAPS Vetos");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fTriggerFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TTree),-1,-1,2,"fTriggerTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"h=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"i=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"j=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"k=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"c1=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCAPPMaxNParticle=",0,"Max# Particle from CentApp");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTAPSMaxNParticle=",0,"Max# Particle from TAPS ");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxNParticle=",0,"Max # Particle (CB + TAPS)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fCAPPParticles=",0,"Particles from CB system");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAPSParticles=",0,"Particles from TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAGGParticles=",0,"Particles from Tagger");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCAPPNParticle=",0,"# Particle from CentApp");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTAPSNParticle=",0,"# Particle from TAPS");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTAGGNParticle=",0,"# Particle from Tagger");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNParticle=",0,"# of Particles (CB + TAPS)");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPhoton=",0,"Array to hold photons	");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fProton=",0,"Array to hold protons");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTaggedPhoton=",0,"Array to hold tagger photon");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPi0=",0,"Array to hold Pi0s");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNPhoton=",0,"# of Photons");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNProton=",0,"# of Protons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPi0=",0,"# of Pi0");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPionPhoton=",0,"# of photons which reconstruted into pion");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPionPhoton=",0,"Array to mark pion photons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonEnergy=",0,"Energy of all photons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonTheta=",0,"Theta of all photons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhi=",0,"Phi of all photons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonTime=",0,"Time of all photons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtonEnergy=",0,"Energy of all protons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtonTheta=",0,"Theta of all protons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtonPhi=",0,"Phi of all protons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtonTime=",0,"Time of all protons");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0Energy=",0,"Energy of all Pi0");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0Theta=",0,"Theta of all Pi0");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0Phi=",0,"Phi of all Pi0");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0Time=",0,"Time of all Pi0");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPi0InvariantMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0InvariantMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0InvariantMassPrompt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0InvariantMassRandom=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fReactionPattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPrompt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPromptMM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRandom=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRandomMM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTagg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTaggNPhot=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggerPhotonTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMissingMassPrompt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMissingMassRandom=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggerChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggerChannelPrompt=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggerChannelRandom=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaPrompt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaRandom=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhiPrompt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhiRandom=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPromptPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPromptPi0MM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRandomPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRandomPi0MM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTaggNPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggerPi0Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMissingMassPromptPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMissingMassRandomPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggerChannelPromptPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggerChannelRandomPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0ThetaPrompt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0ThetaRandom=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0PhiPrompt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0PhiRandom=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"L1Pattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"L2Pattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBitPattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBitPattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CylWireSven */
static void G__setup_memvarTA2CylWireSven(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven));
   { TA2CylWireSven *p; p=(TA2CylWireSven*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRadius=",0,"radius mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"length mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCor[3]=",0,"z correction coeffs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiSpace=",0,"phi spacing of wires");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2TAPS_PbWO4 */
static void G__setup_memvarTA2TAPS_PbWO4(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4));
   { TA2TAPS_PbWO4 *p; p=(TA2TAPS_PbWO4*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2TAPS2008 */
static void G__setup_memvarTA2TAPS2008(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008));
   { TA2TAPS2008 *p; p=(TA2TAPS2008*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fTAPS_OUTPUT_FILE=",0,"OUTPUTFILE set in TAPS2008vX.dat");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPrintSetUpInfo=",0,"if kTRUE ... info/values from dat file are printed");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTapsRunStep=",0,"step of running");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),-1,-1,2,"fBaF2=",0,"BaF2-calorimeeter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fVeto=",0,"Veto-Detectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fPbWO4=",0,"PBwO4-Detectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),-1,-1,2,"fCB=",0,"Crystal Ball Apparatus");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2_Ncluster=",0,"Nr of BaF2 clusters in event");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"id_clBaF2=",0,"indices of hit clusters");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"clBaF2=",0,"-> cluster structs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"cl=",0,"cluster struct");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"clBaF2_Nhits=",0,"crystal-hits inside a cluster");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"clBaF2_elements=",0,"crystal-elements inside a cluster");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"BaF2Time=",0,"pure BaF2-cl-time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTOF=",0,"to save TOF.time");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNoCBTimeCounter=",0,"count up if CB doesnt provide TIME");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fShortGateValue=",0,"to save short-gate for PSA");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLongGateValue=",0,"to save long-gate for PSA");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsVCharged=",0,"to save if hit is charged or not");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fVeto_NHits=",0,"# veto-hits in this event");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVeto_Hits=",0,"all veto-elements that fired");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fThisVetoFired=",0,"element-nr of veto that fired");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVeto_index=",0,"to save Veto-element-number");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVeto_dE=",0,"to save Veto-dE");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVeto_T=",0,"to save Veto-time");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMultipleVetoHit=",0,"will be used in v1");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fp3=",0,"used to make p4");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"particles=",0,"use this to store particle-information");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"NParticles=",0,"# of reconstructed particles");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPDG_ID_sec=",0,"to store particles second (maybe) id");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPDG_ID_unclear=",0,"if fPDG_ID_sec is set then this should be true");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsProton=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsChPion=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fdEvE_IsElectron=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTOF_IsNeutron=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTOF_IsProton=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTOF_IsChPion=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTOF_IsElectron=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTOF_IsGamma=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPSA_IsNucleon=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPSA_IsNoNucleon=",0,"array important for CheckParticleID");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSimpleReconstruct=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTapsFudge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fTAPS_TOF_CutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fTAPS_dEvE_CutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fTAPS_PSA_CutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_TOF_USEAGE=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_TOF_Cuts[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_TOF_Neutron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_TOF_NeutronCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_TOF_Neutron_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_TOF_Proton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_TOF_ProtonCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_TOF_Proton_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_TOF_ChPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_TOF_ChPionCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_TOF_ChPion_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_TOF_Electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_TOF_ElectronCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_TOF_Electron_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_TOF_Gamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_TOF_GammaCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_TOF_Gamma_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_USEAGE=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_dEvE_Cuts[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_Proton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ProtonCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_dEvE_Proton_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_ChPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ChPionCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_dEvE_ChPion_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_dEvE_Electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_dEvE_ElectronCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_dEvE_Electron_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_PSA_USEAGE=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_PSA_Cuts[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_PSA_Nucleon=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_PSA_NucleonCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_PSA_Nucleon_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_PSA_noNucleon=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fTAPS_PSA_noNucleonCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTAPS_PSA_noNucleon_CutName[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTAPS_ReadPbWO4=",0,"no general use ... only for my version. testing");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeOfFlight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Compton */
static void G__setup_memvarTA2Compton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton));
   { TA2Compton *p; p=(TA2Compton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Tagger),-1,-1,2,"fTAGG=",0,"Glasgow photon tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),-1,-1,2,"fCB=",0,"Crystal Ball");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),-1,-1,2,"fTAPS=",0,"TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Ladder),-1,-1,2,"fLADD=",0,"Ladder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAGGpart=",0,"TA2Particles from Tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fCBpart=",0,"TA2Particles from CB");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAPSpart=",0,"TA2Particles from TAPS");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTtaggphot=",0,"TA2Particle tagger photon");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTphoton=",0,"TA2Particle photon");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTproton=",0,"TA2Particle proton");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTpiplus=",0,"TA2Particle piplus");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTneutron=",0,"TA2Particle neutron");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTrootino=",0,"TA2Particle rootino");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTpi0=",0,"TA2Particle pi0");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTeta=",0,"TA2Particle eta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTgprime=",0,"TA2Particle gprime");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4photonTot=",0,"total 4-momentum of gammas");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNphoton=",0,"# photon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNproton=",0,"# proton");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpiplus=",0,"# pi+");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNneutron=",0,"# neutron");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrootino=",0,"# unknowns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNgprime=",0,"# unknowns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNprompt=",0,"tagger prompts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrandom=",0,"tagger randoms");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaP=",0,"prompts lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaR=",0,"randoms lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpP=",0,"prompts lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpR=",0,"randoms lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxTagg=",0,"max # tagger hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpi0=",0,"# pi0");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNeta=",0,"# eta");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNphotchk=",0,"# photon if Npi0 = Neta = 0");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassDpi0=",0,"for meson ID by inv. mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassDeta=",0,"for meson ID by inv. mass");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIJ=",0,"combinatorial indices");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIpi0=",0,"ditto");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIeta=",0,"ditto");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMax2gPerm=",0,"max # 2-gamma permutations");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsMesonIndex=",0,"photon derived from a meson?");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMDpi0=",0,"mass-diff limit pi0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMDeta=",0,"mass-diff limit eta");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRl1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRl2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRh1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRh2=",0,"Prompt-Random windows");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fOACut=",0,"opening-angle cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMLo=",0,"missing mass limit lo");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMHi=",0,"missing mass limit hi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM2g=",0,"2-photon invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM6g=",0,"6-photon invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtKE=",0,"Proton variables");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotKE=",0,"Photon variables");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggerTime=",0,"tagger time");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotTaggTime=",0,"photon-tagger time");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanHit=",0,"channel hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanPhot=",0,"tagger channel");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanPhotP=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanPhotR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmiss=",0,"missing mass for the photon");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmissP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmissR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonKECM=",0,"KE CM of the photon");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonKECMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonKECMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCM=",0,"Theta CM of the photon");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhiCM=",0,"Phi CM of the photon");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhiCMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhiCMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanPhotProt=",0,"tagger channel");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanPhotProtP=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTChanPhotProtR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotProtOA=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotProtOAP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotProtOAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmissProt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmissProtP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmissProtR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonEmissProt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonEmissProtP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonEmissProtR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProt=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProtP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProtR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmissProtOA=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmissProtOAP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonMmissProtOAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTChanPhotProtOA=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTChanPhotProtOAP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTChanPhotProtOAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProtOA=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProtOAP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProtOAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTChanPhotProtOAMM=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTChanPhotProtOAMMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTChanPhotProtOAMMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProtOAMM=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProtOAMMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonThetaCMProtOAMMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhiCMProtOAMM=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhiCMProtOAMMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonPhiCMProtOAMMR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2FPMicro */
static void G__setup_memvarTA2FPMicro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro));
   { TA2FPMicro *p; p=(TA2FPMicro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFPhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNFPhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNFPelem=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2GenericApp */
static void G__setup_memvarTA2GenericApp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp));
   { TA2GenericApp *p; p=(TA2GenericApp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2GenericDetector),-1,-1,2,"fGenDet=",0,"\"standard\" detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2LongScint),-1,-1,2,"fLScint=",0,"Long scintillator bars");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2LongScint),-1,-1,2,"fLTrig=",0,"Long scntillator trigger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),-1,-1,2,"fTrig=",0,"Small trigger scint");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),-1,-1,2,"fFPMic=",0,"microscope tests");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Efficiency */
static void G__setup_memvarTA2Efficiency(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency));
   { TA2Efficiency *p; p=(TA2Efficiency*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Tagger),-1,-1,2,"fTAGG=",0,"Glasgow photon tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),-1,-1,2,"fCB=",0,"Crystal Ball");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),-1,-1,2,"fTAPS=",0,"TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Ladder),-1,-1,2,"fLADD=",0,"Ladder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAGGpart=",0,"TA2Particles from Tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fCBpart=",0,"TA2Particles from CB");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAPSpart=",0,"TA2Particles from TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fTAGGp4=",0,"Tagger 4-mom store");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTphoton=",0,"TA2Particle photon");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTproton=",0,"TA2Particle proton");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTpiplus=",0,"TA2Particle piplus");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTneutron=",0,"TA2Particle neutron");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTrootino=",0,"TA2Particle rootino");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTpi0=",0,"TA2Particle pi0");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTeta=",0,"TA2Particle eta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPARTgprime=",0,"TA2Particle gprime");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fP4photonTot=",0,"total 4-momentum of gammas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNphoton=",0,"# photon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNproton=",0,"# proton");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpiplus=",0,"# pi+");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNneutron=",0,"# neutron");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrootino=",0,"# unknowns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNgprime=",0,"# unknowns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNprompt=",0,"tagger prompts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrandom=",0,"tagger randoms");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaP=",0,"prompts lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaR=",0,"randoms lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpP=",0,"prompts lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpR=",0,"randoms lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxTagg=",0,"max # tagger hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpi0=",0,"# pi0");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNeta=",0,"# eta");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassDpi0=",0,"for meson ID by inv. mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassDeta=",0,"for meson ID by inv. mass");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIJ=",0,"combinatorial indices");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIpi0=",0,"ditto");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMassIeta=",0,"ditto");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMax2gPerm=",0,"max # 2-gamma permutations");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsMesonIndex=",0,"photon derived from a meson?");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMDpi0=",0,"mass-diff limit pi0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxMDeta=",0,"mass-diff limit eta");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRl1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRl2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRh1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRh2=",0,"Prompt-Random windows");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMMinLo=",0,"missing mass limit low E lo");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMMinHi=",0,"missing mass limit low E hi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMMaxLo=",0,"missing mass limit high E lo");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMMaxHi=",0,"missing mass limit high E hi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM2g=",0,"2-photon invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM6g=",0,"6-photon invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotKE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtKE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProtPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0KE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0Theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi0Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Cristina */
static void G__setup_memvarTA2Cristina(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina));
   { TA2Cristina *p; p=(TA2Cristina*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Tagger),-1,-1,2,"fTAGG=",0,"Glasgow photon tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Ladder),-1,-1,2,"fLADD=",0,"Ladder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall),-1,-1,2,"fCAPP=",0,"Central Apparatus ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009),-1,-1,2,"fTAPS=",0,"TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fCristinaFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TTree),-1,-1,2,"fCristinaTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAGGParticles=",0,"TA2CentApp Particles");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTAGGNParticle=",0,"# Particle from Tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fCAPPParticles=",0,"TA2CentApp Particles");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCAPPNParticle=",0,"# Particle from CentApp");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCAPPMaxNParticle=",0,"Max# Particle from CentApp");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fTAPSParticles=",0,"TA2Particles from TAPS");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTAPSNParticle=",0,"# Particle from TAPS");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTAPSMaxNParticle=",0,"Max# Particle from TAPS ");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxNTagg=",0,"Max # Tagger (always 352)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxNParticle=",0,"Max # Particle (CB + TAPS)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBasicVariable=",0,"BasicVariable");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"i=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNParticle=",0,"# of Particles (CB + TAPS)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNPhotTemp=",0,"# of Photons before pi0 ident");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNPhoton=",0,"# of Photons");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNProton=",0,"# of Protons");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNPi0=",0,"# of Pi0");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNUnknown=",0,"# of Unknowns");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPhotTemp=",0,"Array to hold photons before pi0 ident");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPhoton=",0,"Array to hold photons	");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fProton=",0,"Array to hold protons");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fPi0=",0,"Array to hold Pi0s");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fUnknown=",0,"Array to hold unknowns");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2TAPS */
static void G__setup_memvarTA2TAPS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS));
   { TA2TAPS *p; p=(TA2TAPS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Tagger),-1,-1,2,"fTAGG=",0,"Glasgow photon tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Ladder),-1,-1,2,"fLadder=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2),-1,-1,2,"fBaF2=",0,"Pointer to BaF2 array");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"RealVetoHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"IsProton=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"VetoMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNWVetosAmount=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTapsSigma1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTapsSigma2=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNWVetos=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fVetoStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTapsFudge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTapsTof=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTapsPsa=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTapsVetodet=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCharged=",0,(char*)NULL);
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isVCharged=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"psaInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTestLG=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTestSG=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"psarad=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"psaang=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"minRad=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"maxRad=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle1=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle2=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle3=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle4=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle5=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle6=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle7=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle8=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle9=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle10=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"angle11=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma1=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma2=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma3=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma4=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma5=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma6=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma7=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma8=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma9=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma10=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigma11=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"crystal=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClusterTime=",0,"copied from ED 31/07/05 ;-)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TFile),-1,-1,2,"fCutFile=",0,"File used for TAPS t-o-f cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TCutG),-1,-1,2,"fProtonCut=",0,"This cut");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ntaps=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtapsneutron=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtapsproton=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtapselectron=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtapsgamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtapsrootino=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"PosShift[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TimeShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"STesting[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fVetoIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Particle),-1,-1,2,"fParticles=",0,"use this to store particle-information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2UserControl */
static void G__setup_memvarTA2UserControl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl));
   { TA2UserControl *p; p=(TA2UserControl*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2ParaPerpTest */
static void G__setup_memvarTA2ParaPerpTest(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest));
   { TA2ParaPerpTest *p; p=(TA2ParaPerpTest*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),-1,-1,2,"fCB=",0,"CB Pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),-1,-1,2,"fNaI=",0,"CB");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fCBP4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fPhotonP4=",0,"Sorted list of gamma 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,2,"fMeson=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,2,"fhPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLastRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fLastFile[200]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CosmicCal */
static void G__setup_memvarTA2CosmicCal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal));
   { TA2CosmicCal *p; p=(TA2CosmicCal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2LongScint),-1,-1,2,"fLScint=",0,"Long scintillator bars");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2LongScint),-1,-1,2,"fLTrig=",0,"Long scntillator trigger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),-1,-1,2,"fTrig=",0,"Small trigger scint");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarUserDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTA2TrackLine(void) {
   /* TA2TrackLine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine));
   G__memfunc_setup("TA2TrackLine",1092,G__UserDict_227_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__UserDict_227_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__UserDict_227_0_3, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrigin",904,G__UserDict_227_0_4, 117, G__get_linked_tagnum(&G__UserDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirCos",868,G__UserDict_227_0_5, 117, G__get_linked_tagnum(&G__UserDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPsVertex",1121,G__UserDict_227_0_6, 117, G__get_linked_tagnum(&G__UserDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__UserDict_227_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__UserDict_227_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__UserDict_227_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOrigin",916,G__UserDict_227_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirCos",880,G__UserDict_227_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPsVertex",1133,G__UserDict_227_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildTrack",997,G__UserDict_227_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"u 'TVector3' - 11 - - u 'TVector3' - 11 - - "
"d - 'Double_t' 11 '-1.' maxDirCosMag D - 'Double_t' 10 'NULL' limitsPsVertex", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Angle",487,G__UserDict_227_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Angle",487,G__UserDict_227_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TA2TrackLine' - 11 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Angle",487,G__UserDict_227_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "U 'TA2TrackLine' - 10 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Angle",487,G__UserDict_227_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector2' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_227_0_18, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TrackLine::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_227_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TrackLine::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_227_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TrackLine::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_227_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TrackLine::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_227_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_227_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TrackLine::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_227_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TrackLine::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_227_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TrackLine::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_227_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TrackLine::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TrackLine", 1092, G__UserDict_227_0_30, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine), -1, 0, 1, 1, 1, 0, "u 'TA2TrackLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TrackLine", 1218, G__UserDict_227_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UserDict_227_0_32, (int) ('u'), G__get_linked_tagnum(&G__UserDictLN_TA2TrackLine), -1, 1, 1, 1, 1, 0, "u 'TA2TrackLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MwpcTrack(void) {
   /* TA2MwpcTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack));
   G__memfunc_setup("TA2MwpcTrack",1107,G__UserDict_228_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIinter",907,G__UserDict_228_0_3, 105, -1, G__defined_typename("Int_t"), 1, 1, 1, 1, 9, "i - 'Int_t' 10 - iCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIinters",1022,G__UserDict_228_0_4, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTrackType",1290,G__UserDict_228_0_5, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 10 - typeInter0 i - 'Int_t' 10 - typeInter1", (char*)NULL, (void*) G__func2void( (Int_t (*)(const Int_t, const Int_t))(&TA2MwpcTrack::CalcTrackType) ), 0);
   G__memfunc_setup("SetType",718,G__UserDict_228_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - typeInter0 i - 'Int_t' 10 - typeInter1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIinters",1034,G__UserDict_228_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - i0 i - 'Int_t' 10 - i1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIinters",1034,G__UserDict_228_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIinter",919,G__UserDict_228_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"b - 'UChar_t' 10 - iCh i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildTrack",997,G__UserDict_228_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"u 'TVector3' - 11 - r0 u 'TVector3' - 11 - r1 "
"d - 'Double_t' 11 - maxDirCosMag D - 'Double_t' 10 - limitsPsVertex "
"I - 'Int_t' 10 - i I - 'Int_t' 10 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_228_0_11, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MwpcTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_228_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MwpcTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_228_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MwpcTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_228_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MwpcTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_228_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_228_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MwpcTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_228_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MwpcTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_228_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MwpcTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_228_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MwpcTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MwpcTrack", 1107, G__UserDict_228_0_23, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack), -1, 0, 1, 1, 1, 0, "u 'TA2MwpcTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MwpcTrack", 1233, G__UserDict_228_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UserDict_228_0_25, (int) ('u'), G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack), -1, 1, 1, 1, 1, 0, "u 'TA2MwpcTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2TAPS_BaF2(void) {
   /* TA2TAPS_BaF2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2));
   G__memfunc_setup("TA2TAPS_BaF2",889,G__UserDict_738_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxSGElements",1565,G__UserDict_738_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSGEnergy",1060,G__UserDict_738_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "Get short-gate energy of crystal i", (void*) NULL, 0);
   G__memfunc_setup("GetLGEnergy",1053,G__UserDict_738_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "Get long-gate energy of crystal i", (void*) NULL, 0);
   G__memfunc_setup("GetEnergyAll",1187,G__UserDict_738_0_10, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyAll",1187,G__UserDict_738_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusterThreshold",1967,G__UserDict_738_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyResolutionGeV",2240,G__UserDict_738_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyResolution",1982,G__UserDict_738_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiResolution",1653,G__UserDict_738_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiResolutionDg",1824,G__UserDict_738_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaResolution",1866,G__UserDict_738_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Return Theta res. for given Theta (radian)", (void*) NULL, 0);
   G__memfunc_setup("GetThetaResolutionDg",2037,G__UserDict_738_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Return Theta res. for given Theta (degree)", (void*) NULL, 0);
   G__memfunc_setup("GetTimeResolution",1763,G__UserDict_738_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Return sigma of time resolution", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_738_0_20, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TAPS_BaF2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_738_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS_BaF2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_738_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TAPS_BaF2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_738_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TAPS_BaF2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_738_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_738_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS_BaF2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_738_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS_BaF2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_738_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS_BaF2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_738_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS_BaF2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TAPS_BaF2", 889, G__UserDict_738_0_32, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2), -1, 0, 1, 1, 1, 0, "u 'TA2TAPS_BaF2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TAPS_BaF2", 1015, G__UserDict_738_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2PlasticPID(void) {
   /* TA2PlasticPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID));
   G__memfunc_setup("TA2PlasticPID",1140,G__UserDict_739_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display/cut setup", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PIDReadDecoded",1281,G__UserDict_739_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TAPSReadDecoded",1372,G__UserDict_739_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_739_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2PlasticPID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_739_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticPID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_739_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2PlasticPID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_739_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2PlasticPID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_739_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_739_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticPID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_739_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2PlasticPID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_739_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticPID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_739_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2PlasticPID::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2PlasticPID", 1140, G__UserDict_739_0_20, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID), -1, 0, 1, 1, 1, 0, "u 'TA2PlasticPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2PlasticPID", 1266, G__UserDict_739_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Calorimeter(void) {
   /* TA2Calorimeter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter));
   G__memfunc_setup("TA2Calorimeter",1342,G__UserDict_750_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "pass ptr to analyser", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("PhotonReconstruct",1812,G__UserDict_750_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "photon 4 momenta", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLorentzVector",1677,G__UserDict_750_0_7, 117, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mass U 'HitCluster_t' - 0 - cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("GetCal",560,G__UserDict_750_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__UserDict_750_0_10, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPTracker",1084,G__UserDict_750_0_11, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4_Nphoton",1257,G__UserDict_750_0_12, 85, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM_Nphoton",1202,G__UserDict_750_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_750_0_14, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Calorimeter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_750_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Calorimeter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_750_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Calorimeter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_750_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Calorimeter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_750_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_750_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Calorimeter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_750_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Calorimeter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_750_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Calorimeter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_750_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Calorimeter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Calorimeter", 1342, G__UserDict_750_0_26, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2Calorimeter), -1, 0, 1, 1, 1, 0, "u 'TA2Calorimeter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Calorimeter", 1468, G__UserDict_750_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Physics(void) {
   /* TA2Physics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Physics));
   G__memfunc_setup("TA2Physics",938,G__UserDict_755_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2Physics), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", "setup decode in implement", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Periodic",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "periodic task", (void*) NULL, 1);
   G__memfunc_setup("GetP4miss",864,G__UserDict_755_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", "missing 4 momenta", (void*) NULL, 0);
   G__memfunc_setup("GetP4target",1067,G__UserDict_755_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", "target 4 momenta", (void*) NULL, 0);
   G__memfunc_setup("GetTargetPos",1209,G__UserDict_755_0_10, 117, G__get_linked_tagnum(&G__UserDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", "target position", (void*) NULL, 0);
   G__memfunc_setup("GetMmiss",809,G__UserDict_755_0_11, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "missing masses", (void*) NULL, 0);
   G__memfunc_setup("GetPmiss",812,G__UserDict_755_0_12, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "missing momenta", (void*) NULL, 0);
   G__memfunc_setup("GetPtheta",902,G__UserDict_755_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "recoil polar angles", (void*) NULL, 0);
   G__memfunc_setup("GetPphi",689,G__UserDict_755_0_14, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "recoil asim angles", (void*) NULL, 0);
   G__memfunc_setup("GetNtarget",1013,G__UserDict_755_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# target nuclei", (void*) NULL, 0);
   G__memfunc_setup("GetNperm",802,G__UserDict_755_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# general purpose integers", (void*) NULL, 0);
   G__memfunc_setup("GetNpermutation",1574,G__UserDict_755_0_17, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "general purpose integers", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_755_0_18, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Physics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_755_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Physics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_755_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Physics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_755_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Physics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_755_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_755_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Physics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_755_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Physics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_755_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Physics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_755_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Physics::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Physics", 938, G__UserDict_755_0_30, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2Physics), -1, 0, 1, 1, 1, 0, "u 'TA2Physics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Physics", 1064, G__UserDict_755_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2TAPS2009(void) {
   /* TA2TAPS2009 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009));
   G__memfunc_setup("TA2TAPS2009",714,G__UserDict_756_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - line i - - 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeAllRootinos",1524,G__UserDict_756_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SimplePhotonReconstruct",2430,G__UserDict_756_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MainReconstruct",1569,G__UserDict_756_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLorentzVector",1677,G__UserDict_756_0_10, 117, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mass U 'HitCluster_t' - 0 - cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleInfo",1516,G__UserDict_756_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - NrParticle", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticles",1223,G__UserDict_756_0_13, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNparticles",1333,G__UserDict_756_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCal",560,G__UserDict_756_0_15, 85, G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVeto",702,G__UserDict_756_0_16, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4_Nphoton",1257,G__UserDict_756_0_17, 85, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM_Nphoton",1202,G__UserDict_756_0_18, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckParticleID",1439,G__UserDict_756_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalibrateVetoEnergy",1935,G__UserDict_756_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalibrateBaF2Energy",1804,G__UserDict_756_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - photonCB", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TAPS_GetCLInfo",1234,G__UserDict_756_0_22, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - module h - 'UInt_t' 0 - TimeOrEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_756_0_23, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TAPS2009::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_756_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS2009::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_756_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TAPS2009::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_756_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TAPS2009::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_756_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_756_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS2009::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_756_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS2009::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_756_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS2009::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_756_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS2009::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TAPS2009", 714, G__UserDict_756_0_35, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2009), -1, 0, 1, 1, 1, 0, "u 'TA2TAPS2009' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TAPS2009", 840, G__UserDict_756_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2UserAnalysis(void) {
   /* TA2UserAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis));
   G__memfunc_setup("TA2UserAnalysis",1450,G__UserDict_758_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis), -1, 0, 1, 1, 1, 0, "C - - 10 - -", "normal use, pass ptr to TAcquRoot", (void*) NULL, 0);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "display setup", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "cut/display setup", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_758_0_5, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2UserAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_758_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_758_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2UserAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_758_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2UserAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_758_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_758_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_758_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_758_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_758_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2UserAnalysis", 1450, G__UserDict_758_0_17, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis), -1, 0, 1, 1, 1, 0, "u 'TA2UserAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2UserAnalysis", 1576, G__UserDict_758_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2WCLayerSven(void) {
   /* TA2WCLayerSven */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven));
   G__memfunc_setup("TA2WCLayerSven",1274,G__UserDict_759_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven), -1, 0, 5, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"Y - - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("GetNElement",1080,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNHits",774,G__UserDict_759_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHits",696,G__UserDict_759_0_4, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxClust",1105,G__UserDict_759_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DecodeCluster",1318,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - nHit I - 'Int_t' 2 - phit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_759_0_7, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2WCLayerSven::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_759_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WCLayerSven::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_759_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2WCLayerSven::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_759_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2WCLayerSven::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_759_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_759_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WCLayerSven::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_759_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2WCLayerSven::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_759_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WCLayerSven::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_759_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2WCLayerSven::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2WCLayerSven", 1274, G__UserDict_759_0_19, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2WCLayerSven), -1, 0, 1, 1, 1, 0, "u 'TA2WCLayerSven' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2WCLayerSven", 1400, G__UserDict_759_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CylStripSven(void) {
   /* TA2CylStripSven */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven));
   G__memfunc_setup("TA2CylStripSven",1437,G__UserDict_760_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"Y - - 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CGCluster",876,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CGClusters",991,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInside",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRadius",904,G__UserDict_760_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTgWC",629,G__UserDict_760_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ0",426,G__UserDict_760_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPitch",792,G__UserDict_760_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__UserDict_760_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEffLength",1171,G__UserDict_760_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZCor",670,G__UserDict_760_0_11, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZCor",670,G__UserDict_760_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiCor",869,G__UserDict_760_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiCor",869,G__UserDict_760_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClustEn",990,G__UserDict_760_0_15, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClustEn",990,G__UserDict_760_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_760_0_17, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CylStripSven::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_760_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylStripSven::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_760_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CylStripSven::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_760_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CylStripSven::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_760_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_760_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylStripSven::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_760_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylStripSven::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_760_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylStripSven::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_760_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylStripSven::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CylStripSven", 1437, G__UserDict_760_0_29, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CylStripSven), -1, 0, 1, 1, 1, 0, "u 'TA2CylStripSven' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CylStripSven", 1563, G__UserDict_760_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Taps2009LE(void) {
   /* TA2Taps2009LE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE));
   G__memfunc_setup("TA2Taps2009LE",955,G__UserDict_761_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - line i - - 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeAllRootinos",1524,G__UserDict_761_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SimplePhotonReconstruct",2430,G__UserDict_761_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MainReconstruct",1569,G__UserDict_761_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLorentzVector",1677,G__UserDict_761_0_10, 117, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mass U 'HitCluster_t' - 0 - cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCal",560,G__UserDict_761_0_12, 85, G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVeto",702,G__UserDict_761_0_13, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4_Nphoton",1257,G__UserDict_761_0_14, 85, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM_Nphoton",1202,G__UserDict_761_0_15, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckParticleID",1439,G__UserDict_761_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalibrateVetoEnergy",1935,G__UserDict_761_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalibrateBaF2Energy",1804,G__UserDict_761_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - photonCB", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TAPS_GetCLInfo",1234,G__UserDict_761_0_19, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - module h - 'UInt_t' 0 - TimeOrEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_761_0_20, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Taps2009LE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_761_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Taps2009LE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_761_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Taps2009LE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_761_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Taps2009LE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_761_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_761_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Taps2009LE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_761_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Taps2009LE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_761_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Taps2009LE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_761_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Taps2009LE::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Taps2009LE", 955, G__UserDict_761_0_32, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2Taps2009LE), -1, 0, 1, 1, 1, 0, "u 'TA2Taps2009LE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Taps2009LE", 1081, G__UserDict_761_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CylMWPC(void) {
   /* TA2CylMWPC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC));
   G__memfunc_setup("StripWire",937,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 2, 0, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - D - 'Double_t' 0 - - "
"D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TA2CylMWPC",806,G__UserDict_762_0_2, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "flush local new store", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some pre-event setup", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChamberParm",1390,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - D - 'Double_t' 0 - -", "save chamber param", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "decode event info", (void*) NULL, 1);
   G__memfunc_setup("IntersectLayers",1569,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTracks",998,G__UserDict_762_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", "decode and load setup info", (void*) NULL, 1);
   G__memfunc_setup("ParseMisc",903,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - line", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadParamFiles",1376,G__UserDict_762_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AbsDiffPhiSven",1356,G__UserDict_762_0_15, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - phi1 d - 'Double_t' 0 - phi2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDPhiMax",939,G__UserDict_762_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZIntersect",1323,G__UserDict_762_0_17, 68, -1, G__defined_typename("Double_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZIntersect",1323,G__UserDict_762_0_18, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiSWDiff",1124,G__UserDict_762_0_19, 68, -1, G__defined_typename("Double_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiSWDiff",1124,G__UserDict_762_0_20, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiWire",984,G__UserDict_762_0_21, 68, -1, G__defined_typename("Double_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiWire",984,G__UserDict_762_0_22, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiDiff",954,G__UserDict_762_0_23, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertX",793,G__UserDict_762_0_24, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertY",794,G__UserDict_762_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertZ",795,G__UserDict_762_0_26, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPseudoVertX",1417,G__UserDict_762_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPseudoVertY",1418,G__UserDict_762_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPseudoVertZ",1419,G__UserDict_762_0_29, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustEnI",1063,G__UserDict_762_0_30, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nChamber i - 'Int_t' 0 - nCluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustEnE",1059,G__UserDict_762_0_31, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nChamber i - 'Int_t' 0 - nCluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustEnIPtr",1373,G__UserDict_762_0_32, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nChamber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustEnEPtr",1369,G__UserDict_762_0_33, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nChamber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTrack",867,G__UserDict_762_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNIntersect",1311,G__UserDict_762_0_35, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNIntersect",1311,G__UserDict_762_0_36, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_762_0_37, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CylMWPC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_762_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMWPC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_762_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CylMWPC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_762_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CylMWPC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_762_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_762_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMWPC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_762_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylMWPC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_762_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMWPC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_762_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylMWPC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CylMWPC", 806, G__UserDict_762_0_49, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC), -1, 0, 1, 1, 1, 0, "u 'TA2CylMWPC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CylMWPC", 932, G__UserDict_762_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CrystalBall(void) {
   /* TA2CrystalBall */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall));
   G__memfunc_setup("TA2CrystalBall",1316,G__UserDict_763_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "pass ptr to analyser", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "event by event analysis", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "setup decode in implement", (void*) NULL, 1);
   G__memfunc_setup("TriggerSections",1564,G__UserDict_763_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "calculate the number of trig sections", (void*) NULL, 1);
   G__memfunc_setup("GetNaI",536,G__UserDict_763_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__UserDict_763_0_10, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMWPC",599,G__UserDict_763_0_11, 85, G__get_linked_tagnum(&G__UserDictLN_TA2CylMWPC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNCharged",1052,G__UserDict_763_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaE",847,G__UserDict_763_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCBMeanTime",1205,G__UserDict_763_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__UserDict_763_0_15, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__UserDict_763_0_16, 117, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNparticles",1333,G__UserDict_763_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNParticles",1301,G__UserDict_763_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTrigSectFired",1661,G__UserDict_763_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetETrigCBA",961,G__UserDict_763_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetETrigCBB",962,G__UserDict_763_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetETrigCBC",963,G__UserDict_763_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetETrigCBD",964,G__UserDict_763_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetETrigSect",1162,G__UserDict_763_0_24, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_763_0_25, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CrystalBall::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_763_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CrystalBall::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_763_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CrystalBall::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_763_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CrystalBall::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_763_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_763_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CrystalBall::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_763_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CrystalBall::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_763_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CrystalBall::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_763_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CrystalBall::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CrystalBall", 1316, G__UserDict_763_0_37, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CrystalBall), -1, 0, 1, 1, 1, 0, "u 'TA2CrystalBall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CrystalBall", 1442, G__UserDict_763_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2PhotoPhysics(void) {
   /* TA2PhotoPhysics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics));
   G__memfunc_setup("TA2PhotoPhysics",1460,G__UserDict_782_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sort2Photon",1106,G__UserDict_782_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortNPhoton",1134,G__UserDict_782_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkUndefined",1309,G__UserDict_782_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - jtagg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkEndBuffer",1276,G__UserDict_782_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_782_0_11, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2PhotoPhysics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_782_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PhotoPhysics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_782_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2PhotoPhysics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_782_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2PhotoPhysics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_782_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_782_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PhotoPhysics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_782_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2PhotoPhysics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_782_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PhotoPhysics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_782_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2PhotoPhysics::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2PhotoPhysics", 1460, G__UserDict_782_0_23, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2PhotoPhysics), -1, 0, 1, 1, 1, 0, "u 'TA2PhotoPhysics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2PhotoPhysics", 1586, G__UserDict_782_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2ThreshPi0(void) {
   /* TA2ThreshPi0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0));
   G__memfunc_setup("TA2ThreshPi0",1054,G__UserDict_783_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sort2Photon",1106,G__UserDict_783_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortNPhoton",1134,G__UserDict_783_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkUndefined",1309,G__UserDict_783_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - jtagg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkEndBuffer",1276,G__UserDict_783_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sqr",310,G__UserDict_783_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tgg_Min",677,G__UserDict_783_0_12, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - T d - 'Double_t' 0 - mpi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__UserDict_783_0_13, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mom d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Momentum",850,G__UserDict_783_0_14, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - en d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("qp_thcm",748,G__UserDict_783_0_15, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - ke d - 'Double_t' 0 - pm "
"d - 'Double_t' 0 - qth_cm d - 'Double_t' 0 - qm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("qT_max",618,G__UserDict_783_0_16, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - eg d - 'Double_t' 0 - pm "
"d - 'Double_t' 0 - qm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Linear",603,G__UserDict_783_0_17, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_783_0_18, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2ThreshPi0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_783_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ThreshPi0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_783_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2ThreshPi0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_783_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2ThreshPi0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_783_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_783_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ThreshPi0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_783_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2ThreshPi0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_783_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ThreshPi0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_783_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2ThreshPi0::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2ThreshPi0", 1054, G__UserDict_783_0_30, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2ThreshPi0), -1, 0, 1, 1, 1, 0, "u 'TA2ThreshPi0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2ThreshPi0", 1180, G__UserDict_783_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2UserPhysics(void) {
   /* TA2UserPhysics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics));
   G__memfunc_setup("TA2UserPhysics",1353,G__UserDict_784_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_784_0_6, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2UserPhysics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_784_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserPhysics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_784_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2UserPhysics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_784_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2UserPhysics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_784_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_784_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserPhysics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_784_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserPhysics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_784_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserPhysics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_784_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserPhysics::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2UserPhysics", 1353, G__UserDict_784_0_18, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2UserPhysics), -1, 0, 1, 1, 1, 0, "u 'TA2UserPhysics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2UserPhysics", 1479, G__UserDict_784_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CylMwpcStrip(void) {
   /* TA2CylMwpcStrip */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip));
   G__memfunc_setup("TA2CylMwpcStrip",1432,G__UserDict_792_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"Y - - 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CGCluster",876,G__UserDict_792_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CGClusters",991,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInside",792,G__UserDict_792_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 10 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRadius",904,G__UserDict_792_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTgWC",629,G__UserDict_792_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPitch",792,G__UserDict_792_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__UserDict_792_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEffLength",1171,G__UserDict_792_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClustEn",990,G__UserDict_792_0_10, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClustEn",990,G__UserDict_792_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CGClusterFromPhiZ",1659,G__UserDict_792_0_12, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 11 - - d - 'Double_t' 11 - - "
"i 'TA2CylMwpcStrip::EHelicity' - 10 - -", "Find CG from known Phi and Z", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_792_0_13, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CylMwpcStrip::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_792_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpcStrip::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_792_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CylMwpcStrip::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_792_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CylMwpcStrip::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_792_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_792_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpcStrip::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_792_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylMwpcStrip::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_792_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpcStrip::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_792_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylMwpcStrip::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CylMwpcStrip", 1432, G__UserDict_792_0_25, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip), -1, 0, 1, 1, 1, 0, "u 'TA2CylMwpcStrip' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CylMwpcStrip", 1558, G__UserDict_792_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CylMwpcWire(void) {
   /* TA2CylMwpcWire */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire));
   G__memfunc_setup("TA2CylMwpcWire",1309,G__UserDict_794_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"Y - - 0 - - D - 'Double_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CGCluster",876,G__UserDict_794_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRadius",904,G__UserDict_794_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__UserDict_794_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_794_0_5, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CylMwpcWire::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_794_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpcWire::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_794_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CylMwpcWire::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_794_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CylMwpcWire::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_794_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_794_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpcWire::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_794_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylMwpcWire::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_794_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpcWire::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_794_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylMwpcWire::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CylMwpcWire", 1309, G__UserDict_794_0_17, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire), -1, 0, 1, 1, 1, 0, "u 'TA2CylMwpcWire' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CylMwpcWire", 1435, G__UserDict_794_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MwpcIntersection(void) {
   /* TA2MwpcIntersection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection));
   G__memfunc_setup("TA2MwpcIntersection",1877,G__UserDict_795_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__UserDict_795_0_2, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 11 - x d - 'Double_t' 11 - y "
"d - 'Double_t' 11 - z i - 'Int_t' 10 - iClI "
"i - 'Int_t' 10 - iClW i - 'Int_t' 10 - iClE "
"i 'TA2MwpcIntersection::EType' - 10 - type d - 'Double_t' 10 - dPhiWIE "
"d - 'Double_t' 10 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__UserDict_795_0_3, 85, G__get_linked_tagnum(&G__UserDictLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__UserDict_795_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__UserDict_795_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIclI",641,G__UserDict_795_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIclW",655,G__UserDict_795_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIclE",637,G__UserDict_795_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__UserDict_795_0_9, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersectioncLcLEType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDphiWIE",906,G__UserDict_795_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAclIE",702,G__UserDict_795_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_795_0_12, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MwpcIntersection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_795_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MwpcIntersection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_795_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MwpcIntersection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_795_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MwpcIntersection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_795_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_795_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MwpcIntersection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_795_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MwpcIntersection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_795_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MwpcIntersection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_795_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MwpcIntersection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MwpcIntersection", 1877, G__UserDict_795_0_24, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection), -1, 0, 1, 1, 1, 0, "u 'TA2MwpcIntersection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MwpcIntersection", 2003, G__UserDict_795_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UserDict_795_0_26, (int) ('u'), G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection), -1, 1, 1, 1, 1, 0, "u 'TA2MwpcIntersection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CylMwpc(void) {
   /* TA2CylMwpc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc));
   G__memfunc_setup("Test",416,G__UserDict_797_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", "for test", (void*) NULL, 1);
   G__memfunc_setup("GetR",370,G__UserDict_797_0_2, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStripsI",1006,G__UserDict_797_0_3, 85, G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - iCh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStripsE",1002,G__UserDict_797_0_4, 85, G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcStrip), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - iCh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWires",810,G__UserDict_797_0_5, 85, G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpcWire), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - iCh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetWiresAndStripsUsage",2458,G__UserDict_797_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - iCh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetWiresAndStripsUsage",2458,G__UserDict_797_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUsedClW",851,G__UserDict_797_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iClW", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUsedClI",837,G__UserDict_797_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iClI", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUsedClE",833,G__UserDict_797_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iClE", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedClW",963,G__UserDict_797_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iClW", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedClI",949,G__UserDict_797_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iClI", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedClE",945,G__UserDict_797_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iClE", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUsedWIE",818,G__UserDict_797_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iClI "
"i - 'Int_t' 10 - iClW i - 'Int_t' 10 - iClE", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUsedWIE",818,G__UserDict_797_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iInter", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUsedWIE",818,G__UserDict_797_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - iTrack", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedWIE",930,G__UserDict_797_0_17, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iClI "
"i - 'Int_t' 10 - iClW i - 'Int_t' 10 - iClE", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedWIE",930,G__UserDict_797_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - iInter", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedWIE",930,G__UserDict_797_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - iTrack", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddIntersection",1536,G__UserDict_797_0_20, 121, -1, -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 10 - iCh i 'TA2MwpcIntersection::EType' - 10 - type "
"i - 'Int_t' 10 - iClI i - 'Int_t' 10 - iClW "
"i - 'Int_t' 10 - iClE d - 'Double_t' 11 - z "
"d - 'Double_t' 11 - phi d - 'Double_t' 11 - dPhiWIE "
"d - 'Double_t' 11 - ampl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TooManyInters",1340,G__UserDict_797_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - iCh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PhiCorrEI",837,G__UserDict_797_0_22, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - zEI "
"d - 'Double_t' 11 - phiEI", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZcorrEI",670,G__UserDict_797_0_23, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - phiCorrEI", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZcorrEW",684,G__UserDict_797_0_24, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - zEW "
"d - 'Double_t' 11 - phiW", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZinterIE",778,G__UserDict_797_0_25, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - phiI "
"d - 'Double_t' 11 - phiE i - 'Int_t' 10 - j "
"i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PhiInterIE",945,G__UserDict_797_0_26, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - phiI "
"d - 'Double_t' 11 - phiE i - 'Int_t' 10 - j "
"i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZinterWI",796,G__UserDict_797_0_27, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - phiW "
"d - 'Double_t' 11 - phiI i - 'Int_t' 10 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZinterWE",792,G__UserDict_797_0_28, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - phiW "
"d - 'Double_t' 11 - phiE i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Xinter",634,G__UserDict_797_0_29, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Yinter",635,G__UserDict_797_0_30, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Zinter",636,G__UserDict_797_0_31, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iCh d - 'Double_t' 11 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNinters",1027,G__UserDict_797_0_32, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNinters",1027,G__UserDict_797_0_33, 105, -1, G__defined_typename("Int_t"), 1, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInters",917,G__UserDict_797_0_34, 85, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInters",917,G__UserDict_797_0_35, 85, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection), -1, 0, 2, 1, 1, 9, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j", "fInters[iCh][iInter]", (void*) NULL, 1);
   G__memfunc_setup("GetNintersTrue",1443,G__UserDict_797_0_36, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNintersTrue",1443,G__UserDict_797_0_37, 105, -1, G__defined_typename("Int_t"), 1, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIintersTrue",1438,G__UserDict_797_0_38, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIintersTrue",1438,G__UserDict_797_0_39, 105, -1, G__defined_typename("Int_t"), 1, 2, 1, 1, 9, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInterTrue",1218,G__UserDict_797_0_40, 85, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection), -1, 0, 2, 1, 1, 9, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNintersCandidate",1920,G__UserDict_797_0_41, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNintersCandidate",1920,G__UserDict_797_0_42, 105, -1, G__defined_typename("Int_t"), 1, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIintersCandidate",1915,G__UserDict_797_0_43, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIintersCandidate",1915,G__UserDict_797_0_44, 105, -1, G__defined_typename("Int_t"), 1, 2, 1, 1, 9, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInterCandidate",1695,G__UserDict_797_0_45, 85, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcIntersection), -1, 0, 2, 1, 1, 9, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIclI",641,G__UserDict_797_0_46, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIclE",637,G__UserDict_797_0_47, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZie",584,G__UserDict_797_0_48, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiIE",719,G__UserDict_797_0_49, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNie",572,G__UserDict_797_0_50, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDphiWIE",906,G__UserDict_797_0_51, 85, G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR), G__defined_typename("map<Double_t,pair<Int_t,Int_t> >"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrackTo",961,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'map<double,int,less<double>,allocator<pair<const double,int> > >' 'map<Double_t,Int_t>' 1 - mapTracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeTracks",998,G__UserDict_797_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", "Make all possible tracks", (void*) NULL, 1);
   G__memfunc_setup("SelectBestTracks",1622,G__UserDict_797_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<double,int,less<double>,allocator<pair<const double,int> > >' 'map<Double_t,Int_t>' 11 - - u 'map<double,int,less<double>,allocator<pair<const double,int> > >' 'map<Double_t,Int_t>' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TooManyTracks",1327,G__UserDict_797_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksPtr",1324,G__UserDict_797_0_56, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracks",1014,G__UserDict_797_0_57, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTracks",904,G__UserDict_797_0_58, 85, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrack",789,G__UserDict_797_0_59, 85, G__get_linked_tagnum(&G__UserDictLN_TA2MwpcTrack), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksTruePtr",1740,G__UserDict_797_0_60, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksTrue",1430,G__UserDict_797_0_61, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTracksTrue",1320,G__UserDict_797_0_62, 85, G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR), G__defined_typename("map<Double_t,Int_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksTrueCandidatePtr",2633,G__UserDict_797_0_63, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksTrueCandidate",2323,G__UserDict_797_0_64, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTracksTrueCandidate",2213,G__UserDict_797_0_65, 85, G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR), G__defined_typename("map<Double_t,Int_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksCandidatePtr",2217,G__UserDict_797_0_66, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksCandidate",1907,G__UserDict_797_0_67, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTracksCandidate",1797,G__UserDict_797_0_68, 85, G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR), G__defined_typename("map<Double_t,Int_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksTrueBestPtr",2138,G__UserDict_797_0_69, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksTrueBest",1828,G__UserDict_797_0_70, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTracksTrueBest",1718,G__UserDict_797_0_71, 85, G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR), G__defined_typename("map<Double_t,Int_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksTrueCandidateBestPtr",3031,G__UserDict_797_0_72, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksTrueCandidateBest",2721,G__UserDict_797_0_73, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTracksTrueCandidateBest",2611,G__UserDict_797_0_74, 85, G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR), G__defined_typename("map<Double_t,Int_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksCandidateBestPtr",2615,G__UserDict_797_0_75, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksCandidateBest",2305,G__UserDict_797_0_76, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTracksCandidateBest",2195,G__UserDict_797_0_77, 85, G__get_linked_tagnum(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR), G__defined_typename("map<Double_t,Int_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeVertexes",1236,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'map<double,int,less<double>,allocator<pair<const double,int> > >' 'map<Double_t,Int_t>' 11 - -", "Make vertexes", (void*) NULL, 1);
   G__memfunc_setup("GetMaxVertex",1220,G__UserDict_797_0_79, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNvertexes",1252,G__UserDict_797_0_80, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNvertexPtr",1346,G__UserDict_797_0_81, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVertex",926,G__UserDict_797_0_82, 85, G__get_linked_tagnum(&G__UserDictLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "flush local new store", (void*) NULL, 1);
   G__memfunc_setup("IntersectLayers",1569,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - -", "Find Wire-Strip-Strip intersections", (void*) NULL, 1);
   G__memfunc_setup("MarkEndBuffers",1391,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Mark EndBuffer for the output arrays", (void*) NULL, 1);
   G__memfunc_setup("TA2CylMwpc",902,G__UserDict_797_0_86, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChamberParm",1390,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadGeneratedKinematics",2323,G__UserDict_797_0_91, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadMC",524,G__UserDict_797_0_92, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Reset event", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_797_0_96, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CylMwpc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_797_0_97, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_797_0_98, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CylMwpc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_797_0_99, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CylMwpc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_797_0_103, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_797_0_104, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_797_0_105, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylMwpc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_797_0_106, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylMwpc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_797_0_107, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylMwpc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CylMwpc", 902, G__UserDict_797_0_108, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc), -1, 0, 1, 1, 1, 0, "u 'TA2CylMwpc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CylMwpc", 1028, G__UserDict_797_0_109, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CalArray(void) {
   /* TA2CalArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray));
   G__memfunc_setup("TA2CalArray",982,G__UserDict_812_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CalArray), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "end-of-event cleanup", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("DecodeClusterUCLA",1611,G__UserDict_812_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "UCLA DecodeCluster() version - UNTESTED!!!!!", (void*) NULL, 1);
   G__memfunc_setup("DecodeSaved",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "decode previously written data", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", "read in TA2CalArray specific parameters", (void*) NULL, 1);
   G__memfunc_setup("GetClusterThreshold",1967,G__UserDict_812_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "***", (void*) NULL, 0);
   G__memfunc_setup("GetSigmaEnergyGeV",1661,G__UserDict_812_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaEnergy",1403,G__UserDict_812_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaPhi",1074,G__UserDict_812_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaPhiDg",1245,G__UserDict_812_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTheta",1287,G__UserDict_812_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Return Theta res. for given Theta (radian)", (void*) NULL, 0);
   G__memfunc_setup("GetSigmaThetaDg",1458,G__UserDict_812_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Return Theta res. for given Theta (degree)", (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTime",1184,G__UserDict_812_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Return sigma of time resolution", (void*) NULL, 0);
   G__memfunc_setup("GetEnergyAll",1187,G__UserDict_812_0_19, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyAll",1187,G__UserDict_812_0_20, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusterUCLA",1319,G__UserDict_812_0_21, 85, G__get_linked_tagnum(&G__UserDictLN_HitCluster_t), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusterUCLA",1319,G__UserDict_812_0_22, 85, G__get_linked_tagnum(&G__UserDictLN_HitCluster_t), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUCLAClustering",1537,G__UserDict_812_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTempHits2",1152,G__UserDict_812_0_24, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_812_0_25, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CalArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_812_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CalArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_812_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CalArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_812_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CalArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_812_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_812_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CalArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_812_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CalArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_812_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CalArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_812_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CalArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CalArray", 982, G__UserDict_812_0_37, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CalArray), -1, 0, 1, 1, 1, 0, "u 'TA2CalArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CalArray", 1108, G__UserDict_812_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CentralTrack(void) {
   /* TA2CentralTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack));
   G__memfunc_setup("SetType",718,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TA2CentralTrack",1413,G__UserDict_814_0_2, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrack",801,G__UserDict_814_0_4, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 10 - iHitPid i - 'Int_t' 10 - iInterMwpc0 "
"i - 'Int_t' 10 - iInterMwpc1 i - 'Int_t' 10 - iClNaI "
"u 'TVector3' - 11 - orig u 'TVector3' - 11 - dircos "
"u 'TVector3' - 11 - psvertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIhitPid",983,G__UserDict_814_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEhitPid",979,G__UserDict_814_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThitPid",994,G__UserDict_814_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIinterMwpc",1326,G__UserDict_814_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - iCh i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIintersMwpc",1441,G__UserDict_814_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - i0 i - 'Int_t' 10 - i1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEtrackMwpc",1309,G__UserDict_814_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTtrackMwpc",1324,G__UserDict_814_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIclNaI",828,G__UserDict_814_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclNaI",824,G__UserDict_814_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTclNaI",839,G__UserDict_814_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMclNaI",832,G__UserDict_814_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCentralIndexNaI",1765,G__UserDict_814_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaTimeNaI",1444,G__UserDict_814_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaEnergyNaI",1663,G__UserDict_814_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaPhiNaI",1334,G__UserDict_814_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaThetaNaI",1547,G__UserDict_814_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - tet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTrackType",1290,G__UserDict_814_0_21, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 1, 0, 
"g - 'Bool_t' 10 - hasNaI g - 'Bool_t' 10 - hasMwpc1 "
"g - 'Bool_t' 10 - hasMwpc0 g - 'Bool_t' 10 - hasPid", (char*)NULL, (void*) G__func2void( (Int_t (*)(const Bool_t, const Bool_t, const Bool_t, const Bool_t))(&TA2CentralTrack::CalcTrackType) ), 0);
   G__memfunc_setup("GetIhitPid",971,G__UserDict_814_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEhitPid",967,G__UserDict_814_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThitPid",982,G__UserDict_814_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIinterMwpc",1314,G__UserDict_814_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - iCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIintersMwpc",1429,G__UserDict_814_0_26, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEtrackMwpc",1297,G__UserDict_814_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTtrackMwpc",1312,G__UserDict_814_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIclNaI",816,G__UserDict_814_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEclNaI",812,G__UserDict_814_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTclNaI",827,G__UserDict_814_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMclNaI",820,G__UserDict_814_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentralIndexNaI",1753,G__UserDict_814_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTimeNaI",1432,G__UserDict_814_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaEnergyNaI",1651,G__UserDict_814_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaPhiNaI",1322,G__UserDict_814_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaThetaNaI",1535,G__UserDict_814_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasPid",569,G__UserDict_814_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasMwpc",691,G__UserDict_814_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - iCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasMwpc",691,G__UserDict_814_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasSingleMwpc",1301,G__UserDict_814_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasNaI",532,G__UserDict_814_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNeutral",919,G__UserDict_814_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_814_0_44, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CentralTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_814_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CentralTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_814_0_46, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CentralTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_814_0_47, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CentralTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_814_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_814_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CentralTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_814_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CentralTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_814_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CentralTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_814_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CentralTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CentralTrack", 1413, G__UserDict_814_0_56, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack), -1, 0, 1, 1, 1, 0, "u 'TA2CentralTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CentralTrack", 1539, G__UserDict_814_0_57, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UserDict_814_0_58, (int) ('u'), G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack), -1, 1, 1, 1, 1, 0, "u 'TA2CentralTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CentralApparatus(void) {
   /* TA2CentralApparatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus));
   G__memfunc_setup("Test",416,G__UserDict_815_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", "for test", (void*) NULL, 0);
   G__memfunc_setup("GetMaxTrack",1083,G__UserDict_815_0_2, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFactorTrackLengthNaI",2254,G__UserDict_815_0_3, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 9, "", "TEST option under test", (void*) NULL, 1);
   G__memfunc_setup("GetNaI",536,G__UserDict_815_0_4, 85, G__get_linked_tagnum(&G__UserDictLN_TA2CalArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPid",573,G__UserDict_815_0_5, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Detector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMwpc",695,G__UserDict_815_0_6, 85, G__get_linked_tagnum(&G__UserDictLN_TA2CylMwpc), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPositionsPid",1541,G__UserDict_815_0_7, 85, G__get_linked_tagnum(&G__UserDictLN_TVector2), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPositionsNaI",1504,G__UserDict_815_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TVector3), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedClNaI",1124,G__UserDict_815_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUsedClNaI",1012,G__UserDict_815_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsedHitPid",1279,G__UserDict_815_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUsedHitPid",1167,G__UserDict_815_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcEhitPid",1050,G__UserDict_815_0_13, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - iHitPid u 'TVector3' - 11 - orig "
"u 'TVector3' - 11 - dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcEtrackMwpc",1380,G__UserDict_815_0_14, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - iInterMwpc0 i - 'Int_t' 10 - iInterMwpc1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTracks",998,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTracksTrue",1414,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'map<double,int,less<double>,allocator<pair<const double,int> > >' 'map<Double_t,Int_t>' 10 - - u 'map<double,pair<int,int>,less<double>,allocator<pair<const double,pair<int,int> > > >' 'map<Double_t,pair<Int_t,Int_t> >' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTracksPidMwpc",1690,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'map<double,int,less<double>,allocator<pair<const double,int> > >' 'map<Double_t,Int_t>' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTracksMwpc",1405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'map<double,int,less<double>,allocator<pair<const double,int> > >' 'map<Double_t,Int_t>' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTracksTrue",1414,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"I - 'Int_t' 12 - - I - 'Int_t' 10 - - "
"u 'map<double,int,less<double>,allocator<pair<const double,int> > >' 'map<Double_t,Int_t>' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTracksPidMwpc",1690,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"I - 'Int_t' 12 - - I - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTracksPidNaI",1531,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CountNotUsedPid",1512,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CountNotUsedIntersMwpc",2263,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"I - 'Int_t' 12 - - I - 'Int_t' 10 - - "
"I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTrack",766,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 2, 0, 
"i - 'Int_t' 10 - - i - 'Int_t' 10 - - "
"i - 'Int_t' 10 - - i - 'Int_t' 10 - - "
"u 'TVector3' - 11 - - u 'TVector3' - 11 - - "
"u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTrack",766,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TA2CentralTrack' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TooManyTracks",1327,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TooManyTracksSingleMwpc",2344,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalyseNaI",1253,G__UserDict_815_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysePid",1290,G__UserDict_815_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalyseMwpc",1412,G__UserDict_815_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracks",1014,G__UserDict_815_0_31, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksPtr",1324,G__UserDict_815_0_32, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTracks",904,G__UserDict_815_0_33, 85, G__get_linked_tagnum(&G__UserDictLN_TA2CentralTrack), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNch",569,G__UserDict_815_0_34, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNchPtr",879,G__UserDict_815_0_35, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIchTracks",1180,G__UserDict_815_0_36, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNne",577,G__UserDict_815_0_37, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNnePtr",887,G__UserDict_815_0_38, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIneTracks",1188,G__UserDict_815_0_39, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksSingleMwpc",2031,G__UserDict_815_0_40, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksSingleMwpcPtr",2341,G__UserDict_815_0_41, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksSingleMwpcBest",2429,G__UserDict_815_0_42, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtracksSingleMwpcBestPtr",2739,G__UserDict_815_0_43, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticles",1223,G__UserDict_815_0_44, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", "***", (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__UserDict_815_0_45, 117, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", "***", (void*) NULL, 0);
   G__memfunc_setup("GetNparticles",1333,G__UserDict_815_0_46, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "***", (void*) NULL, 0);
   G__memfunc_setup("GetNParticles",1301,G__UserDict_815_0_47, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "***", (void*) NULL, 0);
   G__memfunc_setup("MakeVertexes",1236,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNvertexes",1252,G__UserDict_815_0_49, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertexes",1142,G__UserDict_815_0_50, 85, G__get_linked_tagnum(&G__UserDictLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticleInfo",1481,G__UserDict_815_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TA2CentralTrack' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TA2CentralApparatus",1857,G__UserDict_815_0_52, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "pass ptr to analyser", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "event by event analysis", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "setup decode in implement", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset event", (void*) NULL, 1);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "flush local new store", (void*) NULL, 1);
   G__memfunc_setup("MarkEndBuffers",1391,G__UserDict_815_0_60, 121, -1, -1, 0, 0, 1, 1, 0, "", "Mark EndBuffer for the output arrays", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_815_0_61, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CentralApparatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_815_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CentralApparatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_815_0_63, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CentralApparatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_815_0_64, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CentralApparatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_815_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_815_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CentralApparatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_815_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CentralApparatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_815_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CentralApparatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_815_0_72, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CentralApparatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CentralApparatus", 1857, G__UserDict_815_0_73, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CentralApparatus), -1, 0, 1, 1, 1, 0, "u 'TA2CentralApparatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CentralApparatus", 1983, G__UserDict_815_0_74, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Event(void) {
   /* TA2Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Event));
   G__memfunc_setup("TA2Event",713,G__UserDict_821_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeam",661,G__UserDict_821_0_2, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeam",661,G__UserDict_821_0_3, 117, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__UserDict_821_0_4, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__UserDict_821_0_5, 117, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBeam",739,G__UserDict_821_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNParticle",1186,G__UserDict_821_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventNumber",1419,G__UserDict_821_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetL1Pattern",1147,G__UserDict_821_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetL2Pattern",1148,G__UserDict_821_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBeam",638,G__UserDict_821_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TA2Particle' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__UserDict_821_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TA2Particle' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__UserDict_821_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventNumber",1431,G__UserDict_821_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventNumber",1431,G__UserDict_821_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL1Pattern",1159,G__UserDict_821_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pPatternL1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL2Pattern",1160,G__UserDict_821_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pPatternL2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_821_0_18, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_821_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_821_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_821_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_821_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_821_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_821_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_821_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_821_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Event", 713, G__UserDict_821_0_30, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2Event), -1, 0, 1, 1, 1, 0, "u 'TA2Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Event", 839, G__UserDict_821_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UserDict_821_0_32, (int) ('u'), G__get_linked_tagnum(&G__UserDictLN_TA2Event), -1, 1, 1, 1, 1, 0, "u 'TA2Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Trigger(void) {
   /* TA2Trigger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Trigger));
   G__memfunc_setup("TA2Trigger",923,G__UserDict_823_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2Trigger), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseTrees",1017,G__UserDict_823_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_823_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Trigger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_823_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Trigger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_823_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Trigger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_823_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Trigger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_823_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_823_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Trigger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_823_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Trigger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_823_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Trigger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_823_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Trigger::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Trigger", 923, G__UserDict_823_0_20, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2Trigger), -1, 0, 1, 1, 1, 0, "u 'TA2Trigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Trigger", 1049, G__UserDict_823_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CylWireSven(void) {
   /* TA2CylWireSven */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven));
   G__memfunc_setup("TA2CylWireSven",1314,G__UserDict_824_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"Y - - 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CGCluster",876,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRadius",904,G__UserDict_824_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__UserDict_824_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiCor",869,G__UserDict_824_0_5, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiCor",869,G__UserDict_824_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_824_0_7, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CylWireSven::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_824_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylWireSven::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_824_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CylWireSven::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_824_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CylWireSven::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_824_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_824_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylWireSven::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_824_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylWireSven::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_824_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylWireSven::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_824_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylWireSven::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CylWireSven", 1314, G__UserDict_824_0_19, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CylWireSven), -1, 0, 1, 1, 1, 0, "u 'TA2CylWireSven' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CylWireSven", 1440, G__UserDict_824_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2TAPS_PbWO4(void) {
   /* TA2TAPS_PbWO4 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4));
   G__memfunc_setup("TA2TAPS_PbWO4",1002,G__UserDict_825_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display/cut setup", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_825_0_6, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TAPS_PbWO4::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_825_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS_PbWO4::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_825_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TAPS_PbWO4::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_825_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TAPS_PbWO4::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_825_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_825_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS_PbWO4::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_825_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS_PbWO4::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_825_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS_PbWO4::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_825_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS_PbWO4::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TAPS_PbWO4", 1002, G__UserDict_825_0_18, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_PbWO4), -1, 0, 1, 1, 1, 0, "u 'TA2TAPS_PbWO4' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TAPS_PbWO4", 1128, G__UserDict_825_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2TAPS2008(void) {
   /* TA2TAPS2008 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008));
   G__memfunc_setup("GetParticles",1223,G__UserDict_826_0_1, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__UserDict_826_0_2, 117, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNparticles",1333,G__UserDict_826_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNParticles",1301,G__UserDict_826_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleInfo",1516,G__UserDict_826_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - NrParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TA2TAPS2008",713,G__UserDict_826_0_6, 105, G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - line i - - 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeAllRootinos",1524,G__UserDict_826_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SimplePhotonReconstruct",2430,G__UserDict_826_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MainReconstruct",1569,G__UserDict_826_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLorentzVector",1677,G__UserDict_826_0_15, 117, G__get_linked_tagnum(&G__UserDictLN_TLorentzVector), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mass U 'HitCluster_t' - 0 - cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCal",560,G__UserDict_826_0_17, 85, G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVeto",702,G__UserDict_826_0_18, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckParticleID",1439,G__UserDict_826_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_826_0_20, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TAPS2008::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_826_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS2008::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_826_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TAPS2008::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_826_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TAPS2008::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_826_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_826_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS2008::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_826_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS2008::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_826_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS2008::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_826_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS2008::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TAPS2008", 713, G__UserDict_826_0_32, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2TAPS2008), -1, 0, 1, 1, 1, 0, "u 'TA2TAPS2008' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TAPS2008", 839, G__UserDict_826_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Compton(void) {
   /* TA2Compton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Compton));
   G__memfunc_setup("TA2Compton",935,G__UserDict_827_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2Compton), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sort2Photon",1106,G__UserDict_827_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortNPhoton",1134,G__UserDict_827_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkUndefined",1309,G__UserDict_827_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - jtagg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkEndBuffer",1276,G__UserDict_827_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sqr",310,G__UserDict_827_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MsepCut",705,G__UserDict_827_0_12, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"g - 'Bool_t' 0 - cutlo h - 'UInt_t' 0 - chan "
"d - 'Double_t' 0 - cmth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_827_0_13, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Compton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_827_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Compton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_827_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Compton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_827_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Compton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_827_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_827_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Compton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_827_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Compton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_827_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Compton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_827_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Compton::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Compton", 935, G__UserDict_827_0_25, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2Compton), -1, 0, 1, 1, 1, 0, "u 'TA2Compton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Compton", 1061, G__UserDict_827_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2FPMicro(void) {
   /* TA2FPMicro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro));
   G__memfunc_setup("TA2FPMicro",855,G__UserDict_831_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "end-of-event cleanup", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "register variables for plot", (void*) NULL, 1);
   G__memfunc_setup("GetFPhits",878,G__UserDict_831_0_9, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFPhits",956,G__UserDict_831_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFPelem",935,G__UserDict_831_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_831_0_12, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2FPMicro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_831_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FPMicro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_831_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2FPMicro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_831_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2FPMicro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_831_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_831_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FPMicro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_831_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2FPMicro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_831_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FPMicro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_831_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2FPMicro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2FPMicro", 855, G__UserDict_831_0_24, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro), -1, 0, 1, 1, 1, 0, "u 'TA2FPMicro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2FPMicro", 981, G__UserDict_831_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2GenericApp(void) {
   /* TA2GenericApp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp));
   G__memfunc_setup("TA2GenericApp",1189,G__UserDict_832_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "pass ptr to analyser", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("GetGenDet",855,G__UserDict_832_0_7, 85, G__get_linked_tagnum(&G__UserDictLN_TA2GenericDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLScint",877,G__UserDict_832_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TA2LongScint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLTrig",770,G__UserDict_832_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TA2LongScint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrig",694,G__UserDict_832_0_10, 85, G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_832_0_11, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2GenericApp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_832_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_832_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2GenericApp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_832_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2GenericApp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_832_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_832_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_832_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericApp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_832_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_832_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericApp::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2GenericApp", 1189, G__UserDict_832_0_23, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp), -1, 0, 1, 1, 1, 0, "u 'TA2GenericApp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2GenericApp", 1315, G__UserDict_832_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Efficiency(void) {
   /* TA2Efficiency */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency));
   G__memfunc_setup("TA2Efficiency",1212,G__UserDict_833_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sort2Photon",1106,G__UserDict_833_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortNPhoton",1134,G__UserDict_833_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkUndefined",1309,G__UserDict_833_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - jtagg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkEndBuffer",1276,G__UserDict_833_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sqr",310,G__UserDict_833_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_833_0_12, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Efficiency::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_833_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Efficiency::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_833_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Efficiency::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_833_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Efficiency::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_833_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_833_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Efficiency::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_833_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Efficiency::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_833_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Efficiency::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_833_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Efficiency::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Efficiency", 1212, G__UserDict_833_0_24, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2Efficiency), -1, 0, 1, 1, 1, 0, "u 'TA2Efficiency' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Efficiency", 1338, G__UserDict_833_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Cristina(void) {
   /* TA2Cristina */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2Cristina));
   G__memfunc_setup("TA2Cristina",1028,G__UserDict_834_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2Cristina), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseTrees",1017,G__UserDict_834_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_834_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Cristina::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_834_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Cristina::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_834_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Cristina::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_834_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Cristina::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_834_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_834_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Cristina::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_834_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Cristina::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_834_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Cristina::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_834_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Cristina::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Cristina", 1028, G__UserDict_834_0_20, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2Cristina), -1, 0, 1, 1, 1, 0, "u 'TA2Cristina' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Cristina", 1154, G__UserDict_834_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2TAPS(void) {
   /* TA2TAPS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2TAPS));
   G__memfunc_setup("TA2TAPS",511,G__UserDict_835_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2TAPS), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "pass ptr to analyser", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "event by event analysis", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "setup decode in implement", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,G__UserDict_835_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("GetParticles",1223,G__UserDict_835_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__UserDict_835_0_10, 117, G__get_linked_tagnum(&G__UserDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNparticles",1333,G__UserDict_835_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNParticles",1301,G__UserDict_835_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleInfo",1516,G__UserDict_835_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaF2",571,G__UserDict_835_0_14, 85, G__get_linked_tagnum(&G__UserDictLN_TA2TAPS_BaF2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVetos",817,G__UserDict_835_0_15, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "Transform Vetoinformation in correct order", (void*) NULL, 0);
   G__memfunc_setup("GetClusterTime",1425,G__UserDict_835_0_16, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVetoInfo",1098,G__UserDict_835_0_17, 71, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTofInfo",981,G__UserDict_835_0_18, 71, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPsaInfo",976,G__UserDict_835_0_19, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_835_0_20, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TAPS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_835_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_835_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TAPS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_835_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TAPS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_835_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_835_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_835_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_835_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_835_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPS::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TAPS", 511, G__UserDict_835_0_32, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2TAPS), -1, 0, 1, 1, 1, 0, "u 'TA2TAPS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TAPS", 637, G__UserDict_835_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2UserControl(void) {
   /* TA2UserControl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl));
   G__memfunc_setup("TA2UserControl",1351,G__UserDict_843_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2UserControl), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - I - - 0 - - "
"C - - 2 - - Y - - 0 'NULL' - "
"i - - 0 '-1' - g - 'Bool_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateAnalyser",1427,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_843_0_3, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2UserControl::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_843_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserControl::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_843_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2UserControl::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_843_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2UserControl::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_843_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_843_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserControl::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_843_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserControl::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_843_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserControl::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_843_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserControl::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2UserControl", 1477, G__UserDict_843_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2ParaPerpTest(void) {
   /* TA2ParaPerpTest */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest));
   G__memfunc_setup("TA2ParaPerpTest",1410,G__UserDict_844_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreatChild",979,G__UserDict_844_0_6, 85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZeroAll",697,G__UserDict_844_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__UserDict_844_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_844_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2ParaPerpTest::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_844_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ParaPerpTest::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_844_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2ParaPerpTest::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_844_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2ParaPerpTest::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_844_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_844_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ParaPerpTest::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_844_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2ParaPerpTest::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_844_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ParaPerpTest::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_844_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2ParaPerpTest::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2ParaPerpTest", 1410, G__UserDict_844_0_21, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2ParaPerpTest), -1, 0, 1, 1, 1, 0, "u 'TA2ParaPerpTest' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2ParaPerpTest", 1536, G__UserDict_844_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CosmicCal(void) {
   /* TA2CosmicCal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal));
   G__memfunc_setup("TA2CosmicCal",1077,G__UserDict_845_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "pass ptr to analyser", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("GetLScint",877,G__UserDict_845_0_7, 85, G__get_linked_tagnum(&G__UserDictLN_TA2LongScint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLTrig",770,G__UserDict_845_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TA2LongScint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrig",694,G__UserDict_845_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_845_0_10, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CosmicCal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_845_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CosmicCal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_845_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CosmicCal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_845_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CosmicCal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_845_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_845_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CosmicCal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_845_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CosmicCal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_845_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CosmicCal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_845_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CosmicCal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CosmicCal", 1077, G__UserDict_845_0_22, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CosmicCal), -1, 0, 1, 1, 1, 0, "u 'TA2CosmicCal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CosmicCal", 1203, G__UserDict_845_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncUserDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
   G__memvar_setup((void*)(&gAR),85,0,0,G__get_linked_tagnum(&G__UserDictLN_TAcquRoot),-1,-1,1,"gAR=",0,(char*)NULL);
   G__memvar_setup((void*)(&gAN),85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Analysis),-1,-1,1,"gAN=",0,(char*)NULL);
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {
}

static void G__cpp_setup_global10() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalUserDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
  G__cpp_setup_global10();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcUserDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__UserDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2TrackLine = { "TA2TrackLine" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MwpcTrack = { "TA2MwpcTrack" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__UserDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__UserDictLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR = { "map<double,int,less<double>,allocator<pair<const double,int> > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TApplication = { "TApplication" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2System = { "TA2System" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Analysis = { "TA2Analysis" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TAcquRoot = { "TAcquRoot" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2DataManager = { "TA2DataManager" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2HistManager = { "TA2HistManager" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Detector = { "TA2Detector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_HitD2A_t = { "HitD2A_t" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2ClusterDetector = { "TA2ClusterDetector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_HitCluster_t = { "HitCluster_t" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2TAPS_BaF2 = { "TA2TAPS_BaF2" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2PlasticPID = { "TA2PlasticPID" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Particle = { "TA2Particle" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Apparatus = { "TA2Apparatus" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Calorimeter = { "TA2Calorimeter" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Physics = { "TA2Physics" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2TAPS2009 = { "TA2TAPS2009" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2WCLayer = { "TA2WCLayer" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2UserAnalysis = { "TA2UserAnalysis" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2WCLayerSven = { "TA2WCLayerSven" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CylStripSven = { "TA2CylStripSven" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Taps2009LE = { "TA2Taps2009LE" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CylMWPC = { "TA2CylMWPC" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CrystalBall = { "TA2CrystalBall" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Ladder = { "TA2Ladder" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Tagger = { "TA2Tagger" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2PhotoPhysics = { "TA2PhotoPhysics" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2ThreshPi0 = { "TA2ThreshPi0" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2UserPhysics = { "TA2UserPhysics" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TGraph2D = { "TGraph2D" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2WireChamber = { "TA2WireChamber" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CylMwpcStrip = { "TA2CylMwpcStrip" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CylMwpcStripcLcLEHelicity = { "TA2CylMwpcStrip::EHelicity" , 101 , -1 };
G__linked_taginfo G__UserDictLN_TA2CylMwpcWire = { "TA2CylMwpcWire" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MwpcIntersection = { "TA2MwpcIntersection" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MwpcIntersectioncLcLEType = { "TA2MwpcIntersection::EType" , 101 , -1 };
G__linked_taginfo G__UserDictLN_TA2CylMwpc = { "TA2CylMwpc" , 99 , -1 };
G__linked_taginfo G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR = { "map<double,pair<int,int>,less<double>,allocator<pair<const double,pair<int,int> > > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_maplEintcOTGraph2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGraph2DmUgRsPgRsPgR = { "map<int,TGraph2D*,less<int>,allocator<pair<const int,TGraph2D*> > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CalArray = { "TA2CalArray" , 99 , -1 };
G__linked_taginfo G__UserDictLN_HitClusterUCLA_t = { "HitClusterUCLA_t" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CentralTrack = { "TA2CentralTrack" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CentralApparatus = { "TA2CentralApparatus" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Event = { "TA2Event" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Trigger = { "TA2Trigger" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CylWireSven = { "TA2CylWireSven" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2TAPS_PbWO4 = { "TA2TAPS_PbWO4" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2TAPS2008 = { "TA2TAPS2008" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Compton = { "TA2Compton" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2GenericDetector = { "TA2GenericDetector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2LongScint = { "TA2LongScint" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2FPMicro = { "TA2FPMicro" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2GenericApp = { "TA2GenericApp" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Efficiency = { "TA2Efficiency" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Cristina = { "TA2Cristina" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2TAPS = { "TA2TAPS" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TRint = { "TRint" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Control = { "TA2Control" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2UserControl = { "TA2UserControl" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2ParaPerpTest = { "TA2ParaPerpTest" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CosmicCal = { "TA2CosmicCal" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableUserDict() {
  G__UserDictLN_TClass.tagnum = -1 ;
  G__UserDictLN_TBuffer.tagnum = -1 ;
  G__UserDictLN_TMemberInspector.tagnum = -1 ;
  G__UserDictLN_TObject.tagnum = -1 ;
  G__UserDictLN_TNamed.tagnum = -1 ;
  G__UserDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_TVector2.tagnum = -1 ;
  G__UserDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__UserDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__UserDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__UserDictLN_TVector3.tagnum = -1 ;
  G__UserDictLN_TLorentzVector.tagnum = -1 ;
  G__UserDictLN_TA2TrackLine.tagnum = -1 ;
  G__UserDictLN_TA2MwpcTrack.tagnum = -1 ;
  G__UserDictLN_TRandom3.tagnum = -1 ;
  G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__UserDictLN_TFile.tagnum = -1 ;
  G__UserDictLN_TTree.tagnum = -1 ;
  G__UserDictLN_pairlEintcOintgR.tagnum = -1 ;
  G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_TQObject.tagnum = -1 ;
  G__UserDictLN_TApplication.tagnum = -1 ;
  G__UserDictLN_TA2System.tagnum = -1 ;
  G__UserDictLN_TA2Analysis.tagnum = -1 ;
  G__UserDictLN_TAcquRoot.tagnum = -1 ;
  G__UserDictLN_TH1F.tagnum = -1 ;
  G__UserDictLN_TCutG.tagnum = -1 ;
  G__UserDictLN_TA2DataManager.tagnum = -1 ;
  G__UserDictLN_TH1D.tagnum = -1 ;
  G__UserDictLN_TH2F.tagnum = -1 ;
  G__UserDictLN_TA2HistManager.tagnum = -1 ;
  G__UserDictLN_TA2Detector.tagnum = -1 ;
  G__UserDictLN_HitD2A_t.tagnum = -1 ;
  G__UserDictLN_TA2ClusterDetector.tagnum = -1 ;
  G__UserDictLN_HitCluster_t.tagnum = -1 ;
  G__UserDictLN_TA2TAPS_BaF2.tagnum = -1 ;
  G__UserDictLN_TA2PlasticPID.tagnum = -1 ;
  G__UserDictLN_TA2Particle.tagnum = -1 ;
  G__UserDictLN_TA2Apparatus.tagnum = -1 ;
  G__UserDictLN_TA2Calorimeter.tagnum = -1 ;
  G__UserDictLN_TNtuple.tagnum = -1 ;
  G__UserDictLN_TA2Physics.tagnum = -1 ;
  G__UserDictLN_TA2TAPS2009.tagnum = -1 ;
  G__UserDictLN_TA2WCLayer.tagnum = -1 ;
  G__UserDictLN_TA2UserAnalysis.tagnum = -1 ;
  G__UserDictLN_TA2WCLayerSven.tagnum = -1 ;
  G__UserDictLN_TA2CylStripSven.tagnum = -1 ;
  G__UserDictLN_TA2Taps2009LE.tagnum = -1 ;
  G__UserDictLN_TA2CylMWPC.tagnum = -1 ;
  G__UserDictLN_TA2CrystalBall.tagnum = -1 ;
  G__UserDictLN_TA2Ladder.tagnum = -1 ;
  G__UserDictLN_TA2Tagger.tagnum = -1 ;
  G__UserDictLN_TA2PhotoPhysics.tagnum = -1 ;
  G__UserDictLN_TA2ThreshPi0.tagnum = -1 ;
  G__UserDictLN_TA2UserPhysics.tagnum = -1 ;
  G__UserDictLN_TGraph2D.tagnum = -1 ;
  G__UserDictLN_TA2WireChamber.tagnum = -1 ;
  G__UserDictLN_TA2CylMwpcStrip.tagnum = -1 ;
  G__UserDictLN_TA2CylMwpcStripcLcLEHelicity.tagnum = -1 ;
  G__UserDictLN_TA2CylMwpcWire.tagnum = -1 ;
  G__UserDictLN_TA2MwpcIntersection.tagnum = -1 ;
  G__UserDictLN_TA2MwpcIntersectioncLcLEType.tagnum = -1 ;
  G__UserDictLN_TA2CylMwpc.tagnum = -1 ;
  G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_maplEintcOTGraph2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGraph2DmUgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_TA2CalArray.tagnum = -1 ;
  G__UserDictLN_HitClusterUCLA_t.tagnum = -1 ;
  G__UserDictLN_TA2CentralTrack.tagnum = -1 ;
  G__UserDictLN_TA2CentralApparatus.tagnum = -1 ;
  G__UserDictLN_TA2Event.tagnum = -1 ;
  G__UserDictLN_TA2Trigger.tagnum = -1 ;
  G__UserDictLN_TA2CylWireSven.tagnum = -1 ;
  G__UserDictLN_TA2TAPS_PbWO4.tagnum = -1 ;
  G__UserDictLN_TA2TAPS2008.tagnum = -1 ;
  G__UserDictLN_TA2Compton.tagnum = -1 ;
  G__UserDictLN_TA2GenericDetector.tagnum = -1 ;
  G__UserDictLN_TA2LongScint.tagnum = -1 ;
  G__UserDictLN_TA2FPMicro.tagnum = -1 ;
  G__UserDictLN_TA2GenericApp.tagnum = -1 ;
  G__UserDictLN_TA2Efficiency.tagnum = -1 ;
  G__UserDictLN_TA2Cristina.tagnum = -1 ;
  G__UserDictLN_TA2TAPS.tagnum = -1 ;
  G__UserDictLN_TRint.tagnum = -1 ;
  G__UserDictLN_TA2Control.tagnum = -1 ;
  G__UserDictLN_TA2UserControl.tagnum = -1 ;
  G__UserDictLN_TA2ParaPerpTest.tagnum = -1 ;
  G__UserDictLN_TA2CosmicCal.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableUserDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__UserDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TVector2);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2TrackLine),sizeof(TA2TrackLine),-1,292096,"Particle track line",G__setup_memvarTA2TrackLine,G__setup_memfuncTA2TrackLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MwpcTrack),sizeof(TA2MwpcTrack),-1,292096,"MWPC track",G__setup_memvarTA2MwpcTrack,G__setup_memfuncTA2MwpcTrack);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__UserDictLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TApplication);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2System);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Analysis);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TAcquRoot);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TCutG);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2DataManager);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2HistManager);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Detector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_HitD2A_t);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2ClusterDetector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_HitCluster_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2TAPS_BaF2),sizeof(TA2TAPS_BaF2),-1,324608,(char*)NULL,G__setup_memvarTA2TAPS_BaF2,G__setup_memfuncTA2TAPS_BaF2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2PlasticPID),sizeof(TA2PlasticPID),-1,324608,(char*)NULL,G__setup_memvarTA2PlasticPID,G__setup_memfuncTA2PlasticPID);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Particle);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Apparatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Calorimeter),sizeof(TA2Calorimeter),-1,324608,(char*)NULL,G__setup_memvarTA2Calorimeter,G__setup_memfuncTA2Calorimeter);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Physics),sizeof(TA2Physics),-1,324608,(char*)NULL,G__setup_memvarTA2Physics,G__setup_memfuncTA2Physics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2TAPS2009),sizeof(TA2TAPS2009),-1,324608,(char*)NULL,G__setup_memvarTA2TAPS2009,G__setup_memfuncTA2TAPS2009);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2WCLayer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2UserAnalysis),sizeof(TA2UserAnalysis),-1,324608,(char*)NULL,G__setup_memvarTA2UserAnalysis,G__setup_memfuncTA2UserAnalysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2WCLayerSven),sizeof(TA2WCLayerSven),-1,323584,(char*)NULL,G__setup_memvarTA2WCLayerSven,G__setup_memfuncTA2WCLayerSven);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CylStripSven),sizeof(TA2CylStripSven),-1,323584,(char*)NULL,G__setup_memvarTA2CylStripSven,G__setup_memfuncTA2CylStripSven);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Taps2009LE),sizeof(TA2Taps2009LE),-1,324608,(char*)NULL,G__setup_memvarTA2Taps2009LE,G__setup_memfuncTA2Taps2009LE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CylMWPC),sizeof(TA2CylMWPC),-1,324608,(char*)NULL,G__setup_memvarTA2CylMWPC,G__setup_memfuncTA2CylMWPC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CrystalBall),sizeof(TA2CrystalBall),-1,324608,(char*)NULL,G__setup_memvarTA2CrystalBall,G__setup_memfuncTA2CrystalBall);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Ladder);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Tagger);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2PhotoPhysics),sizeof(TA2PhotoPhysics),-1,324608,(char*)NULL,G__setup_memvarTA2PhotoPhysics,G__setup_memfuncTA2PhotoPhysics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2ThreshPi0),sizeof(TA2ThreshPi0),-1,324608,(char*)NULL,G__setup_memvarTA2ThreshPi0,G__setup_memfuncTA2ThreshPi0);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2UserPhysics),sizeof(TA2UserPhysics),-1,324608,(char*)NULL,G__setup_memvarTA2UserPhysics,G__setup_memfuncTA2UserPhysics);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TGraph2D);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2WireChamber);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CylMwpcStrip),sizeof(TA2CylMwpcStrip),-1,323584,"Strip layer for cylindrical MWPC",G__setup_memvarTA2CylMwpcStrip,G__setup_memfuncTA2CylMwpcStrip);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CylMwpcStripcLcLEHelicity);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CylMwpcWire),sizeof(TA2CylMwpcWire),-1,323584,(char*)NULL,G__setup_memvarTA2CylMwpcWire,G__setup_memfuncTA2CylMwpcWire);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MwpcIntersection),sizeof(TA2MwpcIntersection),-1,292096,"MWPC wire-strip-strip intersection",G__setup_memvarTA2MwpcIntersection,G__setup_memfuncTA2MwpcIntersection);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MwpcIntersectioncLcLEType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CylMwpc),sizeof(TA2CylMwpc),-1,324608,"Cylindrical MWPC events reconstructions",G__setup_memvarTA2CylMwpc,G__setup_memfuncTA2CylMwpc);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplEintcOTGraph2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGraph2DmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CalArray),sizeof(TA2CalArray),-1,324608,(char*)NULL,G__setup_memvarTA2CalArray,G__setup_memfuncTA2CalArray);
   G__get_linked_tagnum_fwd(&G__UserDictLN_HitClusterUCLA_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CentralTrack),sizeof(TA2CentralTrack),-1,292096,"A2CB central track (PID-MWPC-NaI)",G__setup_memvarTA2CentralTrack,G__setup_memfuncTA2CentralTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CentralApparatus),sizeof(TA2CentralApparatus),-1,324608,"Central detector tracks reconstruction (PID+MWPC+CB)",G__setup_memvarTA2CentralApparatus,G__setup_memfuncTA2CentralApparatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Event),sizeof(TA2Event),-1,292096,(char*)NULL,G__setup_memvarTA2Event,G__setup_memfuncTA2Event);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Trigger),sizeof(TA2Trigger),-1,324608,(char*)NULL,G__setup_memvarTA2Trigger,G__setup_memfuncTA2Trigger);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CylWireSven),sizeof(TA2CylWireSven),-1,323584,(char*)NULL,G__setup_memvarTA2CylWireSven,G__setup_memfuncTA2CylWireSven);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2TAPS_PbWO4),sizeof(TA2TAPS_PbWO4),-1,324608,(char*)NULL,G__setup_memvarTA2TAPS_PbWO4,G__setup_memfuncTA2TAPS_PbWO4);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2TAPS2008),sizeof(TA2TAPS2008),-1,324608,(char*)NULL,G__setup_memvarTA2TAPS2008,G__setup_memfuncTA2TAPS2008);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Compton),sizeof(TA2Compton),-1,324608,(char*)NULL,G__setup_memvarTA2Compton,G__setup_memfuncTA2Compton);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2GenericDetector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2LongScint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2FPMicro),sizeof(TA2FPMicro),-1,62464,(char*)NULL,G__setup_memvarTA2FPMicro,G__setup_memfuncTA2FPMicro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2GenericApp),sizeof(TA2GenericApp),-1,324608,(char*)NULL,G__setup_memvarTA2GenericApp,G__setup_memfuncTA2GenericApp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Efficiency),sizeof(TA2Efficiency),-1,324608,(char*)NULL,G__setup_memvarTA2Efficiency,G__setup_memfuncTA2Efficiency);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Cristina),sizeof(TA2Cristina),-1,324608,(char*)NULL,G__setup_memvarTA2Cristina,G__setup_memfuncTA2Cristina);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2TAPS),sizeof(TA2TAPS),-1,324608,(char*)NULL,G__setup_memvarTA2TAPS,G__setup_memfuncTA2TAPS);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TRint);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Control);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2UserControl),sizeof(TA2UserControl),-1,323584,(char*)NULL,G__setup_memvarTA2UserControl,G__setup_memfuncTA2UserControl);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2ParaPerpTest),sizeof(TA2ParaPerpTest),-1,324608,(char*)NULL,G__setup_memvarTA2ParaPerpTest,G__setup_memfuncTA2ParaPerpTest);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CosmicCal),sizeof(TA2CosmicCal),-1,324608,(char*)NULL,G__setup_memvarTA2CosmicCal,G__setup_memfuncTA2CosmicCal);
}
extern "C" void G__cpp_setupUserDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupUserDict()");
  G__set_cpp_environmentUserDict();
  G__cpp_setup_tagtableUserDict();

  G__cpp_setup_inheritanceUserDict();

  G__cpp_setup_typetableUserDict();

  G__cpp_setup_memvarUserDict();

  G__cpp_setup_memfuncUserDict();
  G__cpp_setup_globalUserDict();
  G__cpp_setup_funcUserDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncUserDict();
  return;
}
class G__cpp_setup_initUserDict {
  public:
    G__cpp_setup_initUserDict() { G__add_setup_func("UserDict",(G__incsetup)(&G__cpp_setupUserDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initUserDict() { G__remove_setup_func("UserDict"); }
};
G__cpp_setup_initUserDict G__cpp_setup_initializerUserDict;

